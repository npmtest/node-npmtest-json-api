{"/home/travis/build/npmtest/node-npmtest-json-api/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_json_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-json-api/lib.npmtest_json_api.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/lib.npmtest_json_api.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_json_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_json_api = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_json_api = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-json-api/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-json-api && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_json_api */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_json_api","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_json_api.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_json_api.rollup.js'] =","            local.assetsDict['/assets.npmtest_json_api.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_json_api.__dirname + '/lib.npmtest_json_api.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/index.js","s":{"1":1,"2":16,"3":16,"4":14},"b":{},"f":{"1":16,"2":16,"3":14},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":19}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":15},"end":{"line":14,"column":18}}},"3":{"name":"(anonymous_3)","line":17,"loc":{"start":{"line":17,"column":11},"end":{"line":17,"column":14}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":38,"column":2}},"2":{"start":{"line":10,"column":6},"end":{"line":10,"column":72}},"3":{"start":{"line":15,"column":6},"end":{"line":15,"column":59}},"4":{"start":{"line":18,"column":6},"end":{"line":18,"column":55}}},"branchMap":{},"code":["/**"," * Peer dependencies may or may not be installed (npm@3 doesn't install them"," * automatically, and users may not need every peer dependency if they bring"," * their own adapters/strategies). So the code below only tries to require them"," * when they're asked for, as doing otherwise can cause errors."," */","module.exports = {","  dbAdapters: {","    get Mongoose() {","      return require('./build/src/db-adapters/Mongoose/MongooseAdapter')","    }","  },","  httpStrategies: {","    get Express() {","      return require('./build/src/http-strategies/Express')","    },","    get Koa() {","      return require('./build/src/http-strategies/Koa')","    }","  },","  types: {","    Collection: require('./build/src/types/Collection'),","    Document: require('./build/src/types/Document'),","    Error: require('./build/src/types/APIError'),","    Resource: require('./build/src/types/Resource'),","    Relationship: require('./build/src/types/Relationship'),","    Linkage: require('./build/src/types/Linkage'),","    Documentation: {","      Field: require('./build/src/types/Documentation/Field'),","      FieldType: require('./build/src/types/Documentation/FieldType')","    }","  },","  controllers: {","    API: require('./build/src/controllers/API'),","    Documentation: require('./build/src/controllers/Documentation')","  },","  ResourceTypeRegistry: require('./build/src/ResourceTypeRegistry')","};",""],"l":{"7":1,"10":16,"15":16,"18":14}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Collection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":1,"17":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":18},"end":{"line":11,"column":30}}},"2":{"name":"Collection","line":12,"loc":{"start":{"line":12,"column":2},"end":{"line":12,"column":24}}},"3":{"name":"add","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":34}}},"4":{"name":"get","line":27,"loc":{"start":{"line":27,"column":9},"end":{"line":27,"column":24}}},"5":{"name":"(anonymous_5)","line":28,"loc":{"start":{"line":28,"column":32},"end":{"line":28,"column":46}}},"6":{"name":"get","line":34,"loc":{"start":{"line":34,"column":9},"end":{"line":34,"column":24}}},"7":{"name":"(anonymous_7)","line":35,"loc":{"start":{"line":35,"column":32},"end":{"line":35,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":42,"column":5}},"5":{"start":{"line":12,"column":2},"end":{"line":18,"column":3}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":92}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":38}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":31}},"9":{"start":{"line":20,"column":2},"end":{"line":39,"column":6}},"10":{"start":{"line":23,"column":6},"end":{"line":23,"column":36}},"11":{"start":{"line":28,"column":6},"end":{"line":30,"column":9}},"12":{"start":{"line":29,"column":8},"end":{"line":29,"column":21}},"13":{"start":{"line":35,"column":6},"end":{"line":37,"column":9}},"14":{"start":{"line":36,"column":8},"end":{"line":36,"column":23}},"15":{"start":{"line":41,"column":2},"end":{"line":41,"column":20}},"16":{"start":{"line":44,"column":0},"end":{"line":44,"column":32}},"17":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"branchMap":{"1":{"line":13,"type":"cond-expr","locations":[{"start":{"line":13,"column":74},"end":{"line":13,"column":76}},{"start":{"line":13,"column":79},"end":{"line":13,"column":91}}]},"2":{"line":13,"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":41}},{"start":{"line":13,"column":45},"end":{"line":13,"column":71}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var Collection = (function () {","  function Collection() {","    var resources = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];","","    _classCallCheck(this, Collection);","","    this.resources = resources;","  }","","  _createClass(Collection, [{","    key: \"add\",","    value: function add(resource) {","      this.resources.push(resource);","    }","  }, {","    key: \"ids\",","    get: function get() {","      return this.resources.map(function (it) {","        return it.id;","      });","    }","  }, {","    key: \"types\",","    get: function get() {","      return this.resources.map(function (it) {","        return it.type;","      });","    }","  }]);","","  return Collection;","})();","","exports[\"default\"] = Collection;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"12":1,"13":0,"15":0,"17":0,"20":1,"23":0,"28":0,"29":0,"35":0,"36":0,"41":1,"44":1,"45":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Document.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Document.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":16},"end":{"line":35,"column":28}}},"2":{"name":"Document","line":36,"loc":{"start":{"line":36,"column":2},"end":{"line":36,"column":75}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":77},"end":{"line":53,"column":105}}},"4":{"name":"get","line":62,"loc":{"start":{"line":62,"column":11},"end":{"line":62,"column":35}}},"5":{"name":"(anonymous_5)","line":75,"loc":{"start":{"line":75,"column":77},"end":{"line":75,"column":97}}},"6":{"name":"(anonymous_6)","line":90,"loc":{"start":{"line":90,"column":81},"end":{"line":90,"column":101}}},"7":{"name":"linkageToJSON","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":32}}},"8":{"name":"relationshipToJSON","line":108,"loc":{"start":{"line":108,"column":0},"end":{"line":108,"column":70}}},"9":{"name":"resourceToJSON","line":137,"loc":{"start":{"line":137,"column":0},"end":{"line":137,"column":48}}},"10":{"name":"errorToJSON","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":79}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":97}},"5":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":49}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":51}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":42}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":55}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":57}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":44}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":43}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":57}},"16":{"start":{"line":35,"column":0},"end":{"line":100,"column":5}},"17":{"start":{"line":36,"column":2},"end":{"line":58,"column":3}},"18":{"start":{"line":37,"column":4},"end":{"line":37,"column":36}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":51}},"20":{"start":{"line":41,"column":4},"end":{"line":41,"column":35}},"21":{"start":{"line":42,"column":4},"end":{"line":42,"column":28}},"22":{"start":{"line":43,"column":4},"end":{"line":43,"column":26}},"23":{"start":{"line":44,"column":4},"end":{"line":50,"column":5}},"24":{"start":{"line":45,"column":6},"end":{"line":49,"column":7}},"25":{"start":{"line":46,"column":8},"end":{"line":46,"column":25}},"26":{"start":{"line":48,"column":8},"end":{"line":48,"column":62}},"27":{"start":{"line":53,"column":4},"end":{"line":55,"column":7}},"28":{"start":{"line":54,"column":6},"end":{"line":54,"column":127}},"29":{"start":{"line":57,"column":4},"end":{"line":57,"column":25}},"30":{"start":{"line":60,"column":2},"end":{"line":97,"column":6}},"31":{"start":{"line":63,"column":6},"end":{"line":63,"column":23}},"32":{"start":{"line":65,"column":6},"end":{"line":65,"column":19}},"33":{"start":{"line":67,"column":6},"end":{"line":67,"column":42}},"34":{"start":{"line":67,"column":21},"end":{"line":67,"column":42}},"35":{"start":{"line":70,"column":6},"end":{"line":72,"column":7}},"36":{"start":{"line":71,"column":8},"end":{"line":71,"column":44}},"37":{"start":{"line":74,"column":6},"end":{"line":87,"column":9}},"38":{"start":{"line":75,"column":8},"end":{"line":77,"column":11}},"39":{"start":{"line":76,"column":10},"end":{"line":76,"column":62}},"40":{"start":{"line":78,"column":13},"end":{"line":87,"column":9}},"41":{"start":{"line":79,"column":8},"end":{"line":79,"column":55}},"42":{"start":{"line":80,"column":13},"end":{"line":87,"column":9}},"43":{"start":{"line":81,"column":8},"end":{"line":81,"column":40}},"44":{"start":{"line":86,"column":10},"end":{"line":86,"column":61}},"45":{"start":{"line":89,"column":6},"end":{"line":93,"column":7}},"46":{"start":{"line":90,"column":8},"end":{"line":92,"column":11}},"47":{"start":{"line":91,"column":10},"end":{"line":91,"column":62}},"48":{"start":{"line":95,"column":6},"end":{"line":95,"column":51}},"49":{"start":{"line":99,"column":2},"end":{"line":99,"column":18}},"50":{"start":{"line":102,"column":0},"end":{"line":102,"column":30}},"51":{"start":{"line":104,"column":0},"end":{"line":106,"column":1}},"52":{"start":{"line":105,"column":2},"end":{"line":105,"column":34}},"53":{"start":{"line":108,"column":0},"end":{"line":135,"column":1}},"54":{"start":{"line":109,"column":2},"end":{"line":109,"column":18}},"55":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"56":{"start":{"line":112,"column":4},"end":{"line":112,"column":54}},"57":{"start":{"line":116,"column":2},"end":{"line":132,"column":3}},"58":{"start":{"line":117,"column":4},"end":{"line":117,"column":174}},"59":{"start":{"line":119,"column":4},"end":{"line":119,"column":170}},"60":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"61":{"start":{"line":122,"column":6},"end":{"line":122,"column":24}},"62":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"63":{"start":{"line":126,"column":6},"end":{"line":126,"column":69}},"64":{"start":{"line":129,"column":4},"end":{"line":131,"column":5}},"65":{"start":{"line":130,"column":6},"end":{"line":130,"column":63}},"66":{"start":{"line":134,"column":2},"end":{"line":134,"column":16}},"67":{"start":{"line":137,"column":0},"end":{"line":169,"column":1}},"68":{"start":{"line":138,"column":2},"end":{"line":138,"column":16}},"69":{"start":{"line":139,"column":2},"end":{"line":139,"column":24}},"70":{"start":{"line":140,"column":2},"end":{"line":140,"column":28}},"71":{"start":{"line":141,"column":2},"end":{"line":141,"column":35}},"72":{"start":{"line":143,"column":2},"end":{"line":145,"column":3}},"73":{"start":{"line":144,"column":4},"end":{"line":144,"column":30}},"74":{"start":{"line":149,"column":2},"end":{"line":149,"column":46}},"75":{"start":{"line":150,"column":2},"end":{"line":150,"column":85}},"76":{"start":{"line":152,"column":2},"end":{"line":157,"column":3}},"77":{"start":{"line":153,"column":4},"end":{"line":153,"column":20}},"78":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"79":{"start":{"line":155,"column":6},"end":{"line":155,"column":58}},"80":{"start":{"line":159,"column":2},"end":{"line":166,"column":3}},"81":{"start":{"line":160,"column":4},"end":{"line":160,"column":28}},"82":{"start":{"line":162,"column":4},"end":{"line":165,"column":5}},"83":{"start":{"line":163,"column":6},"end":{"line":163,"column":90}},"84":{"start":{"line":164,"column":6},"end":{"line":164,"column":114}},"85":{"start":{"line":168,"column":2},"end":{"line":168,"column":14}},"86":{"start":{"line":171,"column":0},"end":{"line":179,"column":1}},"87":{"start":{"line":172,"column":2},"end":{"line":172,"column":15}},"88":{"start":{"line":173,"column":2},"end":{"line":177,"column":3}},"89":{"start":{"line":174,"column":4},"end":{"line":176,"column":5}},"90":{"start":{"line":175,"column":6},"end":{"line":175,"column":28}},"91":{"start":{"line":178,"column":2},"end":{"line":178,"column":13}},"92":{"start":{"line":180,"column":0},"end":{"line":180,"column":36}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":6}},{"start":{"line":45,"column":6},"end":{"line":45,"column":6}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":34}},{"start":{"line":45,"column":38},"end":{"line":45,"column":58}}]},"4":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":57},"end":{"line":53,"column":69}},{"start":{"line":53,"column":73},"end":{"line":53,"column":75}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":6},"end":{"line":67,"column":6}},{"start":{"line":67,"column":6},"end":{"line":67,"column":6}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":6}},{"start":{"line":70,"column":6},"end":{"line":70,"column":6}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":6}},{"start":{"line":74,"column":6},"end":{"line":74,"column":6}}]},"8":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":10},"end":{"line":74,"column":65}},{"start":{"line":74,"column":69},"end":{"line":74,"column":122}}]},"9":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":13},"end":{"line":78,"column":13}},{"start":{"line":78,"column":13},"end":{"line":78,"column":13}}]},"10":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":13},"end":{"line":80,"column":13}},{"start":{"line":80,"column":13},"end":{"line":80,"column":13}}]},"11":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"12":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":10},"end":{"line":89,"column":23}},{"start":{"line":89,"column":27},"end":{"line":89,"column":75}}]},"13":{"line":95,"type":"cond-expr","locations":[{"start":{"line":95,"column":25},"end":{"line":95,"column":44}},{"start":{"line":95,"column":47},"end":{"line":95,"column":50}}]},"14":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":9},"end":{"line":105,"column":16}},{"start":{"line":105,"column":20},"end":{"line":105,"column":33}}]},"15":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"16":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"17":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":63},"end":{"line":117,"column":126}},{"start":{"line":117,"column":129},"end":{"line":117,"column":173}}]},"18":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":57},"end":{"line":119,"column":117}},{"start":{"line":119,"column":120},"end":{"line":119,"column":169}}]},"19":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"20":{"line":121,"type":"binary-expr","locations":[{"start":{"line":121,"column":8},"end":{"line":121,"column":26}},{"start":{"line":121,"column":30},"end":{"line":121,"column":45}}]},"21":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"22":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"23":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"24":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":19}},{"start":{"line":143,"column":23},"end":{"line":143,"column":75}}]},"25":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":21},"end":{"line":150,"column":48}},{"start":{"line":150,"column":52},"end":{"line":150,"column":84}}]},"26":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"27":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":6},"end":{"line":152,"column":59}},{"start":{"line":152,"column":63},"end":{"line":152,"column":75}}]},"28":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"29":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"30":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _Linkage = require(\"./Linkage\");","","var _Linkage2 = _interopRequireDefault(_Linkage);","","var _Resource = require(\"./Resource\");","","var _Resource2 = _interopRequireDefault(_Resource);","","var _Collection = require(\"./Collection\");","","var _Collection2 = _interopRequireDefault(_Collection);","","var _utilTypeHandling = require(\"../util/type-handling\");","","var _utilArrays = require(\"../util/arrays\");","","var _urlTemplate = require(\"url-template\");","","var _urlTemplate2 = _interopRequireDefault(_urlTemplate);","","var Document = (function () {","  function Document(primaryOrErrors, included, meta, urlTemplates, reqURI) {","    _classCallCheck(this, Document);","","    // validate meta","    var _ref = [primaryOrErrors, included, reqURI];","    this.primaryOrErrors = _ref[0];","    this.included = _ref[1];","    this.reqURI = _ref[2];","    if (meta !== undefined) {","      if (typeof meta === \"object\" && !Array.isArray(meta)) {","        this.meta = meta;","      } else {","        throw new Error(\"Meta information must be an object\");","      }","    }","","    // parse all the templates once on construction.","    this.urlTemplates = (0, _utilTypeHandling.mapObject)(urlTemplates || {}, function (templatesForType) {","      return (0, _utilTypeHandling.mapObject)(templatesForType, _urlTemplate2[\"default\"].parse.bind(_urlTemplate2[\"default\"]));","    });","","    this.reqURI = reqURI;","  }","","  _createClass(Document, [{","    key: \"get\",","    value: function get(stringify) {","      var _this = this;","","      var doc = {};","","      if (this.meta) doc.meta = this.meta;","","      // TODO: top-level related link.","      if (this.reqURI) {","        doc.links = { \"self\": this.reqURI };","      }","","      if (this.primaryOrErrors instanceof _Collection2[\"default\"] || this.primaryOrErrors instanceof _Resource2[\"default\"]) {","        doc.data = (0, _utilTypeHandling.mapResources)(this.primaryOrErrors, function (resource) {","          return resourceToJSON(resource, _this.urlTemplates);","        });","      } else if (this.primaryOrErrors instanceof _Linkage2[\"default\"]) {","        doc.data = linkageToJSON(this.primaryOrErrors);","      } else if (this.primaryOrErrors === null) {","        doc.data = this.primaryOrErrors;","      }","","      // it's either resource, a collection, linkage, null, or errors...","      else {","          doc.errors = this.primaryOrErrors.map(errorToJSON);","        }","","      if (this.included && this.included instanceof _Collection2[\"default\"]) {","        doc.included = (0, _utilArrays.arrayUnique)(this.included.resources).map(function (resource) {","          return resourceToJSON(resource, _this.urlTemplates);","        });","      }","","      return stringify ? JSON.stringify(doc) : doc;","    }","  }]);","","  return Document;","})();","","exports[\"default\"] = Document;","","function linkageToJSON(linkage) {","  return linkage && linkage.value;","}","","function relationshipToJSON(relationship, urlTemplates, templateData) {","  var result = {};","","  if (relationship.linkage) {","    result.data = linkageToJSON(relationship.linkage);","  }","","  // Add urls that we can.","  if (urlTemplates[templateData.ownerType]) {","    var relatedUrlTemplate = relationship.relatedURITemplate ? _urlTemplate2[\"default\"].parse(relationship.relatedURITemplate) : urlTemplates[templateData.ownerType].related;","","    var selfUrlTemplate = relationship.selfURITemplate ? _urlTemplate2[\"default\"].parse(relationship.selfURITemplate) : urlTemplates[templateData.ownerType].relationship;","","    if (relatedUrlTemplate || selfUrlTemplate) {","      result.links = {};","    }","","    if (relatedUrlTemplate) {","      result.links.related = relatedUrlTemplate.expand(templateData);","    }","","    if (selfUrlTemplate) {","      result.links.self = selfUrlTemplate.expand(templateData);","    }","  }","","  return result;","}","","function resourceToJSON(resource, urlTemplates) {","  var json = {};","  json.id = resource.id;","  json.type = resource.type;","  json.attributes = resource.attrs;","","  if (resource.meta && !(0, _utilTypeHandling.objectIsEmpty)(resource.meta)) {","    json.meta = resource.meta;","  }","","  // use type, id, meta and attrs for template data, even though building","  // links from attr values is usually stupid (but there are cases for it).","  var templateData = _Object$assign({}, json);","  var selfTemplate = urlTemplates[resource.type] && urlTemplates[resource.type].self;","","  if (!(0, _utilTypeHandling.objectIsEmpty)(resource.links) || selfTemplate) {","    json.links = {};","    if (selfTemplate) {","      json.links.self = selfTemplate.expand(templateData);","    }","  }","","  if (!(0, _utilTypeHandling.objectIsEmpty)(resource.relationships)) {","    json.relationships = {};","","    for (var path in resource.relationships) {","      var linkTemplateData = { \"ownerType\": json.type, \"ownerId\": json.id, \"path\": path };","      json.relationships[path] = relationshipToJSON(resource.relationships[path], urlTemplates, linkTemplateData);","    }","  }","","  return json;","}","","function errorToJSON(error) {","  var res = {};","  for (var key in error) {","    if (error.hasOwnProperty(key)) {","      res[key] = error[key];","    }","  }","  return res;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"36":1,"37":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"48":0,"53":0,"54":0,"57":0,"60":1,"63":0,"65":0,"67":0,"70":0,"71":0,"74":0,"75":0,"76":0,"78":0,"79":0,"80":0,"81":0,"86":0,"89":0,"90":0,"91":0,"95":0,"99":1,"102":1,"104":1,"105":0,"108":1,"109":0,"111":0,"112":0,"116":0,"117":0,"119":0,"121":0,"122":0,"125":0,"126":0,"129":0,"130":0,"134":0,"137":1,"138":0,"139":0,"140":0,"141":0,"143":0,"144":0,"149":0,"150":0,"152":0,"153":0,"154":0,"155":0,"159":0,"160":0,"162":0,"163":0,"164":0,"168":0,"171":1,"172":0,"173":0,"174":0,"175":0,"178":0,"180":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Linkage.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Linkage.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":0,"27":1,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":15},"end":{"line":11,"column":27}}},"2":{"name":"Linkage","line":17,"loc":{"start":{"line":17,"column":2},"end":{"line":17,"column":26}}},"3":{"name":"set","line":25,"loc":{"start":{"line":25,"column":11},"end":{"line":25,"column":31}}},"4":{"name":"add","line":41,"loc":{"start":{"line":41,"column":11},"end":{"line":41,"column":34}}},"5":{"name":"empty","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":28}}},"6":{"name":"InvalidLinkageError","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}}},"7":{"name":"isValidLinkageObject","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":60,"column":5}},"5":{"start":{"line":17,"column":2},"end":{"line":21,"column":3}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":35}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":20}},"8":{"start":{"line":23,"column":2},"end":{"line":57,"column":6}},"9":{"start":{"line":26,"column":6},"end":{"line":37,"column":7}},"10":{"start":{"line":27,"column":8},"end":{"line":27,"column":27}},"11":{"start":{"line":28,"column":13},"end":{"line":37,"column":7}},"12":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"13":{"start":{"line":30,"column":10},"end":{"line":30,"column":29}},"14":{"start":{"line":32,"column":10},"end":{"line":32,"column":47}},"15":{"start":{"line":35,"column":8},"end":{"line":35,"column":24}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":43}},"17":{"start":{"line":42,"column":6},"end":{"line":50,"column":7}},"18":{"start":{"line":43,"column":8},"end":{"line":47,"column":9}},"19":{"start":{"line":44,"column":10},"end":{"line":44,"column":36}},"20":{"start":{"line":46,"column":10},"end":{"line":46,"column":50}},"21":{"start":{"line":49,"column":8},"end":{"line":49,"column":97}},"22":{"start":{"line":55,"column":6},"end":{"line":55,"column":57}},"23":{"start":{"line":59,"column":2},"end":{"line":59,"column":17}},"24":{"start":{"line":62,"column":0},"end":{"line":62,"column":29}},"25":{"start":{"line":64,"column":0},"end":{"line":66,"column":1}},"26":{"start":{"line":65,"column":2},"end":{"line":65,"column":70}},"27":{"start":{"line":68,"column":0},"end":{"line":70,"column":1}},"28":{"start":{"line":69,"column":2},"end":{"line":69,"column":66}},"29":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":13},"end":{"line":28,"column":13}},{"start":{"line":28,"column":13},"end":{"line":28,"column":13}}]},"3":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"4":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"6":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":47},"end":{"line":55,"column":49}},{"start":{"line":55,"column":52},"end":{"line":55,"column":56}}]},"7":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":9},"end":{"line":69,"column":36}},{"start":{"line":69,"column":40},"end":{"line":69,"column":65}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var Linkage = (function () {","  /**","   * Linkage can be either: null, an empty array,","   * an object of the form {type, id}, or [{type, id}].","   */","","  function Linkage(value) {","    _classCallCheck(this, Linkage);","","    this.set(value);","  }","","  _createClass(Linkage, [{","    key: \"set\",","    value: function set(value) {","      if (value === null) {","        this.value = value;","      } else if (!Array.isArray(value)) {","        if (isValidLinkageObject(value)) {","          this.value = value;","        } else {","          throw new InvalidLinkageError(value);","        }","      } else {","        this.value = [];","        value.forEach(this.add.bind(this));","      }","    }","  }, {","    key: \"add\",","    value: function add(newValue) {","      if (Array.isArray(this.value)) {","        if (isValidLinkageObject(newValue)) {","          this.value.push(newValue);","        } else {","          throw new InvalidLinkageError(newValue);","        }","      } else {","        throw new Error(\"You can only add values to Linkage objects for to-many relationships.\");","      }","    }","  }, {","    key: \"empty\",","    value: function empty() {","      this.value = Array.isArray(this.value) ? [] : null;","    }","  }]);","","  return Linkage;","})();","","exports[\"default\"] = Linkage;","","function InvalidLinkageError(value) {","  return new Error(\"Invalid linkage value: \" + JSON.stringify(value));","}","","function isValidLinkageObject(it) {","  return typeof it.type === \"string\" && typeof it.id === \"string\";","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"17":1,"18":0,"20":0,"23":1,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"35":0,"36":0,"42":0,"43":0,"44":0,"46":0,"49":0,"55":0,"59":1,"62":1,"64":1,"65":0,"68":1,"69":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Resource.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Resource.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":1,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":16},"end":{"line":13,"column":28}}},"2":{"name":"Resource","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":30}}},"3":{"name":"equals","line":49,"loc":{"start":{"line":49,"column":11},"end":{"line":49,"column":42}}},"4":{"name":"removeAttr","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":41}}},"5":{"name":"removeRelationship","line":61,"loc":{"start":{"line":61,"column":11},"end":{"line":61,"column":57}}},"6":{"name":"get","line":68,"loc":{"start":{"line":68,"column":9},"end":{"line":68,"column":24}}},"7":{"name":"set","line":71,"loc":{"start":{"line":71,"column":9},"end":{"line":71,"column":26}}},"8":{"name":"get","line":77,"loc":{"start":{"line":77,"column":9},"end":{"line":77,"column":24}}},"9":{"name":"set","line":80,"loc":{"start":{"line":80,"column":9},"end":{"line":80,"column":28}}},"10":{"name":"get","line":89,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":24}}},"11":{"name":"set","line":92,"loc":{"start":{"line":92,"column":9},"end":{"line":92,"column":29}}},"12":{"name":"get","line":98,"loc":{"start":{"line":98,"column":9},"end":{"line":98,"column":24}}},"13":{"name":"set","line":101,"loc":{"start":{"line":101,"column":9},"end":{"line":101,"column":37}}},"14":{"name":"validateFieldGroup","line":111,"loc":{"start":{"line":111,"column":0},"end":{"line":111,"column":62}}},"15":{"name":"validateComplexAttribute","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":50}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}},"5":{"start":{"line":13,"column":0},"end":{"line":108,"column":5}},"6":{"start":{"line":14,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":88}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":96}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":87}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":36}},"11":{"start":{"line":21,"column":4},"end":{"line":21,"column":54}},"12":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"13":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":25}},"15":{"start":{"line":25,"column":4},"end":{"line":25,"column":33}},"16":{"start":{"line":26,"column":4},"end":{"line":26,"column":24}},"17":{"start":{"line":47,"column":2},"end":{"line":105,"column":6}},"18":{"start":{"line":50,"column":6},"end":{"line":50,"column":78}},"19":{"start":{"line":55,"column":6},"end":{"line":57,"column":7}},"20":{"start":{"line":56,"column":8},"end":{"line":56,"column":59}},"21":{"start":{"line":62,"column":6},"end":{"line":64,"column":7}},"22":{"start":{"line":63,"column":8},"end":{"line":63,"column":75}},"23":{"start":{"line":69,"column":6},"end":{"line":69,"column":22}},"24":{"start":{"line":73,"column":6},"end":{"line":73,"column":45}},"25":{"start":{"line":78,"column":6},"end":{"line":78,"column":24}},"26":{"start":{"line":81,"column":6},"end":{"line":83,"column":7}},"27":{"start":{"line":82,"column":8},"end":{"line":82,"column":44}},"28":{"start":{"line":85,"column":6},"end":{"line":85,"column":32}},"29":{"start":{"line":90,"column":6},"end":{"line":90,"column":25}},"30":{"start":{"line":93,"column":6},"end":{"line":93,"column":59}},"31":{"start":{"line":94,"column":6},"end":{"line":94,"column":26}},"32":{"start":{"line":99,"column":6},"end":{"line":99,"column":33}},"33":{"start":{"line":102,"column":6},"end":{"line":102,"column":53}},"34":{"start":{"line":103,"column":6},"end":{"line":103,"column":42}},"35":{"start":{"line":107,"column":2},"end":{"line":107,"column":18}},"36":{"start":{"line":110,"column":0},"end":{"line":110,"column":30}},"37":{"start":{"line":111,"column":0},"end":{"line":129,"column":1}},"38":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"39":{"start":{"line":113,"column":4},"end":{"line":113,"column":83}},"40":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"41":{"start":{"line":117,"column":4},"end":{"line":117,"column":90}},"42":{"start":{"line":120,"column":2},"end":{"line":128,"column":3}},"43":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"44":{"start":{"line":122,"column":6},"end":{"line":122,"column":45}},"45":{"start":{"line":125,"column":4},"end":{"line":127,"column":5}},"46":{"start":{"line":126,"column":6},"end":{"line":126,"column":99}},"47":{"start":{"line":131,"column":0},"end":{"line":142,"column":1}},"48":{"start":{"line":132,"column":2},"end":{"line":141,"column":3}},"49":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"50":{"start":{"line":134,"column":6},"end":{"line":134,"column":90}},"51":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"52":{"start":{"line":137,"column":6},"end":{"line":137,"column":52}},"53":{"start":{"line":139,"column":9},"end":{"line":141,"column":3}},"54":{"start":{"line":140,"column":4},"end":{"line":140,"column":53}},"55":{"start":{"line":143,"column":0},"end":{"line":143,"column":36}}},"branchMap":{"1":{"line":15,"type":"cond-expr","locations":[{"start":{"line":15,"column":70},"end":{"line":15,"column":72}},{"start":{"line":15,"column":75},"end":{"line":15,"column":87}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":37}},{"start":{"line":15,"column":41},"end":{"line":15,"column":67}}]},"3":{"line":16,"type":"cond-expr","locations":[{"start":{"line":16,"column":78},"end":{"line":16,"column":80}},{"start":{"line":16,"column":83},"end":{"line":16,"column":95}}]},"4":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":24},"end":{"line":16,"column":45}},{"start":{"line":16,"column":49},"end":{"line":16,"column":75}}]},"5":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":69},"end":{"line":17,"column":71}},{"start":{"line":17,"column":74},"end":{"line":17,"column":86}}]},"6":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":15},"end":{"line":17,"column":36}},{"start":{"line":17,"column":40},"end":{"line":17,"column":66}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":13},"end":{"line":50,"column":41}},{"start":{"line":50,"column":45},"end":{"line":50,"column":77}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"10":{"line":73,"type":"cond-expr","locations":[{"start":{"line":73,"column":22},"end":{"line":73,"column":32}},{"start":{"line":73,"column":35},"end":{"line":73,"column":44}}]},"11":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"12":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"13":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"14":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":6},"end":{"line":116,"column":37}},{"start":{"line":116,"column":41},"end":{"line":116,"column":74}}]},"15":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"16":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":4},"end":{"line":125,"column":4}},{"start":{"line":125,"column":4},"end":{"line":125,"column":4}}]},"17":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":33}},{"start":{"line":125,"column":37},"end":{"line":125,"column":78}}]},"18":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"19":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"20":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":8},"end":{"line":133,"column":59}},{"start":{"line":133,"column":63},"end":{"line":133,"column":106}}]},"21":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":9},"end":{"line":139,"column":9}},{"start":{"line":139,"column":9},"end":{"line":139,"column":9}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _utilMisc = require(\"../util/misc\");","","var Resource = (function () {","  function Resource(type, id) {","    var attrs = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];","    var relationships = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];","    var meta = arguments.length <= 4 || arguments[4] === undefined ? {} : arguments[4];","","    _classCallCheck(this, Resource);","","    var _ref = [type, id, attrs, relationships, meta];","    this.type = _ref[0];","    this.id = _ref[1];","    this.attrs = _ref[2];","    this.relationships = _ref[3];","    this.meta = _ref[4];","  }","","  /**","   * Checks that a group of fields (i.e. the attributes or the relationships","   * objects) are provided as objects and that they don't contain `type` and","   * `id` members. Also checks that attributes and relationships don't contain","   * the same keys as one another, and it checks that complex attributes don't","   * contain \"relationships\" or \"links\" members.","   *","   * @param {Object} group The an object of fields (attributes or relationships)","   *    that the user is trying to add to the Resource.","   * @param {Object} otherFields The other fields that will still exist on the","   *    Resource. The new fields are checked against these other fields for","   *    naming conflicts.","   * @param {Boolean} isAttributes Whether the `group` points to the attributes","   *    of the resource. Triggers complex attribute validation.","   * @return {undefined}","   * @throws {Error} If the field group is invalid given the other fields.","   */","","  _createClass(Resource, [{","    key: \"equals\",","    value: function equals(otherResource) {","      return this.id === otherResource.id && this.type === otherResource.type;","    }","  }, {","    key: \"removeAttr\",","    value: function removeAttr(attrPath) {","      if (this._attrs) {","        (0, _utilMisc.deleteNested)(attrPath, this._attrs);","      }","    }","  }, {","    key: \"removeRelationship\",","    value: function removeRelationship(relationshipPath) {","      if (this._relationships) {","        (0, _utilMisc.deleteNested)(relationshipPath, this._relationships);","      }","    }","  }, {","    key: \"id\",","    get: function get() {","      return this._id;","    },","    set: function set(id) {","      // allow empty id for the case of a new resource POST.","      this._id = id ? String(id) : undefined;","    }","  }, {","    key: \"type\",","    get: function get() {","      return this._type;","    },","    set: function set(type) {","      if (!type) {","        throw new Error(\"type is required\");","      }","","      this._type = String(type);","    }","  }, {","    key: \"attrs\",","    get: function get() {","      return this._attrs;","    },","    set: function set(attrs) {","      validateFieldGroup(attrs, this._relationships, true);","      this._attrs = attrs;","    }","  }, {","    key: \"relationships\",","    get: function get() {","      return this._relationships;","    },","    set: function set(relationships) {","      validateFieldGroup(relationships, this._attrs);","      this._relationships = relationships;","    }","  }]);","","  return Resource;","})();","","exports[\"default\"] = Resource;","function validateFieldGroup(group, otherFields, isAttributes) {","  if (!(0, _utilMisc.isPlainObject)(group)) {","    throw new Error(\"Attributes and relationships must be provided as an object.\");","  }","","  if (typeof group.id !== \"undefined\" || typeof group.type !== \"undefined\") {","    throw new Error(\"`type` and `id` cannot be used as attribute or relationship names.\");","  }","","  for (var field in group) {","    if (isAttributes) {","      validateComplexAttribute(group[field]);","    }","","    if (otherFields !== undefined && typeof otherFields[field] !== \"undefined\") {","      throw new Error(\"A resource can't have an attribute and a relationship with the same name.\");","    }","  }","}","","function validateComplexAttribute(attrOrAttrPart) {","  if ((0, _utilMisc.isPlainObject)(attrOrAttrPart)) {","    if (typeof attrOrAttrPart.relationships !== \"undefined\" || typeof attrOrAttrPart.links !== \"undefined\") {","      throw new Error('Complex attributes may not have \"relationships\" or \"links\" keys.');","    }","    for (var key in attrOrAttrPart) {","      validateComplexAttribute(attrOrAttrPart[key]);","    }","  } else if (Array.isArray(attrOrAttrPart)) {","    attrOrAttrPart.forEach(validateComplexAttribute);","  }","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"13":1,"14":1,"15":0,"16":0,"17":0,"19":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"47":1,"50":0,"55":0,"56":0,"62":0,"63":0,"69":0,"73":0,"78":0,"81":0,"82":0,"85":0,"90":0,"93":0,"94":0,"99":0,"102":0,"103":0,"107":1,"110":1,"111":1,"112":0,"113":0,"116":0,"117":0,"120":0,"121":0,"122":0,"125":0,"126":0,"131":1,"132":0,"133":0,"134":0,"136":0,"137":0,"139":0,"140":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/util/misc.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/util/misc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":1,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"deleteNested","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":43},"end":{"line":26,"column":64}}},"3":{"name":"isSubsetOf","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":48}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":34},"end":{"line":49,"column":48}}},"5":{"name":"isPlainObject","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":28}}},"6":{"name":"pseudoTopSort","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":75,"column":44}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":59}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":79}},"3":{"start":{"line":12,"column":0},"end":{"line":14,"column":3}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}},"8":{"start":{"line":20,"column":0},"end":{"line":39,"column":1}},"9":{"start":{"line":21,"column":2},"end":{"line":38,"column":3}},"10":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":45}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":44}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":60}},"14":{"start":{"line":26,"column":4},"end":{"line":28,"column":15}},"15":{"start":{"line":27,"column":6},"end":{"line":27,"column":23}},"16":{"start":{"line":30,"column":4},"end":{"line":35,"column":5}},"17":{"start":{"line":31,"column":6},"end":{"line":31,"column":33}},"18":{"start":{"line":32,"column":6},"end":{"line":32,"column":18}},"19":{"start":{"line":34,"column":6},"end":{"line":34,"column":83}},"20":{"start":{"line":37,"column":4},"end":{"line":37,"column":17}},"21":{"start":{"line":46,"column":0},"end":{"line":52,"column":1}},"22":{"start":{"line":47,"column":2},"end":{"line":47,"column":29}},"23":{"start":{"line":49,"column":2},"end":{"line":51,"column":5}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":32}},"25":{"start":{"line":54,"column":0},"end":{"line":56,"column":1}},"26":{"start":{"line":55,"column":2},"end":{"line":55,"column":74}},"27":{"start":{"line":75,"column":0},"end":{"line":111,"column":1}},"28":{"start":{"line":77,"column":2},"end":{"line":77,"column":24}},"29":{"start":{"line":78,"column":2},"end":{"line":78,"column":24}},"30":{"start":{"line":79,"column":2},"end":{"line":79,"column":36}},"31":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"32":{"start":{"line":81,"column":4},"end":{"line":81,"column":48}},"33":{"start":{"line":85,"column":2},"end":{"line":85,"column":22}},"34":{"start":{"line":88,"column":2},"end":{"line":108,"column":3}},"35":{"start":{"line":92,"column":4},"end":{"line":92,"column":33}},"36":{"start":{"line":93,"column":4},"end":{"line":93,"column":49}},"37":{"start":{"line":96,"column":4},"end":{"line":96,"column":30}},"38":{"start":{"line":99,"column":4},"end":{"line":107,"column":5}},"39":{"start":{"line":101,"column":6},"end":{"line":101,"column":37}},"40":{"start":{"line":106,"column":6},"end":{"line":106,"column":24}},"41":{"start":{"line":110,"column":2},"end":{"line":110,"column":20}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":9},"end":{"line":55,"column":32}},{"start":{"line":55,"column":36},"end":{"line":55,"column":73}}]},"3":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":38},"end":{"line":55,"column":56}},{"start":{"line":55,"column":60},"end":{"line":55,"column":72}}]},"4":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":27},"end":{"line":93,"column":42}},{"start":{"line":93,"column":46},"end":{"line":93,"column":48}}]}},"code":["/**"," * Takes an arbitrary path string e.g. \"user.contact.phone\" and locates the"," * corresponding property on an object `obj` and deletes it (ie. does"," * `delete obj.user.contact.phone`). It doesn't use eval, which makes it safer."," */","\"use strict\";","","var _Set = require(\"babel-runtime/core-js/set\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.deleteNested = deleteNested;","exports.isSubsetOf = isSubsetOf;","exports.isPlainObject = isPlainObject;","exports.pseudoTopSort = pseudoTopSort;","","function deleteNested(path, object) {","  try {","    var pathParts = path.split(\".\");","    var lastPartIndex = pathParts.length - 1;","    var lastPart = pathParts[lastPartIndex];","    var containingParts = pathParts.slice(0, lastPartIndex);","    var container = containingParts.reduce(function (obj, part) {","      return obj[part];","    }, object);","","    if (container.hasOwnProperty(lastPart)) {","      delete container[lastPart];","      return true;","    } else {","      throw new Error(\"The last property in the path didn't exist on the object.\");","    }","  } catch (error) {","    return false;","  }","}","","/**"," * Returns whether one array's items are a subset of those in the other."," * Both array's elements are assumed to be unique."," */","","function isSubsetOf(setArr, potentialSubsetArr) {","  var set = new _Set(setArr);","","  return potentialSubsetArr.every(function (it) {","    return set.has(it) === true;","  });","}","","function isPlainObject(obj) {","  return typeof obj === \"object\" && !(Array.isArray(obj) || obj === null);","}","","/**"," * Perform a pseudo-topological sort on the provided graph. Pseudo because it"," * assumes that each node only has 0 or 1 incoming edges, as is the case with"," * graphs for parent-child inheritance hierarchies (w/o multiple inheritance)."," * Uses https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm"," *"," * @param  {string[]} nodes A list of nodes, where each node is just a string."," *"," * @param {string[]} roots The subset of nodes that have no incoming edges."," *"," * @param  {object} edges The edges, expressed such that each key is a starting"," * node A, and the value is a set of nodes (as an object literal like"," * {nodeName: true}) for each of which there is an edge from A to that node."," *"," * @return {string[]} The nodes, sorted."," */","","function pseudoTopSort(nodes, edges, roots) {","  // Do some defensive copying, in case the caller didn't.","  roots = roots.slice();","  nodes = nodes.slice();","  edges = _Object$assign({}, edges);","  for (var key in edges) {","    edges[key] = _Object$assign({}, edges[key]);","  }","","  // \"L = Empty list that will contain the sorted elements\"","  var sortResult = [];","","  // \"while S is non-empty do\"","  while (roots.length) {","    // \"remove a node n from S\"","    // We shift() instead of pop() to we preserve more of the","    // original order, in case it was significant to the user.","    var thisRoot = roots.shift();","    var thisRootChildren = edges[thisRoot] || {};","","    // \"add n to tail of L\"","    sortResult.push(thisRoot);","","    // \"for each node m with an edge e from n to m do\"","    for (var child in thisRootChildren) {","      // \"remove edge e from the graph\"","      delete thisRootChildren[child];","","      // SKIP: \"if m has no other incoming edges...\"","      // we don't need this check because we assumed max 1 incoming edge.","      // But: \"then insert m into S\".","      roots.push(child);","    }","  }","","  return sortResult;","}"],"l":{"8":1,"10":1,"12":1,"15":1,"16":1,"17":1,"18":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"30":0,"31":0,"32":0,"34":0,"37":0,"46":1,"47":0,"49":0,"50":0,"54":1,"55":0,"75":1,"77":0,"78":0,"79":0,"80":0,"81":0,"85":0,"88":0,"92":0,"93":0,"96":0,"99":0,"101":0,"106":0,"110":0}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/util/type-handling.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/util/type-handling.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":2,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":0,"58":1,"59":1,"60":1,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":1,"71":1,"72":0,"73":0,"74":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"ValueObject","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":9},"end":{"line":38,"column":34}}},"3":{"name":"objectIsEmpty","line":57,"loc":{"start":{"line":57,"column":0},"end":{"line":57,"column":28}}},"4":{"name":"mapObject","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":31}}},"5":{"name":"mapResources","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":51}}},"6":{"name":"forEachResources","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":56}}},"7":{"name":"groupResourcesByType","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":52}}},"8":{"name":"(anonymous_8)","line":102,"loc":{"start":{"line":102,"column":43},"end":{"line":102,"column":57}}},"9":{"name":"forEachArrayOrVal","line":112,"loc":{"start":{"line":112,"column":0},"end":{"line":112,"column":47}}},"10":{"name":"unwrap","line":127,"loc":{"start":{"line":127,"column":10},"end":{"line":127,"column":28}}},"11":{"name":"bind","line":131,"loc":{"start":{"line":131,"column":8},"end":{"line":131,"column":24}}},"12":{"name":"(anonymous_12)","line":138,"loc":{"start":{"line":138,"column":12},"end":{"line":138,"column":24}}},"13":{"name":"Just","line":139,"loc":{"start":{"line":139,"column":2},"end":{"line":139,"column":19}}},"14":{"name":"unwrap","line":147,"loc":{"start":{"line":147,"column":11},"end":{"line":147,"column":29}}},"15":{"name":"bind","line":152,"loc":{"start":{"line":152,"column":11},"end":{"line":152,"column":36}}},"16":{"name":"Maybe","line":167,"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":18}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":75}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":79}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":97}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":34}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"9":{"start":{"line":18,"column":0},"end":{"line":18,"column":30}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":36}},"11":{"start":{"line":20,"column":0},"end":{"line":20,"column":44}},"12":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}},"13":{"start":{"line":22,"column":0},"end":{"line":22,"column":46}},"14":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"15":{"start":{"line":25,"column":0},"end":{"line":25,"column":54}},"16":{"start":{"line":27,"column":0},"end":{"line":27,"column":65}},"17":{"start":{"line":37,"column":0},"end":{"line":55,"column":1}},"18":{"start":{"line":38,"column":2},"end":{"line":54,"column":4}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":34}},"20":{"start":{"line":40,"column":4},"end":{"line":40,"column":53}},"21":{"start":{"line":43,"column":4},"end":{"line":49,"column":5}},"22":{"start":{"line":44,"column":6},"end":{"line":48,"column":7}},"23":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"24":{"start":{"line":46,"column":10},"end":{"line":46,"column":40}},"25":{"start":{"line":53,"column":4},"end":{"line":53,"column":29}},"26":{"start":{"line":57,"column":0},"end":{"line":63,"column":1}},"27":{"start":{"line":58,"column":2},"end":{"line":58,"column":55}},"28":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"29":{"start":{"line":60,"column":4},"end":{"line":60,"column":52}},"30":{"start":{"line":60,"column":39},"end":{"line":60,"column":52}},"31":{"start":{"line":62,"column":2},"end":{"line":62,"column":14}},"32":{"start":{"line":65,"column":0},"end":{"line":73,"column":1}},"33":{"start":{"line":66,"column":2},"end":{"line":66,"column":42}},"34":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"35":{"start":{"line":69,"column":4},"end":{"line":69,"column":37}},"36":{"start":{"line":72,"column":2},"end":{"line":72,"column":19}},"37":{"start":{"line":81,"column":0},"end":{"line":87,"column":1}},"38":{"start":{"line":82,"column":2},"end":{"line":86,"column":3}},"39":{"start":{"line":83,"column":4},"end":{"line":83,"column":53}},"40":{"start":{"line":85,"column":4},"end":{"line":85,"column":39}},"41":{"start":{"line":89,"column":0},"end":{"line":97,"column":1}},"42":{"start":{"line":91,"column":2},"end":{"line":95,"column":3}},"43":{"start":{"line":92,"column":4},"end":{"line":92,"column":51}},"44":{"start":{"line":94,"column":4},"end":{"line":94,"column":40}},"45":{"start":{"line":99,"column":0},"end":{"line":110,"column":1}},"46":{"start":{"line":100,"column":2},"end":{"line":100,"column":27}},"47":{"start":{"line":101,"column":2},"end":{"line":108,"column":3}},"48":{"start":{"line":102,"column":4},"end":{"line":105,"column":7}},"49":{"start":{"line":103,"column":6},"end":{"line":103,"column":64}},"50":{"start":{"line":104,"column":6},"end":{"line":104,"column":40}},"51":{"start":{"line":107,"column":4},"end":{"line":107,"column":72}},"52":{"start":{"line":109,"column":2},"end":{"line":109,"column":25}},"53":{"start":{"line":112,"column":0},"end":{"line":116,"column":1}},"54":{"start":{"line":114,"column":2},"end":{"line":114,"column":78}},"55":{"start":{"line":126,"column":0},"end":{"line":134,"column":2}},"56":{"start":{"line":128,"column":4},"end":{"line":128,"column":21}},"57":{"start":{"line":132,"column":4},"end":{"line":132,"column":16}},"58":{"start":{"line":136,"column":0},"end":{"line":136,"column":26}},"59":{"start":{"line":138,"column":0},"end":{"line":163,"column":5}},"60":{"start":{"line":139,"column":2},"end":{"line":143,"column":3}},"61":{"start":{"line":140,"column":4},"end":{"line":140,"column":32}},"62":{"start":{"line":142,"column":4},"end":{"line":142,"column":17}},"63":{"start":{"line":145,"column":2},"end":{"line":160,"column":6}},"64":{"start":{"line":148,"column":6},"end":{"line":148,"column":22}},"65":{"start":{"line":153,"column":6},"end":{"line":153,"column":44}},"66":{"start":{"line":154,"column":6},"end":{"line":158,"column":7}},"67":{"start":{"line":155,"column":8},"end":{"line":155,"column":27}},"68":{"start":{"line":157,"column":8},"end":{"line":157,"column":34}},"69":{"start":{"line":162,"column":2},"end":{"line":162,"column":14}},"70":{"start":{"line":165,"column":0},"end":{"line":165,"column":20}},"71":{"start":{"line":167,"column":0},"end":{"line":174,"column":1}},"72":{"start":{"line":169,"column":2},"end":{"line":173,"column":3}},"73":{"start":{"line":170,"column":4},"end":{"line":170,"column":23}},"74":{"start":{"line":172,"column":4},"end":{"line":172,"column":19}}},"branchMap":{"1":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":43,"column":4}},{"start":{"line":43,"column":4},"end":{"line":43,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"3":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":12},"end":{"line":45,"column":37}},{"start":{"line":45,"column":41},"end":{"line":45,"column":76}}]},"4":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"5":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"7":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"8":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":33},"end":{"line":103,"column":57}},{"start":{"line":103,"column":61},"end":{"line":103,"column":63}}]},"9":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":30},"end":{"line":114,"column":56}},{"start":{"line":114,"column":59},"end":{"line":114,"column":77}}]},"10":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":6}},{"start":{"line":154,"column":6},"end":{"line":154,"column":6}}]},"11":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":10},"end":{"line":154,"column":37}},{"start":{"line":154,"column":41},"end":{"line":154,"column":64}}]},"12":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _Object$seal = require(\"babel-runtime/core-js/object/seal\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.ValueObject = ValueObject;","exports.objectIsEmpty = objectIsEmpty;","exports.mapObject = mapObject;","exports.mapResources = mapResources;","exports.forEachResources = forEachResources;","exports.groupResourcesByType = groupResourcesByType;","exports.forEachArrayOrVal = forEachArrayOrVal;","exports.Maybe = Maybe;","","var _typesCollection = require(\"../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","/**"," * Takes in a constructor function that takes no arguments and returns a new one"," * that takes one argument representing initial values. These initial values"," * will be applied to the properties that exist on the object returned by the"," * input constructor function immediately post-creation. Then the object will be"," * sealed so that no properties can be added or deleted--a nice sanity check."," */","","function ValueObject(ConstructorFn) {","  return function (initialValues) {","    var obj = new ConstructorFn();","    var hasOwnProp = Object.prototype.hasOwnProperty;","","    // Use initial values where possible.","    if (initialValues) {","      for (var key in obj) {","        if (hasOwnProp.call(obj, key) && hasOwnProp.call(initialValues, key)) {","          obj[key] = initialValues[key];","        }","      }","    }","","    // Object.seal prevents any other properties from being added to the object.","    // Every property an object needs should be set by the original constructor.","    return _Object$seal(obj);","  };","}","","function objectIsEmpty(obj) {","  var hasOwnProperty = Object.prototype.hasOwnProperty;","  for (var key in obj) {","    if (hasOwnProperty.call(obj, key)) return false;","  }","  return true;","}","","function mapObject(obj, mapFn) {","  var mappedObj = _Object$assign({}, obj);","","  for (var key in mappedObj) {","    mappedObj[key] = mapFn(obj[key]);","  }","","  return mappedObj;","}","","/**"," * If `resourceOrCollection` is a collection, it applies `mapFn` to each of"," * its resources; otherwise, if `resourceOrCollection` is a single resource,"," * it applies `mapFn` just to that resource. This abstracts a common pattern."," */","","function mapResources(resourceOrCollection, mapFn) {","  if (resourceOrCollection instanceof _typesCollection2[\"default\"]) {","    return resourceOrCollection.resources.map(mapFn);","  } else {","    return mapFn(resourceOrCollection);","  }","}","","function forEachResources(resourceOrCollection, eachFn) {","  /*eslint-disable no-unused-expressions */","  if (resourceOrCollection instanceof _typesCollection2[\"default\"]) {","    resourceOrCollection.resources.forEach(eachFn);","  } else {","    return eachFn(resourceOrCollection);","  }","  /*eslint-enable */","}","","function groupResourcesByType(resourceOrCollection) {","  var resourcesByType = {};","  if (resourceOrCollection instanceof _typesCollection2[\"default\"]) {","    resourceOrCollection.resources.forEach(function (it) {","      resourcesByType[it.type] = resourcesByType[it.type] || [];","      resourcesByType[it.type].push(it);","    });","  } else {","    resourcesByType[resourceOrCollection.type] = [resourceOrCollection];","  }","  return resourcesByType;","}","","function forEachArrayOrVal(arrayOrVal, eachFn) {","  /*eslint-disable no-unused-expressions */","  Array.isArray(arrayOrVal) ? arrayOrVal.forEach(eachFn) : eachFn(arrayOrVal);","  /*eslint-enable */","}","","/**"," * The Maybe monad, with a totally-not-monadic unwrap() so we can"," * get out the raw value w/o needing to pass the monad everywhere."," *"," * We also match js's convention from Promise of not requiring"," * the user's bind() to always return the monad. If a raw value"," * x is returned, it's converted to Maybe(x)."," */","var Nothing = {","  unwrap: function unwrap() {","    return undefined;","  },","","  bind: function bind() {","    return this;","  }","};","","exports.Nothing = Nothing;","","var Just = (function () {","  function Just(x) {","    _classCallCheck(this, Just);","","    this.val = x;","  }","","  _createClass(Just, [{","    key: \"unwrap\",","    value: function unwrap() {","      return this.val;","    }","  }, {","    key: \"bind\",","    value: function bind(transform) {","      var transformed = transform(this.val);","      if (transformed instanceof Just || transformed === Nothing) {","        return transformed;","      } else {","        return Maybe(transformed);","      }","    }","  }]);","","  return Just;","})();","","exports.Just = Just;","","function Maybe(x) {","  // Sometimes, null is a valid value, so Nothing only covers undefined.","  if (x !== undefined) {","    return new Just(x);","  } else {","    return Nothing;","  }","}"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"27":1,"37":1,"38":2,"39":0,"40":0,"43":0,"44":0,"45":0,"46":0,"53":0,"57":1,"58":0,"59":0,"60":0,"62":0,"65":1,"66":0,"68":0,"69":0,"72":0,"81":1,"82":0,"83":0,"85":0,"89":1,"91":0,"92":0,"94":0,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"107":0,"109":0,"112":1,"114":0,"126":1,"128":0,"132":0,"136":1,"138":1,"139":1,"140":0,"142":0,"145":1,"148":0,"153":0,"154":0,"155":0,"157":0,"162":1,"165":1,"167":1,"169":0,"170":0,"172":0}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/util/arrays.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/util/arrays.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"arrayUnique","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":22},"end":{"line":13,"column":41}}},"3":{"name":"arrayValuesMatch","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":42}}},"4":{"name":"arrayContains","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":78}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":44}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}},"6":{"start":{"line":12,"column":0},"end":{"line":16,"column":1}},"7":{"start":{"line":13,"column":2},"end":{"line":15,"column":5}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"9":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"10":{"start":{"line":19,"column":2},"end":{"line":19,"column":90}},"11":{"start":{"line":22,"column":0},"end":{"line":28,"column":1}},"12":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":37}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":44}}},"branchMap":{"1":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":9},"end":{"line":19,"column":40}},{"start":{"line":19,"column":44},"end":{"line":19,"column":89}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]}},"code":["\"use strict\";","","var _Number$isNaN = require(\"babel-runtime/core-js/number/is-nan\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.arrayUnique = arrayUnique;","exports.arrayValuesMatch = arrayValuesMatch;","exports.arrayContains = arrayContains;","","function arrayUnique(array) {","  return array.filter(function (a, b, c) {","    return c.indexOf(a, b + 1) < 0;","  });","}","","function arrayValuesMatch(array1, array2) {","  return array1.length === array2.length && array1.sort().join() === array2.sort().join();","}","","function arrayContains(arr, value) {","  if (!_Number$isNaN(value)) {","    return arr.indexOf(value) !== -1;","  } else {","    return arr.some(_Number$isNaN) === true;","  }","}"],"l":{"3":1,"5":1,"8":1,"9":1,"10":1,"12":1,"13":0,"14":0,"18":1,"19":0,"22":1,"23":0,"24":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/APIError.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/APIError.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":34}}},"2":{"name":"APIError","line":25,"loc":{"start":{"line":25,"column":2},"end":{"line":25,"column":63}}},"3":{"name":"get","line":38,"loc":{"start":{"line":38,"column":11},"end":{"line":38,"column":26}}},"4":{"name":"set","line":41,"loc":{"start":{"line":41,"column":11},"end":{"line":41,"column":31}}},"5":{"name":"get","line":51,"loc":{"start":{"line":51,"column":11},"end":{"line":51,"column":26}}},"6":{"name":"set","line":54,"loc":{"start":{"line":54,"column":11},"end":{"line":54,"column":31}}},"7":{"name":"fromError","line":84,"loc":{"start":{"line":84,"column":11},"end":{"line":84,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":69}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":83}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":81}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":74}},"7":{"start":{"line":15,"column":0},"end":{"line":17,"column":3}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"9":{"start":{"line":20,"column":0},"end":{"line":107,"column":10}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":30}},"11":{"start":{"line":25,"column":2},"end":{"line":73,"column":3}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":21}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":36}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":84}},"15":{"start":{"line":34,"column":4},"end":{"line":34,"column":58}},"16":{"start":{"line":35,"column":4},"end":{"line":35,"column":56}},"17":{"start":{"line":36,"column":4},"end":{"line":48,"column":7}},"18":{"start":{"line":39,"column":8},"end":{"line":39,"column":29}},"19":{"start":{"line":42,"column":8},"end":{"line":46,"column":9}},"20":{"start":{"line":43,"column":10},"end":{"line":43,"column":51}},"21":{"start":{"line":45,"column":10},"end":{"line":45,"column":32}},"22":{"start":{"line":49,"column":4},"end":{"line":61,"column":7}},"23":{"start":{"line":52,"column":8},"end":{"line":52,"column":27}},"24":{"start":{"line":55,"column":8},"end":{"line":59,"column":9}},"25":{"start":{"line":56,"column":10},"end":{"line":56,"column":49}},"26":{"start":{"line":58,"column":10},"end":{"line":58,"column":30}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":46}},"28":{"start":{"line":65,"column":4},"end":{"line":65,"column":54}},"29":{"start":{"line":67,"column":4},"end":{"line":67,"column":34}},"30":{"start":{"line":68,"column":4},"end":{"line":68,"column":32}},"31":{"start":{"line":69,"column":4},"end":{"line":69,"column":33}},"32":{"start":{"line":70,"column":4},"end":{"line":70,"column":34}},"33":{"start":{"line":71,"column":4},"end":{"line":71,"column":33}},"34":{"start":{"line":72,"column":4},"end":{"line":72,"column":33}},"35":{"start":{"line":82,"column":2},"end":{"line":104,"column":6}},"36":{"start":{"line":85,"column":6},"end":{"line":85,"column":92}},"37":{"start":{"line":86,"column":6},"end":{"line":86,"column":46}},"38":{"start":{"line":88,"column":6},"end":{"line":102,"column":11}},"39":{"start":{"line":89,"column":8},"end":{"line":89,"column":19}},"40":{"start":{"line":95,"column":11},"end":{"line":102,"column":11}},"41":{"start":{"line":96,"column":10},"end":{"line":96,"column":191}},"42":{"start":{"line":101,"column":12},"end":{"line":101,"column":71}},"43":{"start":{"line":106,"column":2},"end":{"line":106,"column":18}},"44":{"start":{"line":109,"column":0},"end":{"line":109,"column":30}},"45":{"start":{"line":110,"column":0},"end":{"line":110,"column":36}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":58}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":40}},{"start":{"line":55,"column":44},"end":{"line":55,"column":58}}]},"5":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":29},"end":{"line":86,"column":33}},{"start":{"line":86,"column":37},"end":{"line":86,"column":45}}]},"6":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":6}},{"start":{"line":88,"column":6},"end":{"line":88,"column":6}}]},"7":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":11}},{"start":{"line":95,"column":11},"end":{"line":95,"column":11}}]},"8":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":38},"end":{"line":96,"column":48}},{"start":{"line":96,"column":52},"end":{"line":96,"column":66}},{"start":{"line":96,"column":70},"end":{"line":96,"column":73}}]},"9":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":85},"end":{"line":96,"column":94}},{"start":{"line":96,"column":98},"end":{"line":96,"column":111}}]},"10":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":113},"end":{"line":96,"column":124}},{"start":{"line":96,"column":129},"end":{"line":96,"column":166}}]},"11":{"line":96,"type":"cond-expr","locations":[{"start":{"line":96,"column":143},"end":{"line":96,"column":154}},{"start":{"line":96,"column":157},"end":{"line":96,"column":166}}]}},"code":["\"use strict\";","","var _get = require(\"babel-runtime/helpers/get\")[\"default\"];","","var _inherits = require(\"babel-runtime/helpers/inherits\")[\"default\"];","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _slicedToArray = require(\"babel-runtime/helpers/sliced-to-array\")[\"default\"];","","var _Array$from3 = require(\"babel-runtime/core-js/array/from\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","var nonEnumerable = { writable: true, enumerable: false };","","var APIError = (function (_Error) {","  _inherits(APIError, _Error);","","  /*eslint-disable no-unused-vars */","","  function APIError(status, code, title, detail, links, paths) {","    var _this = this;","","    _classCallCheck(this, APIError);","","    _get(Object.getPrototypeOf(APIError.prototype), \"constructor\", this).call(this);","","    // Hack around lack of proxy support and default non-enumerability","    // of class accessor properties, while still giving us validation.","    Object.defineProperty(this, \"_status\", nonEnumerable);","    Object.defineProperty(this, \"_code\", nonEnumerable);","    Object.defineProperty(this, \"status\", {","      enumerable: true,","      get: function get() {","        return _this._status;","      },","      set: function set(value) {","        if (typeof value !== \"undefined\" && value !== null) {","          _this._status = String(value).toString();","        } else {","          _this._status = value;","        }","      }","    });","    Object.defineProperty(this, \"code\", {","      enumerable: true,","      get: function get() {","        return _this._code;","      },","      set: function set(value) {","        if (typeof value !== \"undefined\" && value !== null) {","          _this._code = String(value).toString();","        } else {","          _this._code = value;","        }","      }","    });","","    var _Array$from = _Array$from3(arguments);","","    var _Array$from2 = _slicedToArray(_Array$from, 6);","","    this.status = _Array$from2[0];","    this.code = _Array$from2[1];","    this.title = _Array$from2[2];","    this.detail = _Array$from2[3];","    this.links = _Array$from2[4];","    this.paths = _Array$from2[5];","  }","","  /*eslint-enable */","","  /**","   * Creates a JSON-API Compliant Error Object from a JS Error object","   *","   */","","  _createClass(APIError, null, [{","    key: \"fromError\",","    value: function fromError(err) {","      var fallbackTitle = \"An unknown error occurred while trying to process this request.\";","      var ErrorConstructor = this || APIError; // in case this isn't bound.","","      if (err instanceof APIError) {","        return err;","      }","","      // If the error is marked as ready for JSON API display, it's secure","      // to read values off it and show them to the user. (Note: most of","      // the args below will probably be null/undefined, but that's fine.)","      else if (err.isJSONAPIDisplayReady) {","          return new ErrorConstructor(err.status || err.statusCode || 500, err.code, err.title || fallbackTitle, err.details || (err.message ? err.message : undefined), err.links, err.paths);","        }","","        // Otherwise, we just show a generic error message.","        else {","            return new ErrorConstructor(500, undefined, fallbackTitle);","          }","    }","  }]);","","  return APIError;","})(Error);","","exports[\"default\"] = APIError;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"18":1,"20":1,"21":1,"25":1,"26":0,"28":0,"30":0,"34":0,"35":0,"36":0,"39":0,"42":0,"43":0,"45":0,"49":0,"52":0,"55":0,"56":0,"58":0,"63":0,"65":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"82":1,"85":0,"86":0,"88":0,"89":0,"95":0,"96":0,"101":0,"106":1,"109":1,"110":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Relationship.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Relationship.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":1,"10":0,"11":1,"12":1,"13":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":20},"end":{"line":13,"column":32}}},"2":{"name":"Relationship","line":14,"loc":{"start":{"line":14,"column":2},"end":{"line":14,"column":70}}},"3":{"name":"empty","line":22,"loc":{"start":{"line":22,"column":11},"end":{"line":22,"column":28}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":79}},"4":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}},"5":{"start":{"line":13,"column":0},"end":{"line":28,"column":5}},"6":{"start":{"line":14,"column":2},"end":{"line":18,"column":3}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":40}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":121}},"9":{"start":{"line":20,"column":2},"end":{"line":25,"column":6}},"10":{"start":{"line":23,"column":6},"end":{"line":23,"column":27}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":22}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":34}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}}},"branchMap":{},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var Relationship = (function () {","  function Relationship(linkage, relatedURITemplate, selfURITemplate) {","    _classCallCheck(this, Relationship);","","    _Object$assign(this, { linkage: linkage, relatedURITemplate: relatedURITemplate, selfURITemplate: selfURITemplate });","  }","","  _createClass(Relationship, [{","    key: \"empty\",","    value: function empty() {","      this.linkage.empty();","    }","  }]);","","  return Relationship;","})();","","exports[\"default\"] = Relationship;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"13":1,"14":1,"15":0,"17":0,"20":1,"23":0,"27":1,"30":1,"31":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Documentation/Field.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Documentation/Field.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"Field","line":9,"loc":{"start":{"line":9,"column":12},"end":{"line":9,"column":77}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":83}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":22,"column":2}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":48}},"5":{"start":{"line":10,"column":32},"end":{"line":10,"column":48}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":31}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":19}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":19}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":31}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":35}},"11":{"start":{"line":21,"column":2},"end":{"line":21,"column":31}},"12":{"start":{"line":24,"column":0},"end":{"line":24,"column":27}},"13":{"start":{"line":25,"column":0},"end":{"line":25,"column":36}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]}},"code":["\"use strict\";","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var Field = function Field(name, type, validation, friendlyName, defaultVal) {","  if (validation === undefined) validation = {};","","  _classCallCheck(this, Field);","","  // call the property kind to","  // distinguish it from json api type","  this.kind = type;","","  this.name = name;","  this.validation = validation;","  this.friendlyName = friendlyName;","  this[\"default\"] = defaultVal;","};","","exports[\"default\"] = Field;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"10":0,"12":0,"16":0,"18":0,"19":0,"20":0,"21":0,"24":1,"25":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Documentation/FieldType.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Documentation/FieldType.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1,"14":1,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":29}}},"2":{"name":"FieldType","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":31}}},"3":{"name":"toString","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":31}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":83}},"3":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"4":{"start":{"line":15,"column":0},"end":{"line":34,"column":5}},"5":{"start":{"line":16,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":93}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":37}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":35}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":28}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":27}},"11":{"start":{"line":26,"column":2},"end":{"line":31,"column":6}},"12":{"start":{"line":29,"column":6},"end":{"line":29,"column":88}},"13":{"start":{"line":33,"column":2},"end":{"line":33,"column":19}},"14":{"start":{"line":36,"column":0},"end":{"line":36,"column":31}},"15":{"start":{"line":37,"column":0},"end":{"line":37,"column":36}}},"branchMap":{"1":{"line":17,"type":"cond-expr","locations":[{"start":{"line":17,"column":72},"end":{"line":17,"column":77}},{"start":{"line":17,"column":80},"end":{"line":17,"column":92}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":18},"end":{"line":17,"column":39}},{"start":{"line":17,"column":43},"end":{"line":17,"column":69}}]},"3":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":29},"end":{"line":29,"column":37}},{"start":{"line":29,"column":40},"end":{"line":29,"column":42}}]},"4":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":78},"end":{"line":29,"column":81}},{"start":{"line":29,"column":84},"end":{"line":29,"column":86}}]}},"code":["/**"," * This class represents the type of a field (i.e. what type of data it holds)"," * within a resource's schema."," */","\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var FieldType = (function () {","  function FieldType(baseType) {","    var isArray = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];","","    _classCallCheck(this, FieldType);","","    var _ref = [baseType, isArray];","    this.baseType = _ref[0];","    this.isArray = _ref[1];","  }","","  _createClass(FieldType, [{","    key: \"toString\",","    value: function toString() {","      return (this.isArray ? \"Array[\" : \"\") + this.baseType + (this.isArray ? \"]\" : \"\");","    }","  }]);","","  return FieldType;","})();","","exports[\"default\"] = FieldType;","module.exports = exports[\"default\"];"],"l":{"7":1,"9":1,"11":1,"15":1,"16":1,"17":0,"19":0,"21":0,"22":0,"23":0,"26":1,"29":0,"33":1,"36":1,"37":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/controllers/API.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/controllers/API.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":1,"152":1,"153":1,"154":0,"155":1},"b":{"1":[1,0],"2":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":95,"loc":{"start":{"line":95,"column":21},"end":{"line":95,"column":33}}},"2":{"name":"APIController","line":96,"loc":{"start":{"line":96,"column":2},"end":{"line":96,"column":35}}},"3":{"name":"handle","line":115,"loc":{"start":{"line":115,"column":11},"end":{"line":115,"column":64}}},"4":{"name":"callee$2$0","line":120,"loc":{"start":{"line":120,"column":59},"end":{"line":120,"column":81}}},"5":{"name":"callee$2$0$","line":122,"loc":{"start":{"line":122,"column":40},"end":{"line":122,"column":74}}},"6":{"name":"(anonymous_6)","line":274,"loc":{"start":{"line":274,"column":63},"end":{"line":274,"column":76}}},"7":{"name":"responseFromExternalError","line":315,"loc":{"start":{"line":315,"column":11},"end":{"line":315,"column":70}}},"8":{"name":"(anonymous_8)","line":324,"loc":{"start":{"line":324,"column":55},"end":{"line":324,"column":68}}},"9":{"name":"(anonymous_9)","line":329,"loc":{"start":{"line":329,"column":130},"end":{"line":329,"column":153}}},"10":{"name":"(anonymous_10)","line":332,"loc":{"start":{"line":332,"column":9},"end":{"line":332,"column":21}}},"11":{"name":"pickStatus","line":351,"loc":{"start":{"line":351,"column":0},"end":{"line":351,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":74}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":97}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":99}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":39}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":59}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":69}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":50}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":61}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":54}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":65}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":50}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":61}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":74}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":75}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":123}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":129}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":121}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":127}},"23":{"start":{"line":49,"column":0},"end":{"line":49,"column":74}},"24":{"start":{"line":51,"column":0},"end":{"line":51,"column":81}},"25":{"start":{"line":53,"column":0},"end":{"line":53,"column":92}},"26":{"start":{"line":55,"column":0},"end":{"line":55,"column":99}},"27":{"start":{"line":57,"column":0},"end":{"line":57,"column":85}},"28":{"start":{"line":59,"column":0},"end":{"line":59,"column":93}},"29":{"start":{"line":61,"column":0},"end":{"line":61,"column":87}},"30":{"start":{"line":63,"column":0},"end":{"line":63,"column":95}},"31":{"start":{"line":65,"column":0},"end":{"line":65,"column":63}},"32":{"start":{"line":67,"column":0},"end":{"line":67,"column":73}},"33":{"start":{"line":69,"column":0},"end":{"line":69,"column":61}},"34":{"start":{"line":71,"column":0},"end":{"line":71,"column":69}},"35":{"start":{"line":73,"column":0},"end":{"line":73,"column":63}},"36":{"start":{"line":75,"column":0},"end":{"line":75,"column":71}},"37":{"start":{"line":77,"column":0},"end":{"line":77,"column":65}},"38":{"start":{"line":79,"column":0},"end":{"line":79,"column":73}},"39":{"start":{"line":81,"column":0},"end":{"line":81,"column":67}},"40":{"start":{"line":83,"column":0},"end":{"line":83,"column":75}},"41":{"start":{"line":85,"column":0},"end":{"line":85,"column":22}},"42":{"start":{"line":92,"column":0},"end":{"line":92,"column":133}},"43":{"start":{"line":95,"column":0},"end":{"line":342,"column":5}},"44":{"start":{"line":96,"column":2},"end":{"line":100,"column":3}},"45":{"start":{"line":97,"column":4},"end":{"line":97,"column":41}},"46":{"start":{"line":99,"column":4},"end":{"line":99,"column":29}},"47":{"start":{"line":113,"column":2},"end":{"line":339,"column":6}},"48":{"start":{"line":116,"column":6},"end":{"line":116,"column":58}},"49":{"start":{"line":117,"column":6},"end":{"line":117,"column":35}},"50":{"start":{"line":120,"column":6},"end":{"line":303,"column":10}},"51":{"start":{"line":121,"column":8},"end":{"line":121,"column":81}},"52":{"start":{"line":122,"column":8},"end":{"line":302,"column":40}},"53":{"start":{"line":123,"column":10},"end":{"line":301,"column":11}},"54":{"start":{"line":123,"column":20},"end":{"line":301,"column":11}},"55":{"start":{"line":125,"column":14},"end":{"line":125,"column":35}},"56":{"start":{"line":126,"column":14},"end":{"line":126,"column":35}},"57":{"start":{"line":127,"column":14},"end":{"line":127,"column":60}},"58":{"start":{"line":130,"column":14},"end":{"line":130,"column":35}},"59":{"start":{"line":131,"column":14},"end":{"line":131,"column":67}},"60":{"start":{"line":134,"column":14},"end":{"line":134,"column":35}},"61":{"start":{"line":135,"column":14},"end":{"line":135,"column":134}},"62":{"start":{"line":138,"column":14},"end":{"line":138,"column":54}},"63":{"start":{"line":142,"column":14},"end":{"line":142,"column":47}},"64":{"start":{"line":146,"column":14},"end":{"line":149,"column":15}},"65":{"start":{"line":147,"column":16},"end":{"line":147,"column":38}},"66":{"start":{"line":148,"column":16},"end":{"line":148,"column":22}},"67":{"start":{"line":151,"column":14},"end":{"line":151,"column":107}},"68":{"start":{"line":154,"column":14},"end":{"line":157,"column":15}},"69":{"start":{"line":155,"column":16},"end":{"line":155,"column":38}},"70":{"start":{"line":156,"column":16},"end":{"line":156,"column":22}},"71":{"start":{"line":159,"column":14},"end":{"line":159,"column":36}},"72":{"start":{"line":160,"column":14},"end":{"line":160,"column":109}},"73":{"start":{"line":163,"column":14},"end":{"line":163,"column":36}},"74":{"start":{"line":164,"column":14},"end":{"line":164,"column":83}},"75":{"start":{"line":167,"column":14},"end":{"line":167,"column":36}},"76":{"start":{"line":168,"column":14},"end":{"line":168,"column":118}},"77":{"start":{"line":171,"column":14},"end":{"line":171,"column":47}},"78":{"start":{"line":173,"column":14},"end":{"line":176,"column":15}},"79":{"start":{"line":174,"column":16},"end":{"line":174,"column":38}},"80":{"start":{"line":175,"column":16},"end":{"line":175,"column":22}},"81":{"start":{"line":178,"column":14},"end":{"line":178,"column":36}},"82":{"start":{"line":179,"column":14},"end":{"line":179,"column":109}},"83":{"start":{"line":182,"column":14},"end":{"line":182,"column":36}},"84":{"start":{"line":183,"column":14},"end":{"line":183,"column":126}},"85":{"start":{"line":186,"column":14},"end":{"line":186,"column":49}},"86":{"start":{"line":189,"column":14},"end":{"line":192,"column":15}},"87":{"start":{"line":190,"column":16},"end":{"line":190,"column":38}},"88":{"start":{"line":191,"column":16},"end":{"line":191,"column":22}},"89":{"start":{"line":194,"column":14},"end":{"line":194,"column":36}},"90":{"start":{"line":195,"column":14},"end":{"line":195,"column":118}},"91":{"start":{"line":198,"column":14},"end":{"line":198,"column":45}},"92":{"start":{"line":201,"column":14},"end":{"line":201,"column":44}},"93":{"start":{"line":206,"column":14},"end":{"line":206,"column":85}},"94":{"start":{"line":208,"column":14},"end":{"line":210,"column":15}},"95":{"start":{"line":209,"column":16},"end":{"line":209,"column":91}},"96":{"start":{"line":213,"column":14},"end":{"line":216,"column":15}},"97":{"start":{"line":214,"column":16},"end":{"line":214,"column":38}},"98":{"start":{"line":215,"column":16},"end":{"line":215,"column":22}},"99":{"start":{"line":218,"column":14},"end":{"line":218,"column":46}},"100":{"start":{"line":219,"column":14},"end":{"line":219,"column":170}},"101":{"start":{"line":220,"column":14},"end":{"line":220,"column":20}},"102":{"start":{"line":223,"column":14},"end":{"line":223,"column":36}},"103":{"start":{"line":224,"column":14},"end":{"line":224,"column":86}},"104":{"start":{"line":227,"column":14},"end":{"line":227,"column":53}},"105":{"start":{"line":230,"column":14},"end":{"line":230,"column":36}},"106":{"start":{"line":231,"column":14},"end":{"line":231,"column":87}},"107":{"start":{"line":234,"column":14},"end":{"line":234,"column":53}},"108":{"start":{"line":237,"column":14},"end":{"line":237,"column":36}},"109":{"start":{"line":238,"column":14},"end":{"line":238,"column":88}},"110":{"start":{"line":241,"column":14},"end":{"line":241,"column":53}},"111":{"start":{"line":244,"column":14},"end":{"line":244,"column":36}},"112":{"start":{"line":245,"column":14},"end":{"line":245,"column":89}},"113":{"start":{"line":248,"column":14},"end":{"line":248,"column":36}},"114":{"start":{"line":249,"column":14},"end":{"line":249,"column":20}},"115":{"start":{"line":252,"column":14},"end":{"line":252,"column":36}},"116":{"start":{"line":253,"column":14},"end":{"line":253,"column":55}},"117":{"start":{"line":254,"column":14},"end":{"line":254,"column":92}},"118":{"start":{"line":255,"column":14},"end":{"line":255,"column":78}},"119":{"start":{"line":260,"column":14},"end":{"line":262,"column":15}},"120":{"start":{"line":261,"column":16},"end":{"line":261,"column":66}},"121":{"start":{"line":265,"column":14},"end":{"line":265,"column":66}},"122":{"start":{"line":269,"column":14},"end":{"line":272,"column":15}},"123":{"start":{"line":270,"column":16},"end":{"line":270,"column":38}},"124":{"start":{"line":271,"column":16},"end":{"line":271,"column":22}},"125":{"start":{"line":274,"column":14},"end":{"line":276,"column":18}},"126":{"start":{"line":275,"column":16},"end":{"line":275,"column":40}},"127":{"start":{"line":277,"column":14},"end":{"line":277,"column":88}},"128":{"start":{"line":278,"column":14},"end":{"line":278,"column":60}},"129":{"start":{"line":281,"column":14},"end":{"line":281,"column":36}},"130":{"start":{"line":282,"column":14},"end":{"line":282,"column":131}},"131":{"start":{"line":285,"column":14},"end":{"line":285,"column":50}},"132":{"start":{"line":286,"column":14},"end":{"line":286,"column":36}},"133":{"start":{"line":287,"column":14},"end":{"line":287,"column":132}},"134":{"start":{"line":290,"column":14},"end":{"line":290,"column":51}},"135":{"start":{"line":292,"column":14},"end":{"line":294,"column":15}},"136":{"start":{"line":293,"column":16},"end":{"line":293,"column":159}},"137":{"start":{"line":296,"column":14},"end":{"line":296,"column":60}},"138":{"start":{"line":300,"column":14},"end":{"line":300,"column":40}},"139":{"start":{"line":316,"column":6},"end":{"line":316,"column":58}},"140":{"start":{"line":319,"column":6},"end":{"line":319,"column":66}},"141":{"start":{"line":322,"column":6},"end":{"line":322,"column":115}},"142":{"start":{"line":324,"column":6},"end":{"line":326,"column":10}},"143":{"start":{"line":325,"column":8},"end":{"line":325,"column":32}},"144":{"start":{"line":327,"column":6},"end":{"line":327,"column":80}},"145":{"start":{"line":329,"column":6},"end":{"line":337,"column":9}},"146":{"start":{"line":330,"column":8},"end":{"line":330,"column":123}},"147":{"start":{"line":331,"column":8},"end":{"line":331,"column":24}},"148":{"start":{"line":335,"column":8},"end":{"line":335,"column":58}},"149":{"start":{"line":336,"column":8},"end":{"line":336,"column":24}},"150":{"start":{"line":341,"column":2},"end":{"line":341,"column":23}},"151":{"start":{"line":344,"column":0},"end":{"line":344,"column":42}},"152":{"start":{"line":346,"column":0},"end":{"line":346,"column":35}},"153":{"start":{"line":351,"column":0},"end":{"line":353,"column":1}},"154":{"start":{"line":352,"column":2},"end":{"line":352,"column":24}},"155":{"start":{"line":354,"column":0},"end":{"line":354,"column":36}}},"branchMap":{"1":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":17},"end":{"line":92,"column":77}},{"start":{"line":92,"column":81},"end":{"line":92,"column":132}}]},"2":{"line":123,"type":"switch","locations":[{"start":{"line":124,"column":12},"end":{"line":127,"column":60}},{"start":{"line":129,"column":12},"end":{"line":131,"column":67}},{"start":{"line":133,"column":12},"end":{"line":135,"column":134}},{"start":{"line":137,"column":12},"end":{"line":151,"column":107}},{"start":{"line":153,"column":12},"end":{"line":160,"column":109}},{"start":{"line":162,"column":12},"end":{"line":164,"column":83}},{"start":{"line":166,"column":12},"end":{"line":168,"column":118}},{"start":{"line":170,"column":12},"end":{"line":179,"column":109}},{"start":{"line":181,"column":12},"end":{"line":183,"column":126}},{"start":{"line":185,"column":12},"end":{"line":186,"column":49}},{"start":{"line":188,"column":12},"end":{"line":195,"column":118}},{"start":{"line":197,"column":12},"end":{"line":210,"column":15}},{"start":{"line":212,"column":12},"end":{"line":220,"column":20}},{"start":{"line":222,"column":12},"end":{"line":224,"column":86}},{"start":{"line":226,"column":12},"end":{"line":227,"column":53}},{"start":{"line":229,"column":12},"end":{"line":231,"column":87}},{"start":{"line":233,"column":12},"end":{"line":234,"column":53}},{"start":{"line":236,"column":12},"end":{"line":238,"column":88}},{"start":{"line":240,"column":12},"end":{"line":241,"column":53}},{"start":{"line":243,"column":12},"end":{"line":245,"column":89}},{"start":{"line":247,"column":12},"end":{"line":249,"column":20}},{"start":{"line":251,"column":12},"end":{"line":265,"column":66}},{"start":{"line":268,"column":12},"end":{"line":278,"column":60}},{"start":{"line":280,"column":12},"end":{"line":282,"column":131}},{"start":{"line":284,"column":12},"end":{"line":287,"column":132}},{"start":{"line":289,"column":12},"end":{"line":296,"column":60}},{"start":{"line":298,"column":12},"end":{"line":298,"column":20}},{"start":{"line":299,"column":12},"end":{"line":300,"column":40}}]},"3":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":14},"end":{"line":146,"column":14}},{"start":{"line":146,"column":14},"end":{"line":146,"column":14}}]},"4":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":14},"end":{"line":154,"column":14}},{"start":{"line":154,"column":14},"end":{"line":154,"column":14}}]},"5":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":14},"end":{"line":173,"column":14}},{"start":{"line":173,"column":14},"end":{"line":173,"column":14}}]},"6":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":14},"end":{"line":189,"column":14}},{"start":{"line":189,"column":14},"end":{"line":189,"column":14}}]},"7":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":20},"end":{"line":189,"column":35}},{"start":{"line":189,"column":39},"end":{"line":189,"column":57}}]},"8":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":35},"end":{"line":206,"column":61}},{"start":{"line":206,"column":65},"end":{"line":206,"column":84}}]},"9":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":14},"end":{"line":208,"column":14}},{"start":{"line":208,"column":14},"end":{"line":208,"column":14}}]},"10":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":18},"end":{"line":208,"column":38}},{"start":{"line":208,"column":42},"end":{"line":208,"column":67}},{"start":{"line":208,"column":71},"end":{"line":208,"column":89}}]},"11":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":49},"end":{"line":209,"column":83}},{"start":{"line":209,"column":86},"end":{"line":209,"column":90}}]},"12":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":14},"end":{"line":213,"column":14}},{"start":{"line":213,"column":14},"end":{"line":213,"column":14}}]},"13":{"line":219,"type":"cond-expr","locations":[{"start":{"line":219,"column":60},"end":{"line":219,"column":62}},{"start":{"line":219,"column":65},"end":{"line":219,"column":169}}]},"14":{"line":219,"type":"cond-expr","locations":[{"start":{"line":219,"column":93},"end":{"line":219,"column":95}},{"start":{"line":219,"column":98},"end":{"line":219,"column":169}}]},"15":{"line":219,"type":"cond-expr","locations":[{"start":{"line":219,"column":127},"end":{"line":219,"column":129}},{"start":{"line":219,"column":132},"end":{"line":219,"column":169}}]},"16":{"line":219,"type":"cond-expr","locations":[{"start":{"line":219,"column":162},"end":{"line":219,"column":164}},{"start":{"line":219,"column":167},"end":{"line":219,"column":169}}]},"17":{"line":254,"type":"cond-expr","locations":[{"start":{"line":254,"column":58},"end":{"line":254,"column":72}},{"start":{"line":254,"column":75},"end":{"line":254,"column":91}}]},"18":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":14},"end":{"line":260,"column":14}},{"start":{"line":260,"column":14},"end":{"line":260,"column":14}}]},"19":{"line":269,"type":"if","locations":[{"start":{"line":269,"column":14},"end":{"line":269,"column":14}},{"start":{"line":269,"column":14},"end":{"line":269,"column":14}}]},"20":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":14},"end":{"line":292,"column":14}},{"start":{"line":292,"column":14},"end":{"line":292,"column":14}}]},"21":{"line":319,"type":"cond-expr","locations":[{"start":{"line":319,"column":48},"end":{"line":319,"column":54}},{"start":{"line":319,"column":57},"end":{"line":319,"column":65}}]},"22":{"line":330,"type":"cond-expr","locations":[{"start":{"line":330,"column":82},"end":{"line":330,"column":93}},{"start":{"line":330,"column":96},"end":{"line":330,"column":122}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _regeneratorRuntime = require(\"babel-runtime/regenerator\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","var _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _co = require(\"co\");","","var _co2 = _interopRequireDefault(_co);","","var _typesHTTPResponse = require(\"../types/HTTP/Response\");","","var _typesHTTPResponse2 = _interopRequireDefault(_typesHTTPResponse);","","var _typesDocument = require(\"../types/Document\");","","var _typesDocument2 = _interopRequireDefault(_typesDocument);","","var _typesCollection = require(\"../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","var _typesAPIError = require(\"../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _stepsHttpValidateRequest = require(\"../steps/http/validate-request\");","","var requestValidators = _interopRequireWildcard(_stepsHttpValidateRequest);","","var _stepsHttpContentNegotiationNegotiateContentType = require(\"../steps/http/content-negotiation/negotiate-content-type\");","","var _stepsHttpContentNegotiationNegotiateContentType2 = _interopRequireDefault(_stepsHttpContentNegotiationNegotiateContentType);","","var _stepsHttpContentNegotiationValidateContentType = require(\"../steps/http/content-negotiation/validate-content-type\");","","var _stepsHttpContentNegotiationValidateContentType2 = _interopRequireDefault(_stepsHttpContentNegotiationValidateContentType);","","var _stepsPreQueryLabelToIds = require(\"../steps/pre-query/label-to-ids\");","","var _stepsPreQueryLabelToIds2 = _interopRequireDefault(_stepsPreQueryLabelToIds);","","var _stepsPreQueryParseRequestPrimary = require(\"../steps/pre-query/parse-request-primary\");","","var _stepsPreQueryParseRequestPrimary2 = _interopRequireDefault(_stepsPreQueryParseRequestPrimary);","","var _stepsPreQueryValidateDocument = require(\"../steps/pre-query/validate-document\");","","var _stepsPreQueryValidateDocument2 = _interopRequireDefault(_stepsPreQueryValidateDocument);","","var _stepsPreQueryValidateResources = require(\"../steps/pre-query/validate-resources\");","","var _stepsPreQueryValidateResources2 = _interopRequireDefault(_stepsPreQueryValidateResources);","","var _stepsApplyTransform = require(\"../steps/apply-transform\");","","var _stepsApplyTransform2 = _interopRequireDefault(_stepsApplyTransform);","","var _stepsDoQueryDoGet = require(\"../steps/do-query/do-get\");","","var _stepsDoQueryDoGet2 = _interopRequireDefault(_stepsDoQueryDoGet);","","var _stepsDoQueryDoPost = require(\"../steps/do-query/do-post\");","","var _stepsDoQueryDoPost2 = _interopRequireDefault(_stepsDoQueryDoPost);","","var _stepsDoQueryDoPatch = require(\"../steps/do-query/do-patch\");","","var _stepsDoQueryDoPatch2 = _interopRequireDefault(_stepsDoQueryDoPatch);","","var _stepsDoQueryDoDelete = require(\"../steps/do-query/do-delete\");","","var _stepsDoQueryDoDelete2 = _interopRequireDefault(_stepsDoQueryDoDelete);","","var supportedExt = [];","","// We have to globally patch Promise for co to work, even though global patches","// are suboptimal. See https://github.com/ethanresnick/json-api/issues/47","// We use eval so that the runtime transformer doesn't replace our check for an","// existing Promise with an invocation of the polyfill.","/*eslint-disable no-eval */","GLOBAL.Promise = eval(\"typeof Promise !== 'undefined' ? Promise : undefined\") || require(\"babel-runtime/core-js/promise\")[\"default\"];","/*eslint-enable no-eval */","","var APIController = (function () {","  function APIController(registry) {","    _classCallCheck(this, APIController);","","    this.registry = registry;","  }","","  /**","   * @param {Request} request The Request this controller will use to generate","   *    the Response.","   * @param {Object} frameworkReq This should be the request object generated by","   *    the framework that you're using. But, really, it can be absolutely","   *    anything, as this controller won't use it for anything except passing it","   *    to user-provided functions that it calls (like transforms and id mappers).","   * @param {Object} frameworkRes Theoretically, the response objcet generated","   *     by your http framework but, like with frameworkReq, it can be anything.","   */","","  _createClass(APIController, [{","    key: \"handle\",","    value: function handle(request, frameworkReq, frameworkRes) {","      var response = new _typesHTTPResponse2[\"default\"]();","      var registry = this.registry;","","      // Kick off the chain for generating the response.","      return (0, _co2[\"default\"])(_regeneratorRuntime.mark(function callee$2$0() {","        var parsedPrimary, mappedLabel, mappedIsEmptyArray, errorsArr, apiErrors;","        return _regeneratorRuntime.wrap(function callee$2$0$(context$3$0) {","          while (1) switch (context$3$0.prev = context$3$0.next) {","            case 0:","              context$3$0.prev = 0;","              context$3$0.next = 3;","              return requestValidators.checkMethod(request);","","            case 3:","              context$3$0.next = 5;","              return requestValidators.checkBodyExistence(request);","","            case 5:","              context$3$0.next = 7;","              return (0, _stepsHttpContentNegotiationNegotiateContentType2[\"default\"])(request.accepts, [\"application/vnd.api+json\"]);","","            case 7:","              response.contentType = context$3$0.sent;","","              // No matter what, though, we're varying on Accept. See:","              // https://github.com/ethanresnick/json-api/issues/22","              response.headers.vary = \"Accept\";","","              // If the type requested in the endpoint hasn't been registered, we 404.","","              if (registry.hasType(request.type)) {","                context$3$0.next = 11;","                break;","              }","","              throw new _typesAPIError2[\"default\"](404, undefined, request.type + \" is not a valid type.\");","","            case 11:","              if (!request.hasBody) {","                context$3$0.next = 25;","                break;","              }","","              context$3$0.next = 14;","              return (0, _stepsHttpContentNegotiationValidateContentType2[\"default\"])(request, supportedExt);","","            case 14:","              context$3$0.next = 16;","              return (0, _stepsPreQueryValidateDocument2[\"default\"])(request.body);","","            case 16:","              context$3$0.next = 18;","              return (0, _stepsPreQueryParseRequestPrimary2[\"default\"])(request.body.data, request.aboutRelationship);","","            case 18:","              parsedPrimary = context$3$0.sent;","","              if (request.aboutRelationship) {","                context$3$0.next = 22;","                break;","              }","","              context$3$0.next = 22;","              return (0, _stepsPreQueryValidateResources2[\"default\"])(request.type, parsedPrimary, registry);","","            case 22:","              context$3$0.next = 24;","              return (0, _stepsApplyTransform2[\"default\"])(parsedPrimary, \"beforeSave\", registry, frameworkReq, frameworkRes);","","            case 24:","              request.primary = context$3$0.sent;","","            case 25:","              if (!(request.idOrIds && request.allowLabel)) {","                context$3$0.next = 32;","                break;","              }","","              context$3$0.next = 28;","              return (0, _stepsPreQueryLabelToIds2[\"default\"])(request.type, request.idOrIds, registry, frameworkReq);","","            case 28:","              mappedLabel = context$3$0.sent;","","              // set the idOrIds on the request context","              request.idOrIds = mappedLabel;","","              // if our new ids are null/undefined or an empty array, we can set","              // the primary resources too! (Note: one could argue that we should","              // 404 rather than return null when the label matches no ids.)","              mappedIsEmptyArray = Array.isArray(mappedLabel) && !mappedLabel.length;","","              if (mappedLabel === null || mappedLabel === undefined || mappedIsEmptyArray) {","                response.primary = mappedLabel ? new _typesCollection2[\"default\"]() : null;","              }","","            case 32:","              if (!(typeof response.primary === \"undefined\")) {","                context$3$0.next = 47;","                break;","              }","","              context$3$0.t0 = request.method;","              context$3$0.next = context$3$0.t0 === \"get\" ? 36 : context$3$0.t0 === \"post\" ? 39 : context$3$0.t0 === \"patch\" ? 42 : context$3$0.t0 === \"delete\" ? 45 : 47;","              break;","","            case 36:","              context$3$0.next = 38;","              return (0, _stepsDoQueryDoGet2[\"default\"])(request, response, registry);","","            case 38:","              return context$3$0.abrupt(\"break\", 47);","","            case 39:","              context$3$0.next = 41;","              return (0, _stepsDoQueryDoPost2[\"default\"])(request, response, registry);","","            case 41:","              return context$3$0.abrupt(\"break\", 47);","","            case 42:","              context$3$0.next = 44;","              return (0, _stepsDoQueryDoPatch2[\"default\"])(request, response, registry);","","            case 44:","              return context$3$0.abrupt(\"break\", 47);","","            case 45:","              context$3$0.next = 47;","              return (0, _stepsDoQueryDoDelete2[\"default\"])(request, response, registry);","","            case 47:","              context$3$0.next = 55;","              break;","","            case 49:","              context$3$0.prev = 49;","              context$3$0.t1 = context$3$0[\"catch\"](0);","              errorsArr = Array.isArray(context$3$0.t1) ? context$3$0.t1 : [context$3$0.t1];","              apiErrors = errorsArr.map(_typesAPIError2[\"default\"].fromError);","","              // Leave the error response's content type as JSON if we negotiated","              // for that, but otherwise force it to JSON API, since that's the only","              // other error format we know how to generate.","              if (response.contentType !== \"application/json\") {","                response.contentType = \"application/vnd.api+json\";","              }","","              // Set the other key fields on the response","              response.errors = response.errors.concat(apiErrors);","              //console.log(\"API CONTROLLER ERRORS\", errorsArr[0], errorsArr[0].stack);","","            case 55:","              if (!response.errors.length) {","                context$3$0.next = 59;","                break;","              }","","              response.status = pickStatus(response.errors.map(function (v) {","                return Number(v.status);","              }));","              response.body = new _typesDocument2[\"default\"](response.errors).get(true);","              return context$3$0.abrupt(\"return\", response);","","            case 59:","              context$3$0.next = 61;","              return (0, _stepsApplyTransform2[\"default\"])(response.primary, \"beforeRender\", registry, frameworkReq, frameworkRes);","","            case 61:","              response.primary = context$3$0.sent;","              context$3$0.next = 64;","              return (0, _stepsApplyTransform2[\"default\"])(response.included, \"beforeRender\", registry, frameworkReq, frameworkRes);","","            case 64:","              response.included = context$3$0.sent;","","              if (response.status !== 204) {","                response.body = new _typesDocument2[\"default\"](response.primary, response.included, undefined, registry.urlTemplates(), request.uri).get(true);","              }","","              return context$3$0.abrupt(\"return\", response);","","            case 67:","            case \"end\":","              return context$3$0.stop();","          }","        }, callee$2$0, this, [[0, 49]]);","      }));","    }","","    /**","     * Builds a response from errors. Allows errors that occur outside of the","     * library to be handled and returned in JSON API-compiant fashion.","     *","     * @param {Error|APIError|Error[]|APIError[]} errors Error or array of errors","     * @param {string} requestAccepts Request's Accepts header","     */","  }], [{","    key: \"responseFromExternalError\",","    value: function responseFromExternalError(errors, requestAccepts) {","      var response = new _typesHTTPResponse2[\"default\"]();","","      // Convert to array","      response.errors = Array.isArray(errors) ? errors : [errors];","","      // Convert Errors to APIErrors","      response.errors = response.errors.map(_typesAPIError2[\"default\"].fromError.bind(_typesAPIError2[\"default\"]));","","      response.status = pickStatus(response.errors.map(function (v) {","        return Number(v.status);","      }));","      response.body = new _typesDocument2[\"default\"](response.errors).get(true);","","      return (0, _stepsHttpContentNegotiationNegotiateContentType2[\"default\"])(requestAccepts, [\"application/vnd.api+json\"]).then(function (contentType) {","        response.contentType = contentType.toLowerCase() === \"application/json\" ? contentType : \"application/vnd.api+json\";","        return response;","      }, function () {","        // if we couldn't find any acceptable content-type,","        // just ignore the accept header, as http allows.","        response.contentType = \"application/vnd.api+json\";","        return response;","      });","    }","  }]);","","  return APIController;","})();","","APIController.supportedExt = supportedExt;","","exports[\"default\"] = APIController;","","/**"," * Returns the status code that best represents a set of error statuses."," */","function pickStatus(errStatuses) {","  return errStatuses[0];","}","module.exports = exports[\"default\"];","","// check that a valid method is in use","","// throw if the body is supposed to be present but isn't (or vice-versa).","","// Try to negotiate the content type (may fail, and we may need to","// deviate from the negotiated value if we have to return an error","// body, rather than our expected response).","","// If the request has a body, validate it and parse its resources.","","// validate the request's resources.","","// Map label to idOrIds, if applicable.","","// Actually fulfill the request!","// If we've already populated the primary resources, which is possible","// because the label may have mapped to no id(s), we don't need to query.","","// Add errors to the response converting them, if necessary, to","// APIError instances first. Might be needed if, e.g., the error was","// unexpected (and so uncaught and not transformed) in one of prior steps","// or the user couldn't throw an APIError for compatibility with other code.","","// If we have errors, which could have come from prior steps not just","// throwing, return here and don't bother with transforms.","","// apply transforms pre-send"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":1,"53":1,"55":1,"57":1,"59":1,"61":1,"63":1,"65":1,"67":1,"69":1,"71":1,"73":1,"75":1,"77":1,"79":1,"81":1,"83":1,"85":1,"92":1,"95":1,"96":1,"97":0,"99":0,"113":1,"116":0,"117":0,"120":0,"121":0,"122":0,"123":0,"125":0,"126":0,"127":0,"130":0,"131":0,"134":0,"135":0,"138":0,"142":0,"146":0,"147":0,"148":0,"151":0,"154":0,"155":0,"156":0,"159":0,"160":0,"163":0,"164":0,"167":0,"168":0,"171":0,"173":0,"174":0,"175":0,"178":0,"179":0,"182":0,"183":0,"186":0,"189":0,"190":0,"191":0,"194":0,"195":0,"198":0,"201":0,"206":0,"208":0,"209":0,"213":0,"214":0,"215":0,"218":0,"219":0,"220":0,"223":0,"224":0,"227":0,"230":0,"231":0,"234":0,"237":0,"238":0,"241":0,"244":0,"245":0,"248":0,"249":0,"252":0,"253":0,"254":0,"255":0,"260":0,"261":0,"265":0,"269":0,"270":0,"271":0,"274":0,"275":0,"277":0,"278":0,"281":0,"282":0,"285":0,"286":0,"287":0,"290":0,"292":0,"293":0,"296":0,"300":0,"316":0,"319":0,"322":0,"324":0,"325":0,"327":0,"329":0,"330":0,"331":0,"335":0,"336":0,"341":1,"344":1,"346":1,"351":1,"352":0,"354":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/HTTP/Response.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/HTTP/Response.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"Response","line":13,"loc":{"start":{"line":13,"column":15},"end":{"line":13,"column":35}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":83}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":60}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"5":{"start":{"line":13,"column":0},"end":{"line":54,"column":2}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},"7":{"start":{"line":19,"column":2},"end":{"line":19,"column":16}},"8":{"start":{"line":23,"column":2},"end":{"line":23,"column":19}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":26}},"10":{"start":{"line":29,"column":2},"end":{"line":32,"column":4}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"12":{"start":{"line":39,"column":2},"end":{"line":39,"column":19}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":51}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":52}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":49}},"16":{"start":{"line":53,"column":2},"end":{"line":53,"column":48}},"17":{"start":{"line":56,"column":0},"end":{"line":56,"column":66}},"18":{"start":{"line":57,"column":0},"end":{"line":57,"column":36}}},"branchMap":{},"code":["\"use strict\";","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _utilTypeHandling = require(\"../../util/type-handling\");","","var propDesc = { writable: true, enumerable: true };","","var Response = function Response() {","  _classCallCheck(this, Response);","","  // The JSON-API extensions used to formulate the response,","  // which affects the final the Content-Type header and our","  // validation of the client's `Accept` header.","  this.ext = [];","","  // The response's errors. If it has some,","  // we render them instead of a standard document.","  this.errors = [];","","  // The response's content type.","  this.contentType = null;","","  // Other headers in the response.","  this.headers = {","    location: null,","    vary: null","  };","","  // The response's status.","  this.status = null;","","  // The JSON for the response body, as a string.","  // Down the line, this might allow for a stream.","  this.body = null;","","  // The response's primary data. Have to use","  // Object.defineProperty to default it to undefined","  // while allowing us to set it post seal().","  Object.defineProperty(this, \"primary\", propDesc);","","  // The response's included resources.","  Object.defineProperty(this, \"included\", propDesc);","","  // The response document's top-level links.","  Object.defineProperty(this, \"links\", propDesc);","","  // The response document's top-level meta information.","  Object.defineProperty(this, \"meta\", propDesc);","};","","exports[\"default\"] = (0, _utilTypeHandling.ValueObject)(Response);","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"14":0,"19":0,"23":0,"26":0,"29":0,"35":0,"39":0,"44":0,"47":0,"50":0,"53":0,"56":1,"57":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/http/validate-request.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/http/validate-request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{"1":[0,0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"checkBodyExistence","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":44}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":32},"end":{"line":22,"column":59}}},"3":{"name":"checkMethod","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":67}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":34}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":22}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":37}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"10":{"start":{"line":21,"column":0},"end":{"line":33,"column":1}},"11":{"start":{"line":22,"column":2},"end":{"line":32,"column":5}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":260}},"13":{"start":{"line":25,"column":4},"end":{"line":31,"column":5}},"14":{"start":{"line":26,"column":6},"end":{"line":26,"column":16}},"15":{"start":{"line":27,"column":11},"end":{"line":31,"column":5}},"16":{"start":{"line":28,"column":6},"end":{"line":28,"column":112}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":111}},"18":{"start":{"line":35,"column":0},"end":{"line":45,"column":1}},"19":{"start":{"line":36,"column":2},"end":{"line":36,"column":27}},"20":{"start":{"line":38,"column":2},"end":{"line":44,"column":3}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":137}},"22":{"start":{"line":41,"column":4},"end":{"line":41,"column":108}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":30}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":20},"end":{"line":23,"column":75}},{"start":{"line":23,"column":79},"end":{"line":23,"column":113}},{"start":{"line":23,"column":117},"end":{"line":23,"column":149}},{"start":{"line":23,"column":153},"end":{"line":23,"column":187}},{"start":{"line":23,"column":191},"end":{"line":23,"column":214}},{"start":{"line":23,"column":218},"end":{"line":23,"column":259}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":11},"end":{"line":27,"column":11}},{"start":{"line":27,"column":11},"end":{"line":27,"column":11}}]},"4":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"5":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":89},"end":{"line":39,"column":130}},{"start":{"line":39,"column":133},"end":{"line":39,"column":135}}]}},"code":["\"use strict\";","","var _Promise = require(\"babel-runtime/core-js/promise\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.checkBodyExistence = checkBodyExistence;","exports.checkMethod = checkMethod;","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","function checkBodyExistence(requestContext) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    var needsBody = [\"post\", \"patch\"].indexOf(requestContext.method) !== -1 || requestContext.method === \"delete\" && requestContext.aboutRelationship || requestContext.method === \"delete\" && !requestContext.idOrIds && requestContext.ext.indexOf(\"bulk\") !== -1;","","    if (requestContext.hasBody === needsBody) {","      resolve();","    } else if (needsBody) {","      reject(new _typesAPIError2[\"default\"](400, undefined, \"This request needs a body, but didn't have one.\"));","    } else {","      reject(new _typesAPIError2[\"default\"](400, undefined, \"This request should not have a body, but does.\"));","    }","  });","}","","function checkMethod(_ref) {","  var method = _ref.method;","","  if ([\"patch\", \"post\", \"delete\", \"get\"].indexOf(method) === -1) {","    var detail = \"The method \\\"\" + method + \"\\\" is not supported.\" + (method === \"put\" ? \" See http://jsonapi.org/faq/#wheres-put\" : \"\");","","    return _Promise.reject(new _typesAPIError2[\"default\"](405, undefined, \"Method not supported.\", detail));","  } else {","    return _Promise.resolve();","  }","}"],"l":{"3":1,"5":1,"7":1,"10":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"22":0,"23":0,"25":0,"26":0,"27":0,"28":0,"30":0,"35":1,"36":0,"38":0,"39":0,"41":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/http/content-negotiation/negotiate-content-type.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/http/content-negotiation/negotiate-content-type.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":21},"end":{"line":37,"column":65}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":32},"end":{"line":38,"column":59}}},"3":{"name":"hasParams","line":40,"loc":{"start":{"line":40,"column":20},"end":{"line":40,"column":43}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":43},"end":{"line":56,"column":57}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":40}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":55}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":56}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":63}},"10":{"start":{"line":37,"column":0},"end":{"line":80,"column":2}},"11":{"start":{"line":38,"column":2},"end":{"line":79,"column":5}},"12":{"start":{"line":39,"column":4},"end":{"line":39,"column":88}},"13":{"start":{"line":40,"column":4},"end":{"line":42,"column":6}},"14":{"start":{"line":41,"column":6},"end":{"line":41,"column":66}},"15":{"start":{"line":46,"column":4},"end":{"line":46,"column":96}},"16":{"start":{"line":47,"column":4},"end":{"line":47,"column":133}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":77}},"18":{"start":{"line":53,"column":4},"end":{"line":53,"column":74}},"19":{"start":{"line":56,"column":4},"end":{"line":58,"column":7}},"20":{"start":{"line":57,"column":6},"end":{"line":57,"column":66}},"21":{"start":{"line":62,"column":4},"end":{"line":78,"column":9}},"22":{"start":{"line":63,"column":6},"end":{"line":63,"column":74}},"23":{"start":{"line":68,"column":9},"end":{"line":78,"column":9}},"24":{"start":{"line":69,"column":8},"end":{"line":69,"column":31}},"25":{"start":{"line":74,"column":11},"end":{"line":78,"column":9}},"26":{"start":{"line":75,"column":10},"end":{"line":75,"column":46}},"27":{"start":{"line":77,"column":10},"end":{"line":77,"column":78}},"28":{"start":{"line":82,"column":0},"end":{"line":82,"column":36}}},"branchMap":{"1":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":64},"end":{"line":47,"column":111}},{"start":{"line":47,"column":114},"end":{"line":47,"column":132}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]},"3":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":8},"end":{"line":62,"column":28}},{"start":{"line":62,"column":32},"end":{"line":62,"column":62}}]},"4":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":9},"end":{"line":68,"column":9}},{"start":{"line":68,"column":9},"end":{"line":68,"column":9}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":11}},{"start":{"line":74,"column":11},"end":{"line":74,"column":11}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":15},"end":{"line":74,"column":35}},{"start":{"line":74,"column":39},"end":{"line":74,"column":62}}]}},"code":["\"use strict\";","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _negotiator = require(\"negotiator\");","","var _negotiator2 = _interopRequireDefault(_negotiator);","","var _typesAPIError = require(\"../../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _utilTypeHandling = require(\"../../../util/type-handling\");","","/**"," * Negotiate the Content-Type to use for the response."," *"," * More arguments may be added to the function later to support"," * negotiating on parameters for extensions."," *"," * @param {String} acceptHeader The raw `Accept` header string from the client."," * @param {Array[String]} availableBaseTypes A list of \"type/subtype\""," *    representations, without that the server can produce for the"," *    requested resource."," * @return {Promise} A Promise that resolves to the Content-Type to use,"," *    or false if no acceptable one exists."," */","","exports[\"default\"] = function (acceptHeader, availableBaseTypes) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    var negotiator = new _negotiator2[\"default\"]({ headers: { accept: acceptHeader } });","    var hasParams = function hasParams(it) {","      return !(0, _utilTypeHandling.objectIsEmpty)(it.parameters);","    };","","    // If an endpoint supports JSON API's media type, it implicity","    // supports JSON too. Though we'll only respond with JSON if *necessary*.","    var endpointSupportsJsonApi = availableBaseTypes.indexOf(\"application/vnd.api+json\") !== -1;","    var syntheticAvailableBaseTypes = endpointSupportsJsonApi ? [\"application/json\"].concat(availableBaseTypes) : availableBaseTypes;","","    // Take a first stab at finding the preferred type with negotiator,","    // but then we'll only use that type below if it's *not* json api,","    // because we can't rely on negotiator to reason propery about parameters.","    var acceptables = negotiator.mediaTypes(undefined, { \"detailed\": true });","    var preferredType = negotiator.mediaType(syntheticAvailableBaseTypes);","","    // Find all the Accept clauses that specifically reference json api.","    var jsonApiRanges = acceptables.filter(function (it) {","      return it.type.toLowerCase() === \"application/vnd.api+json\";","    });","","    // If we do have JSON API in the Accept header and all instances","    // are parameterized, this is explicitly a 406.","    if (jsonApiRanges.length && jsonApiRanges.every(hasParams)) {","      reject(new _typesAPIError2[\"default\"](406, null, \"Not Acceptable\"));","    }","","    // For everything but the JSON API media type, trust","    // negotiator to handle things correctly.","    else if (preferredType.toLowerCase() !== \"application/vnd.api+json\") {","        resolve(preferredType);","      }","","      // Otherwise, our preferred type is non existent or json api and, if it's","      // json api, we have it unparameterized at least once.","      else if (jsonApiRanges.length && endpointSupportsJsonApi) {","          resolve(\"application/vnd.api+json\");","        } else {","          reject(new _typesAPIError2[\"default\"](406, null, \"Not Acceptable\"));","        }","  });","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"37":1,"38":0,"39":0,"40":0,"41":0,"46":0,"47":0,"52":0,"53":0,"56":0,"57":0,"62":0,"63":0,"68":0,"69":0,"74":0,"75":0,"77":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/http/content-negotiation/validate-content-type.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/http/content-negotiation/validate-content-type.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"validateContentType","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":59}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":32},"end":{"line":27,"column":59}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":75}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"5":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":37}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":57}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":56}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":61}},"11":{"start":{"line":24,"column":0},"end":{"line":24,"column":63}},"12":{"start":{"line":26,"column":0},"end":{"line":48,"column":1}},"13":{"start":{"line":27,"column":2},"end":{"line":47,"column":5}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":81}},"15":{"start":{"line":32,"column":4},"end":{"line":32,"column":42}},"16":{"start":{"line":36,"column":4},"end":{"line":46,"column":5}},"17":{"start":{"line":37,"column":6},"end":{"line":37,"column":130}},"18":{"start":{"line":39,"column":6},"end":{"line":39,"column":91}},"19":{"start":{"line":40,"column":11},"end":{"line":46,"column":5}},"20":{"start":{"line":41,"column":6},"end":{"line":41,"column":231}},"21":{"start":{"line":43,"column":6},"end":{"line":43,"column":104}},"22":{"start":{"line":45,"column":6},"end":{"line":45,"column":16}},"23":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":11}},{"start":{"line":40,"column":11},"end":{"line":40,"column":11}}]}},"code":["\"use strict\";","","var _Object$keys = require(\"babel-runtime/core-js/object/keys\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports[\"default\"] = validateContentType;","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _contentType = require(\"content-type\");","","var _contentType2 = _interopRequireDefault(_contentType);","","var _typesAPIError = require(\"../../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _utilTypeHandling = require(\"../../../util/type-handling\");","","function validateContentType(requestContext, supportedExt) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    var contentType = _contentType2[\"default\"].parse(requestContext.contentType);","","    // Removed due to issues with Firefox automatically adding charset parameter","    // See: https://github.com/ethanresnick/json-api/issues/78","    delete contentType.parameters.charset;","","    // In the future, we might delegate back to the framework if the client","    // provides a base content type other than json-api's. But, for now, we 415.","    if (contentType.type !== \"application/vnd.api+json\") {","      var detail = \"The request's Content-Type must be application/vnd.api+json, \" + \"but you provided \" + contentType.type + \".\";","","      reject(new _typesAPIError2[\"default\"](415, undefined, \"Invalid Media Type\", detail));","    } else if (!(0, _utilTypeHandling.objectIsEmpty)(contentType.parameters)) {","      var detail = \"The request's Content-Type must be application/vnd.api+json, with \" + \"no parameters. But the Content-Type you provided contained the \" + (\"parameters: \" + _Object$keys(contentType.parameters).join(\", \") + \".\");","","      reject(new _typesAPIError2[\"default\"](415, undefined, \"Invalid Media Type Parameter(s)\", detail));","    } else {","      resolve();","    }","  });","}","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"27":0,"28":0,"32":0,"36":0,"37":0,"39":0,"40":0,"41":0,"43":0,"45":0,"50":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/label-to-ids.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/label-to-ids.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":21},"end":{"line":13,"column":72}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":32},"end":{"line":14,"column":59}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":31,"column":2}},"6":{"start":{"line":14,"column":2},"end":{"line":30,"column":5}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":43}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":73}},"9":{"start":{"line":17,"column":4},"end":{"line":17,"column":51}},"10":{"start":{"line":18,"column":4},"end":{"line":18,"column":62}},"11":{"start":{"line":21,"column":4},"end":{"line":29,"column":7}},"12":{"start":{"line":22,"column":6},"end":{"line":22,"column":82}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"14":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":22},"end":{"line":18,"column":34}},{"start":{"line":18,"column":38},"end":{"line":18,"column":61}}]},"2":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":4}},{"start":{"line":21,"column":4},"end":{"line":21,"column":4}}]}},"code":["\"use strict\";","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","exports[\"default\"] = function (type, labelOrId, registry, frameworkReq) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    var adapter = registry.dbAdapter(type);","    var model = adapter.getModel(adapter.constructor.getModelName(type));","    var labelMappers = registry.labelMappers(type);","    var labelMapper = labelMappers && labelMappers[labelOrId];","","    // reolve with the mapped label","    if (typeof labelMapper === \"function\") {","      (0, _q2[\"default\"])(labelMapper(model, frameworkReq)).then(resolve, reject);","    }","","    // or, if we couldn't find a label mapper, that means","    // we were given an id, so we just resolve with that id.","    else {","        resolve(labelOrId);","      }","  });","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"21":0,"22":0,"28":0,"33":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/parse-request-primary.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/parse-request-primary.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":21},"end":{"line":33,"column":53}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":32},"end":{"line":34,"column":59}}},"3":{"name":"relationshipFromJSON","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}}},"4":{"name":"linkageFromJSON","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":31}}},"5":{"name":"resourceFromJSON","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":61}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":69}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":51}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":57}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":65}},"15":{"start":{"line":33,"column":0},"end":{"line":53,"column":2}},"16":{"start":{"line":34,"column":2},"end":{"line":52,"column":5}},"17":{"start":{"line":35,"column":4},"end":{"line":51,"column":5}},"18":{"start":{"line":36,"column":6},"end":{"line":42,"column":7}},"19":{"start":{"line":37,"column":8},"end":{"line":37,"column":39}},"20":{"start":{"line":38,"column":13},"end":{"line":42,"column":7}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":78}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":40}},"23":{"start":{"line":44,"column":6},"end":{"line":50,"column":7}},"24":{"start":{"line":45,"column":8},"end":{"line":45,"column":22}},"25":{"start":{"line":47,"column":8},"end":{"line":47,"column":70}},"26":{"start":{"line":48,"column":8},"end":{"line":48,"column":74}},"27":{"start":{"line":49,"column":8},"end":{"line":49,"column":79}},"28":{"start":{"line":55,"column":0},"end":{"line":61,"column":1}},"29":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"30":{"start":{"line":57,"column":4},"end":{"line":57,"column":90}},"31":{"start":{"line":60,"column":2},"end":{"line":60,"column":72}},"32":{"start":{"line":63,"column":0},"end":{"line":65,"column":1}},"33":{"start":{"line":64,"column":2},"end":{"line":64,"column":45}},"34":{"start":{"line":67,"column":0},"end":{"line":82,"column":1}},"35":{"start":{"line":68,"column":2},"end":{"line":68,"column":47}},"36":{"start":{"line":71,"column":2},"end":{"line":71,"column":22}},"37":{"start":{"line":72,"column":2},"end":{"line":79,"column":3}},"38":{"start":{"line":73,"column":4},"end":{"line":75,"column":5}},"39":{"start":{"line":74,"column":6},"end":{"line":74,"column":73}},"40":{"start":{"line":77,"column":4},"end":{"line":77,"column":70}},"41":{"start":{"line":78,"column":4},"end":{"line":78,"column":12}},"42":{"start":{"line":81,"column":2},"end":{"line":81,"column":103}},"43":{"start":{"line":83,"column":0},"end":{"line":83,"column":36}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":13},"end":{"line":38,"column":13}},{"start":{"line":38,"column":13},"end":{"line":38,"column":13}}]},"3":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":2},"end":{"line":56,"column":2}},{"start":{"line":56,"column":2},"end":{"line":56,"column":2}}]},"5":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":22},"end":{"line":68,"column":40}},{"start":{"line":68,"column":44},"end":{"line":68,"column":46}}]}},"code":["\"use strict\";","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _typesResource = require(\"../../types/Resource\");","","var _typesResource2 = _interopRequireDefault(_typesResource);","","var _typesRelationship = require(\"../../types/Relationship\");","","var _typesRelationship2 = _interopRequireDefault(_typesRelationship);","","var _typesLinkage = require(\"../../types/Linkage\");","","var _typesLinkage2 = _interopRequireDefault(_typesLinkage);","","var _typesCollection = require(\"../../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","exports[\"default\"] = function (data, parseAsLinkage) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    try {","      if (parseAsLinkage) {","        resolve(linkageFromJSON(data));","      } else if (Array.isArray(data)) {","        resolve(new _typesCollection2[\"default\"](data.map(resourceFromJSON)));","      } else {","        resolve(resourceFromJSON(data));","      }","    } catch (error) {","      if (error instanceof _typesAPIError2[\"default\"]) {","        reject(error);","      } else {","        var title = \"The resources you provided could not be parsed.\";","        var details = \"The precise error was: \\\"\" + error.message + \"\\\".\";","        reject(new _typesAPIError2[\"default\"](400, undefined, title, details));","      }","    }","  });","};","","function relationshipFromJSON(json) {","  if (typeof json.data === \"undefined\") {","    throw new _typesAPIError2[\"default\"](400, undefined, \"Missing relationship linkage.\");","  }","","  return new _typesRelationship2[\"default\"](linkageFromJSON(json.data));","}","","function linkageFromJSON(json) {","  return new _typesLinkage2[\"default\"](json);","}","","function resourceFromJSON(json) {","  var relationships = json.relationships || {};","","  //build Relationships","  var key = undefined;","  try {","    for (key in relationships) {","      relationships[key] = relationshipFromJSON(relationships[key], key);","    }","  } catch (e) {","    e.details = \"No data was found for the \" + key + \" relationship.\";","    throw e;","  }","","  return new _typesResource2[\"default\"](json.type, json.id, json.attributes, relationships, json.meta);","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"41":0,"44":0,"45":0,"47":0,"48":0,"49":0,"55":1,"56":0,"57":0,"60":0,"63":1,"64":0,"67":1,"68":0,"71":0,"72":0,"73":0,"74":0,"77":0,"78":0,"81":0,"83":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/validate-document.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/validate-document.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":17,"column":37}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":32},"end":{"line":18,"column":59}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":22}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":37}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":53}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":61}},"7":{"start":{"line":17,"column":0},"end":{"line":28,"column":2}},"8":{"start":{"line":18,"column":2},"end":{"line":27,"column":5}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":50}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":70}},"11":{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},"12":{"start":{"line":23,"column":6},"end":{"line":23,"column":68}},"13":{"start":{"line":25,"column":6},"end":{"line":25,"column":16}},"14":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":32}},{"start":{"line":22,"column":36},"end":{"line":22,"column":63}}]}},"code":["\"use strict\";","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","exports[\"default\"] = function (body) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    var ownProp = Object.prototype.hasOwnProperty;","    var errMessage = \"Request body is not a valid JSON API document.\";","","    if (typeof body !== \"object\" || !ownProp.call(body, \"data\")) {","      reject(new _typesAPIError2[\"default\"](400, null, errMessage));","    } else {","      resolve();","    }","  });","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"15":1,"17":1,"18":0,"19":0,"20":0,"22":0,"23":0,"25":0,"30":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/validate-resources.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/pre-query/validate-resources.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":21},"end":{"line":23,"column":83}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":32},"end":{"line":24,"column":59}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":18},"end":{"line":36,"column":34}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":37},"end":{"line":41,"column":57}}},"5":{"name":"(anonymous_5)","line":42,"loc":{"start":{"line":42,"column":40},"end":{"line":42,"column":68}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":75}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":22}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":37}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":60}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":69,"column":2}},"11":{"start":{"line":24,"column":2},"end":{"line":68,"column":5}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":57}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":79}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":92}},"15":{"start":{"line":30,"column":4},"end":{"line":67,"column":5}},"16":{"start":{"line":31,"column":6},"end":{"line":31,"column":114}},"17":{"start":{"line":32,"column":6},"end":{"line":32,"column":91}},"18":{"start":{"line":34,"column":6},"end":{"line":34,"column":76}},"19":{"start":{"line":36,"column":6},"end":{"line":54,"column":8}},"20":{"start":{"line":37,"column":8},"end":{"line":37,"column":46}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":67}},"22":{"start":{"line":41,"column":8},"end":{"line":45,"column":11}},"23":{"start":{"line":42,"column":10},"end":{"line":44,"column":13}},"24":{"start":{"line":43,"column":12},"end":{"line":43,"column":75}},"25":{"start":{"line":48,"column":8},"end":{"line":53,"column":9}},"26":{"start":{"line":49,"column":10},"end":{"line":49,"column":93}},"27":{"start":{"line":50,"column":10},"end":{"line":52,"column":12}},"28":{"start":{"line":60,"column":6},"end":{"line":64,"column":7}},"29":{"start":{"line":61,"column":8},"end":{"line":61,"column":31}},"30":{"start":{"line":63,"column":8},"end":{"line":63,"column":52}},"31":{"start":{"line":63,"column":38},"end":{"line":63,"column":52}},"32":{"start":{"line":66,"column":6},"end":{"line":66,"column":23}},"33":{"start":{"line":71,"column":0},"end":{"line":71,"column":36}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]}},"code":["\"use strict\";","","var _Object$keys = require(\"babel-runtime/core-js/object/keys\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _utilTypeHandling = require(\"../../util/type-handling\");","","var _utilMisc = require(\"../../util/misc\");","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","exports[\"default\"] = function (endpointParentType, resourceOrCollection, registry) {","  return _q2[\"default\"].Promise(function (resolve, reject) {","    // validate that all resources are of types appropriate for the endpoint.","    var adapter = registry.dbAdapter(endpointParentType);","    var allowedTypes = adapter.getTypesAllowedInCollection(endpointParentType);","    var resourcesByType = (0, _utilTypeHandling.groupResourcesByType)(resourceOrCollection);","","    if (!(0, _utilMisc.isSubsetOf)(allowedTypes, _Object$keys(resourcesByType))) {","      var title = \"Some of the resources you provided are of a type that \" + \"doesn't belong in this collection.\";","      var detail = \"Valid types for this collection are: \" + allowedTypes.join(\", \") + \".\";","","      reject(new _typesAPIError2[\"default\"](400, undefined, title, detail));","    } else {","      var _loop = function (type) {","        var resources = resourcesByType[type];","        var relationshipNames = adapter.getRelationshipNames(type);","","        /*eslint-disable no-loop-func */","        var invalid = resources.some(function (resource) {","          return relationshipNames.some(function (relationshipName) {","            return typeof resource.attrs[relationshipName] !== \"undefined\";","          });","        });","        /*eslint-enable no-loop-func */","","        if (invalid) {","          var title = \"Relationship fields must be specified under the `relationships` key.\";","          return {","            v: reject(new _typesAPIError2[\"default\"](400, undefined, title))","          };","        }","      };","","      // If there are extra attributes or missing attributes, we want the","      // adapter to decide how to handle that, depending on the model. But,","      // if there are paths that must be relationship names listed under the","      // attributes, that's a case that we can identify here and throw for.","      for (var type in resourcesByType) {","        var _ret = _loop(type);","","        if (typeof _ret === \"object\") return _ret.v;","      }","","      return resolve();","    }","  });","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"24":0,"26":0,"27":0,"28":0,"30":0,"31":0,"32":0,"34":0,"36":0,"37":0,"38":0,"41":0,"42":0,"43":0,"48":0,"49":0,"50":0,"60":0,"61":0,"63":0,"66":0,"71":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/apply-transform.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/apply-transform.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":21},"end":{"line":23,"column":88}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":52},"end":{"line":28,"column":66}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":13},"end":{"line":30,"column":36}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":65},"end":{"line":31,"column":79}}},"5":{"name":"transform","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":64}}},"6":{"name":"superFn","line":51,"loc":{"start":{"line":51,"column":16},"end":{"line":51,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":65}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"8":{"start":{"line":23,"column":0},"end":{"line":41,"column":2}},"9":{"start":{"line":24,"column":2},"end":{"line":40,"column":5}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":78}},"11":{"start":{"line":26,"column":9},"end":{"line":40,"column":5}},"12":{"start":{"line":28,"column":4},"end":{"line":34,"column":7}},"13":{"start":{"line":29,"column":6},"end":{"line":29,"column":71}},"14":{"start":{"line":31,"column":6},"end":{"line":33,"column":10}},"15":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"16":{"start":{"line":39,"column":6},"end":{"line":39,"column":45}},"17":{"start":{"line":43,"column":0},"end":{"line":69,"column":1}},"18":{"start":{"line":44,"column":2},"end":{"line":44,"column":59}},"19":{"start":{"line":51,"column":2},"end":{"line":60,"column":4}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":56}},"21":{"start":{"line":55,"column":4},"end":{"line":59,"column":5}},"22":{"start":{"line":56,"column":6},"end":{"line":56,"column":22}},"23":{"start":{"line":58,"column":6},"end":{"line":58,"column":78}},"24":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"25":{"start":{"line":63,"column":4},"end":{"line":63,"column":40}},"26":{"start":{"line":67,"column":2},"end":{"line":67,"column":61}},"27":{"start":{"line":68,"column":2},"end":{"line":68,"column":41}},"28":{"start":{"line":70,"column":0},"end":{"line":70,"column":36}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":9},"end":{"line":26,"column":9}},{"start":{"line":26,"column":9},"end":{"line":26,"column":9}}]},"3":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":19}},{"start":{"line":55,"column":23},"end":{"line":55,"column":59}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]}},"code":["\"use strict\";","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typesResource = require(\"../types/Resource\");","","var _typesResource2 = _interopRequireDefault(_typesResource);","","var _typesCollection = require(\"../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","var _q = require(\"q\");","","/**"," * @param toTransform Could be a single resource, a collection, a link object, or null."," */","","exports[\"default\"] = function (toTransform, mode, registry, frameworkReq, frameworkRes) {","  if (toTransform instanceof _typesResource2[\"default\"]) {","    return transform(toTransform, frameworkReq, frameworkRes, mode, registry);","  } else if (toTransform instanceof _typesCollection2[\"default\"]) {","    // below, allow the user to return undefined to remove a vlaue.","    return _q.Promise.all(toTransform.resources.map(function (it) {","      return transform(it, frameworkReq, frameworkRes, mode, registry);","    })).then(function (transformed) {","      return new _typesCollection2[\"default\"](transformed.filter(function (it) {","        return it !== undefined;","      }));","    });","  }","","  // We only transform resources or collections.","  else {","      return _q.Promise.resolve(toTransform);","    }","};","","function transform(resource, req, res, transformMode, registry) {","  var transformFn = registry[transformMode](resource.type);","","  // SuperFn is a function that the first transformer can invoke.","  // It'll return the resource passed in (i.e. do nothing) if there","  // is no parentType or the parentType doesn't define an appropriate","  // transformer. Otherwise, it'll return the result of calling","  // the parentType's transformer with the provided arguments.","  var superFn = function superFn(resource, req, res) {","    // eslint-disable-line no-shadow","    var parentType = registry.parentType(resource.type);","","    if (!parentType || !registry[transformMode](parentType)) {","      return resource;","    } else {","      return registry[transformMode](parentType)(resource, req, res, superFn);","    }","  };","","  if (!transformFn) {","    return _q.Promise.resolve(resource);","  }","","  // Allow user to return a Promise or a value","  var transformed = transformFn(resource, req, res, superFn);","  return _q.Promise.resolve(transformed);","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"15":1,"17":1,"23":1,"24":0,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"39":0,"43":1,"44":0,"51":0,"53":0,"55":0,"56":0,"58":0,"62":0,"63":0,"67":0,"68":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-get.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-get.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":17,"column":74}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":93},"end":{"line":37,"column":114}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":63},"end":{"line":57,"column":83}}},"4":{"name":"parseFields","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":34}}},"5":{"name":"isField","line":80,"loc":{"start":{"line":80,"column":18},"end":{"line":80,"column":39}}},"6":{"name":"parseCommaSeparatedParam","line":92,"loc":{"start":{"line":92,"column":0},"end":{"line":92,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":81}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":61}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":47}},"7":{"start":{"line":17,"column":0},"end":{"line":74,"column":2}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":33}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"10":{"start":{"line":20,"column":2},"end":{"line":23,"column":26}},"11":{"start":{"line":26,"column":2},"end":{"line":73,"column":5}},"12":{"start":{"line":27,"column":4},"end":{"line":27,"column":60}},"13":{"start":{"line":28,"column":4},"end":{"line":28,"column":70}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":92}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":76}},"16":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"17":{"start":{"line":34,"column":6},"end":{"line":34,"column":48}},"18":{"start":{"line":37,"column":4},"end":{"line":42,"column":7}},"19":{"start":{"line":38,"column":6},"end":{"line":38,"column":52}},"20":{"start":{"line":40,"column":6},"end":{"line":40,"column":46}},"21":{"start":{"line":41,"column":6},"end":{"line":41,"column":47}},"22":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"23":{"start":{"line":54,"column":8},"end":{"line":54,"column":125}},"24":{"start":{"line":57,"column":6},"end":{"line":72,"column":9}},"25":{"start":{"line":62,"column":8},"end":{"line":62,"column":105}},"26":{"start":{"line":64,"column":8},"end":{"line":69,"column":9}},"27":{"start":{"line":65,"column":10},"end":{"line":65,"column":51}},"28":{"start":{"line":66,"column":10},"end":{"line":66,"column":132}},"29":{"start":{"line":68,"column":10},"end":{"line":68,"column":78}},"30":{"start":{"line":71,"column":8},"end":{"line":71,"column":55}},"31":{"start":{"line":76,"column":0},"end":{"line":90,"column":1}},"32":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"33":{"start":{"line":78,"column":2},"end":{"line":88,"column":3}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":16}},"35":{"start":{"line":80,"column":4},"end":{"line":82,"column":6}},"36":{"start":{"line":81,"column":6},"end":{"line":81,"column":65}},"37":{"start":{"line":84,"column":4},"end":{"line":87,"column":5}},"38":{"start":{"line":85,"column":6},"end":{"line":85,"column":71}},"39":{"start":{"line":86,"column":6},"end":{"line":86,"column":46}},"40":{"start":{"line":89,"column":2},"end":{"line":89,"column":16}},"41":{"start":{"line":92,"column":0},"end":{"line":94,"column":1}},"42":{"start":{"line":93,"column":2},"end":{"line":93,"column":64}},"43":{"start":{"line":95,"column":0},"end":{"line":95,"column":36}}},"branchMap":{"1":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":14},"end":{"line":30,"column":47}},{"start":{"line":30,"column":51},"end":{"line":30,"column":91}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"5":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":27},"end":{"line":62,"column":49}},{"start":{"line":62,"column":53},"end":{"line":62,"column":104}}]},"6":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":8}},{"start":{"line":64,"column":8},"end":{"line":64,"column":8}}]},"7":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"8":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":21},"end":{"line":85,"column":64}},{"start":{"line":85,"column":68},"end":{"line":85,"column":70}}]},"9":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":14},"end":{"line":93,"column":51}},{"start":{"line":93,"column":54},"end":{"line":93,"column":63}}]}},"code":["\"use strict\";","","var _slicedToArray = require(\"babel-runtime/helpers/sliced-to-array\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _utilArrays = require(\"../../util/arrays\");","","exports[\"default\"] = function (requestContext, responseContext, registry) {","  var type = requestContext.type;","  var adapter = registry.dbAdapter(type);","  var fields = undefined,","      sorts = undefined,","      includes = undefined,","      filters = undefined;","","  // Handle fields, sorts, includes and filters.","  if (!requestContext.aboutRelationship) {","    fields = parseFields(requestContext.queryParams.fields);","    sorts = parseCommaSeparatedParam(requestContext.queryParams.sort);","    // just support a \"simple\" filtering strategy for now.","    filters = requestContext.queryParams.filter && requestContext.queryParams.filter.simple;","    includes = parseCommaSeparatedParam(requestContext.queryParams.include);","","    if (!includes) {","      includes = registry.defaultIncludes(type);","    }","","    return adapter.find(type, requestContext.idOrIds, fields, sorts, filters, includes).then(function (resources) {","      var _resources = _slicedToArray(resources, 2);","","      responseContext.primary = _resources[0];","      responseContext.included = _resources[1];","    });","  }","","  // the user's asking for linkage. In this case:","  // - fields don't apply because fields only pick out members of resource","  //   objects, and here we're not returning a resource object;","  // - includes don't apply because the path names for an includes must match","  //   those in the primary data's `links` key, and this primary data doesn't","  //   have a links key.","  // - sorts don't apply beacuse that's only for resource collections.","  else {","      if (Array.isArray(requestContext.idOrIds)) {","        throw new _typesAPIError2[\"default\"](400, undefined, \"You can only request the linkage for one resource at a time.\");","      }","","      return adapter.find(type, requestContext.idOrIds).spread(function (resource) {","        // 404 if the requested relationship is not a relationship path. Doing","        // it here is more accurate than using adapter.getRelationshipNames,","        // since we're allowing for paths that can optionally hold linkage,","        // which getRelationshipNames doesn't return.","        var relationship = resource.relationships && resource.relationships[requestContext.relationship];","","        if (!relationship) {","          var title = \"Invalid relationship name.\";","          var detail = requestContext.relationship + \" is not a valid \" + (\"relationship name on resources of type '\" + type + \"'\");","","          throw new _typesAPIError2[\"default\"](404, undefined, title, detail);","        }","","        responseContext.primary = relationship.linkage;","      });","    }","};","","function parseFields(fieldsParam) {","  var fields = undefined;","  if (typeof fieldsParam === \"object\") {","    fields = {};","    var isField = function isField(it) {","      return !(0, _utilArrays.arrayContains)([\"id\", \"type\"], it);","    };","","    for (var type in fieldsParam) {","      var provided = parseCommaSeparatedParam(fieldsParam[type]) || [];","      fields[type] = provided.filter(isField);","    }","  }","  return fields;","}","","function parseCommaSeparatedParam(it) {","  return it ? it.split(\",\").map(decodeURIComponent) : undefined;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"13":1,"15":1,"17":1,"18":0,"19":0,"20":0,"26":0,"27":0,"28":0,"30":0,"31":0,"33":0,"34":0,"37":0,"38":0,"40":0,"41":0,"53":0,"54":0,"57":0,"62":0,"64":0,"65":0,"66":0,"68":0,"71":0,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"84":0,"85":0,"86":0,"89":0,"92":1,"93":0,"95":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-post.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-post.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":29,"loc":{"start":{"line":29,"column":21},"end":{"line":29,"column":74}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":110},"end":{"line":41,"column":122}}},"3":{"name":"(anonymous_3)","line":45,"loc":{"start":{"line":45,"column":16},"end":{"line":45,"column":28}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":55},"end":{"line":47,"column":69}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":46},"end":{"line":52,"column":65}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":79}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":61}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":53}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":61}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":51}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":59}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":57}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":60}},"13":{"start":{"line":29,"column":0},"end":{"line":71,"column":2}},"14":{"start":{"line":30,"column":2},"end":{"line":30,"column":39}},"15":{"start":{"line":31,"column":2},"end":{"line":31,"column":33}},"16":{"start":{"line":32,"column":2},"end":{"line":32,"column":41}},"17":{"start":{"line":36,"column":2},"end":{"line":70,"column":3}},"18":{"start":{"line":37,"column":4},"end":{"line":39,"column":5}},"19":{"start":{"line":38,"column":6},"end":{"line":38,"column":139}},"20":{"start":{"line":41,"column":4},"end":{"line":43,"column":7}},"21":{"start":{"line":42,"column":6},"end":{"line":42,"column":35}},"22":{"start":{"line":45,"column":4},"end":{"line":67,"column":9}},"23":{"start":{"line":46,"column":6},"end":{"line":46,"column":66}},"24":{"start":{"line":47,"column":6},"end":{"line":49,"column":9}},"25":{"start":{"line":48,"column":8},"end":{"line":48,"column":85}},"26":{"start":{"line":48,"column":19},"end":{"line":48,"column":85}},"27":{"start":{"line":51,"column":6},"end":{"line":66,"column":8}},"28":{"start":{"line":53,"column":10},"end":{"line":53,"column":44}},"29":{"start":{"line":54,"column":10},"end":{"line":54,"column":39}},"30":{"start":{"line":57,"column":10},"end":{"line":64,"column":11}},"31":{"start":{"line":58,"column":12},"end":{"line":58,"column":64}},"32":{"start":{"line":59,"column":12},"end":{"line":59,"column":55}},"33":{"start":{"line":60,"column":12},"end":{"line":63,"column":13}},"34":{"start":{"line":61,"column":14},"end":{"line":61,"column":85}},"35":{"start":{"line":62,"column":14},"end":{"line":62,"column":111}},"36":{"start":{"line":69,"column":4},"end":{"line":69,"column":48}},"37":{"start":{"line":69,"column":34},"end":{"line":69,"column":48}},"38":{"start":{"line":73,"column":0},"end":{"line":73,"column":36}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":8}},{"start":{"line":48,"column":8},"end":{"line":48,"column":8}}]},"4":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":10},"end":{"line":57,"column":10}},{"start":{"line":57,"column":10},"end":{"line":57,"column":10}}]},"5":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":27},"end":{"line":59,"column":36}},{"start":{"line":59,"column":40},"end":{"line":59,"column":54}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":12}},{"start":{"line":60,"column":12},"end":{"line":60,"column":12}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]}},"code":["\"use strict\";","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _typesResource = require(\"../../types/Resource\");","","var _typesResource2 = _interopRequireDefault(_typesResource);","","var _typesLinkage = require(\"../../types/Linkage\");","","var _typesLinkage2 = _interopRequireDefault(_typesLinkage);","","var _urlTemplate = require(\"url-template\");","","var _urlTemplate2 = _interopRequireDefault(_urlTemplate);","","var _utilTypeHandling = require(\"../../util/type-handling\");","","exports[\"default\"] = function (requestContext, responseContext, registry) {","  var primary = requestContext.primary;","  var type = requestContext.type;","  var adapter = registry.dbAdapter(type);","","  // We're going to do an adapter.create, below, EXCEPT if we're adding to","  // an existing toMany relationship, which uses a different adapter method.","  if (primary instanceof _typesLinkage2[\"default\"]) {","    if (!Array.isArray(primary.value)) {","      throw new _typesAPIError2[\"default\"](400, undefined, \"To add to a to-many relationship, you must POST an array of linkage objects.\");","    }","","    return adapter.addToRelationship(type, requestContext.idOrIds, requestContext.relationship, primary).then(function () {","      responseContext.status = 204;","    });","  } else {","    var _ret = (function () {","      var noClientIds = \"Client-generated ids are not supported.\";","      (0, _utilTypeHandling.forEachResources)(primary, function (it) {","        if (it.id) throw new _typesAPIError2[\"default\"](403, undefined, noClientIds);","      });","","      return {","        v: adapter.create(type, primary).then(function (created) {","          responseContext.primary = created;","          responseContext.status = 201;","","          // We can only generate a Location url for a single resource.","          if (created instanceof _typesResource2[\"default\"]) {","            var templates = registry.urlTemplates(created.type);","            var template = templates && templates.self;","            if (template) {","              var templateData = _Object$assign({ \"id\": created.id }, created.attrs);","              responseContext.headers.location = _urlTemplate2[\"default\"].parse(template).expand(templateData);","            }","          }","        })","      };","    })();","","    if (typeof _ret === \"object\") return _ret.v;","  }","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"30":0,"31":0,"32":0,"36":0,"37":0,"38":0,"41":0,"42":0,"45":0,"46":0,"47":0,"48":0,"51":0,"53":0,"54":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"69":0,"73":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-patch.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-patch.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":31,"loc":{"start":{"line":31,"column":21},"end":{"line":31,"column":74}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":64},"end":{"line":57,"column":85}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":82}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":97}},"3":{"start":{"line":7,"column":0},"end":{"line":9,"column":3}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":53}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":61}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":57}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":69}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":51}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":59}},"14":{"start":{"line":31,"column":0},"end":{"line":61,"column":2}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":39}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":33}},"17":{"start":{"line":34,"column":2},"end":{"line":34,"column":41}},"18":{"start":{"line":35,"column":2},"end":{"line":35,"column":46}},"19":{"start":{"line":37,"column":2},"end":{"line":55,"column":3}},"20":{"start":{"line":38,"column":4},"end":{"line":41,"column":5}},"21":{"start":{"line":39,"column":6},"end":{"line":39,"column":75}},"22":{"start":{"line":40,"column":6},"end":{"line":40,"column":66}},"23":{"start":{"line":43,"column":4},"end":{"line":43,"column":42}},"24":{"start":{"line":44,"column":9},"end":{"line":55,"column":3}},"25":{"start":{"line":45,"column":4},"end":{"line":51,"column":5}},"26":{"start":{"line":46,"column":6},"end":{"line":46,"column":80}},"27":{"start":{"line":47,"column":6},"end":{"line":47,"column":66}},"28":{"start":{"line":48,"column":11},"end":{"line":51,"column":5}},"29":{"start":{"line":49,"column":6},"end":{"line":49,"column":87}},"30":{"start":{"line":50,"column":6},"end":{"line":50,"column":66}},"31":{"start":{"line":52,"column":4},"end":{"line":52,"column":42}},"32":{"start":{"line":53,"column":9},"end":{"line":55,"column":3}},"33":{"start":{"line":54,"column":4},"end":{"line":54,"column":231}},"34":{"start":{"line":57,"column":2},"end":{"line":60,"column":5}},"35":{"start":{"line":59,"column":4},"end":{"line":59,"column":150}},"36":{"start":{"line":63,"column":0},"end":{"line":63,"column":36}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":30}},{"start":{"line":38,"column":34},"end":{"line":38,"column":72}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":9},"end":{"line":44,"column":9}},{"start":{"line":44,"column":9},"end":{"line":44,"column":9}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":11},"end":{"line":48,"column":11}},{"start":{"line":48,"column":11},"end":{"line":48,"column":11}}]},"7":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":9}},{"start":{"line":53,"column":9},"end":{"line":53,"column":9}}]},"8":{"line":59,"type":"cond-expr","locations":[{"start":{"line":59,"column":77},"end":{"line":59,"column":137}},{"start":{"line":59,"column":140},"end":{"line":59,"column":149}}]}},"code":["\"use strict\";","","var _defineProperty = require(\"babel-runtime/helpers/define-property\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _typesCollection = require(\"../../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","var _typesResource = require(\"../../types/Resource\");","","var _typesResource2 = _interopRequireDefault(_typesResource);","","var _typesRelationship = require(\"../../types/Relationship\");","","var _typesRelationship2 = _interopRequireDefault(_typesRelationship);","","var _typesLinkage = require(\"../../types/Linkage\");","","var _typesLinkage2 = _interopRequireDefault(_typesLinkage);","","exports[\"default\"] = function (requestContext, responseContext, registry) {","  var primary = requestContext.primary;","  var type = requestContext.type;","  var adapter = registry.dbAdapter(type);","  var changedResourceOrCollection = undefined;","","  if (primary instanceof _typesCollection2[\"default\"]) {","    if (requestContext.idOrIds && !Array.isArray(requestContext.idOrIds)) {","      var title = \"You can't replace a single resource with a collection.\";","      throw new _typesAPIError2[\"default\"](400, undefined, title);","    }","","    changedResourceOrCollection = primary;","  } else if (primary instanceof _typesResource2[\"default\"]) {","    if (!requestContext.idOrIds) {","      var title = \"You must provide an array of resources to do a bulk update.\";","      throw new _typesAPIError2[\"default\"](400, undefined, title);","    } else if (requestContext.idOrIds !== primary.id) {","      var title = \"The id of the resource you provided doesn't match that in the URL.\";","      throw new _typesAPIError2[\"default\"](400, undefined, title);","    }","    changedResourceOrCollection = primary;","  } else if (primary instanceof _typesLinkage2[\"default\"]) {","    changedResourceOrCollection = new _typesResource2[\"default\"](requestContext.type, requestContext.idOrIds, undefined, _defineProperty({}, requestContext.relationship, new _typesRelationship2[\"default\"](requestContext.primary)));","  }","","  return adapter.update(type, changedResourceOrCollection).then(function (resources) {","","    responseContext.primary = primary instanceof _typesLinkage2[\"default\"] ? resources.relationships[requestContext.relationship].linkage : resources;","  });","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"11":1,"13":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"52":0,"53":0,"54":0,"57":0,"59":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-delete.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/steps/do-query/do-delete.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":21},"end":{"line":17,"column":60}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":109},"end":{"line":25,"column":121}}},"3":{"name":"(anonymous_3)","line":34,"loc":{"start":{"line":34,"column":41},"end":{"line":34,"column":55}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":44},"end":{"line":41,"column":58}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":53},"end":{"line":44,"column":65}}},"6":{"name":"(anonymous_6)","line":48,"loc":{"start":{"line":48,"column":57},"end":{"line":48,"column":69}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":97}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":61}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":65}},"7":{"start":{"line":17,"column":0},"end":{"line":52,"column":2}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":26}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":41}},"10":{"start":{"line":21,"column":2},"end":{"line":51,"column":3}},"11":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"12":{"start":{"line":23,"column":6},"end":{"line":23,"column":136}},"13":{"start":{"line":25,"column":4},"end":{"line":27,"column":7}},"14":{"start":{"line":26,"column":6},"end":{"line":26,"column":28}},"15":{"start":{"line":28,"column":9},"end":{"line":51,"column":3}},"16":{"start":{"line":29,"column":4},"end":{"line":32,"column":5}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":78}},"18":{"start":{"line":31,"column":6},"end":{"line":31,"column":66}},"19":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":42}},"21":{"start":{"line":37,"column":6},"end":{"line":37,"column":92}},"22":{"start":{"line":38,"column":6},"end":{"line":38,"column":66}},"23":{"start":{"line":41,"column":4},"end":{"line":43,"column":7}},"24":{"start":{"line":42,"column":6},"end":{"line":42,"column":19}},"25":{"start":{"line":44,"column":4},"end":{"line":46,"column":7}},"26":{"start":{"line":45,"column":6},"end":{"line":45,"column":28}},"27":{"start":{"line":48,"column":4},"end":{"line":50,"column":7}},"28":{"start":{"line":49,"column":6},"end":{"line":49,"column":28}},"29":{"start":{"line":54,"column":0},"end":{"line":54,"column":36}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":9},"end":{"line":28,"column":9}},{"start":{"line":28,"column":9},"end":{"line":28,"column":9}}]},"4":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":13},"end":{"line":28,"column":29}},{"start":{"line":28,"column":33},"end":{"line":28,"column":67}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":29,"column":4}},{"start":{"line":29,"column":4},"end":{"line":29,"column":4}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]}},"code":["\"use strict\";","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _typesCollection = require(\"../../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","exports[\"default\"] = function (request, response, registry) {","  var type = request.type;","  var adapter = registry.dbAdapter(type);","","  if (request.aboutRelationship) {","    if (Array.isArray(request.idOrIds)) {","      throw new _typesAPIError2[\"default\"](400, undefined, \"You can only remove resources from the linkage of one resource at a time.\");","    }","    return adapter.removeFromRelationship(type, request.idOrIds, request.relationship, request.primary).then(function () {","      response.status = 204;","    });","  } else if (!request.idOrIds && request.ext.indexOf(\"bulk\") !== -1) {","    if (!(request.primary instanceof _typesCollection2[\"default\"])) {","      var title = \"You must provide an array of objects to do a bulk delete.\";","      throw new _typesAPIError2[\"default\"](400, undefined, title);","    }","","    if (!request.primary.resources.every(function (it) {","      return typeof it.id !== \"undefined\";","    })) {","      var title = \"Every object provided for a bulk delete must contain a `type` and `id`.\";","      throw new _typesAPIError2[\"default\"](400, undefined, title);","    }","","    var ids = request.primary.resources.map(function (it) {","      return it.id;","    });","    return adapter[\"delete\"](request.type, ids).then(function () {","      response.status = 204;","    });","  } else {","    return adapter[\"delete\"](type, request.idOrIds).then(function () {","      response.status = 204;","    });","  }","};","","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"13":1,"15":1,"17":1,"18":0,"19":0,"21":0,"22":0,"23":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"37":0,"38":0,"41":0,"42":0,"44":0,"45":0,"48":0,"49":0,"54":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/controllers/Documentation.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/controllers/Documentation.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":1,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":61,"loc":{"start":{"line":61,"column":31},"end":{"line":61,"column":43}}},"2":{"name":"DocumentationController","line":62,"loc":{"start":{"line":62,"column":2},"end":{"line":62,"column":68}}},"3":{"name":"(anonymous_3)","line":83,"loc":{"start":{"line":83,"column":38},"end":{"line":83,"column":58}}},"4":{"name":"handle","line":105,"loc":{"start":{"line":105,"column":11},"end":{"line":105,"column":64}}},"5":{"name":"(anonymous_5)","line":118,"loc":{"start":{"line":118,"column":101},"end":{"line":118,"column":131}}},"6":{"name":"getTypeInfo","line":143,"loc":{"start":{"line":143,"column":11},"end":{"line":143,"column":38}}},"7":{"name":"ucFirst","line":152,"loc":{"start":{"line":152,"column":20},"end":{"line":152,"column":40}}},"8":{"name":"(anonymous_8)","line":156,"loc":{"start":{"line":156,"column":21},"end":{"line":156,"column":38}}},"9":{"name":"transformTypeInfo","line":213,"loc":{"start":{"line":213,"column":11},"end":{"line":213,"column":101}}},"10":{"name":"cloneCustomizer","line":225,"loc":{"start":{"line":225,"column":0},"end":{"line":225,"column":32}}},"11":{"name":"isCustomObject","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":27}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":79}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":97}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":97}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":22}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":37}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":47}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":28}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":43}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":43}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":40}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":55}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":38}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":53}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":64}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":77}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":59}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":69}},"23":{"start":{"line":49,"column":0},"end":{"line":49,"column":50}},"24":{"start":{"line":51,"column":0},"end":{"line":51,"column":61}},"25":{"start":{"line":53,"column":0},"end":{"line":53,"column":54}},"26":{"start":{"line":55,"column":0},"end":{"line":55,"column":65}},"27":{"start":{"line":57,"column":0},"end":{"line":57,"column":50}},"28":{"start":{"line":59,"column":0},"end":{"line":59,"column":61}},"29":{"start":{"line":61,"column":0},"end":{"line":222,"column":5}},"30":{"start":{"line":62,"column":2},"end":{"line":88,"column":3}},"31":{"start":{"line":63,"column":4},"end":{"line":63,"column":21}},"32":{"start":{"line":65,"column":4},"end":{"line":65,"column":102}},"33":{"start":{"line":67,"column":4},"end":{"line":67,"column":51}},"34":{"start":{"line":69,"column":4},"end":{"line":69,"column":29}},"35":{"start":{"line":71,"column":4},"end":{"line":71,"column":66}},"36":{"start":{"line":72,"column":4},"end":{"line":72,"column":90}},"37":{"start":{"line":74,"column":4},"end":{"line":74,"column":47}},"38":{"start":{"line":78,"column":4},"end":{"line":78,"column":43}},"39":{"start":{"line":79,"column":4},"end":{"line":79,"column":27}},"40":{"start":{"line":83,"column":4},"end":{"line":85,"column":7}},"41":{"start":{"line":84,"column":6},"end":{"line":84,"column":64}},"42":{"start":{"line":87,"column":4},"end":{"line":87,"column":29}},"43":{"start":{"line":103,"column":2},"end":{"line":219,"column":6}},"44":{"start":{"line":106,"column":6},"end":{"line":106,"column":24}},"45":{"start":{"line":108,"column":6},"end":{"line":108,"column":58}},"46":{"start":{"line":109,"column":6},"end":{"line":109,"column":93}},"47":{"start":{"line":110,"column":6},"end":{"line":110,"column":88}},"48":{"start":{"line":113,"column":6},"end":{"line":113,"column":41}},"49":{"start":{"line":114,"column":6},"end":{"line":114,"column":39}},"50":{"start":{"line":117,"column":6},"end":{"line":117,"column":91}},"51":{"start":{"line":118,"column":6},"end":{"line":120,"column":9}},"52":{"start":{"line":119,"column":8},"end":{"line":119,"column":107}},"53":{"start":{"line":122,"column":6},"end":{"line":134,"column":7}},"54":{"start":{"line":123,"column":8},"end":{"line":123,"column":82}},"55":{"start":{"line":126,"column":8},"end":{"line":126,"column":70}},"56":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"57":{"start":{"line":130,"column":10},"end":{"line":130,"column":130}},"58":{"start":{"line":133,"column":8},"end":{"line":133,"column":87}},"59":{"start":{"line":136,"column":6},"end":{"line":136,"column":43}},"60":{"start":{"line":144,"column":6},"end":{"line":144,"column":50}},"61":{"start":{"line":145,"column":6},"end":{"line":145,"column":61}},"62":{"start":{"line":146,"column":6},"end":{"line":146,"column":46}},"63":{"start":{"line":150,"column":6},"end":{"line":150,"column":42}},"64":{"start":{"line":151,"column":6},"end":{"line":151,"column":68}},"65":{"start":{"line":152,"column":6},"end":{"line":154,"column":8}},"66":{"start":{"line":153,"column":8},"end":{"line":153,"column":54}},"67":{"start":{"line":156,"column":6},"end":{"line":182,"column":9}},"68":{"start":{"line":158,"column":8},"end":{"line":158,"column":76}},"69":{"start":{"line":161,"column":8},"end":{"line":161,"column":71}},"70":{"start":{"line":163,"column":8},"end":{"line":181,"column":9}},"71":{"start":{"line":169,"column":10},"end":{"line":180,"column":13}},"72":{"start":{"line":170,"column":12},"end":{"line":170,"column":39}},"73":{"start":{"line":178,"column":15},"end":{"line":180,"column":13}},"74":{"start":{"line":179,"column":14},"end":{"line":179,"column":56}},"75":{"start":{"line":184,"column":6},"end":{"line":193,"column":8}},"76":{"start":{"line":195,"column":6},"end":{"line":195,"column":64}},"77":{"start":{"line":196,"column":6},"end":{"line":196,"column":68}},"78":{"start":{"line":196,"column":27},"end":{"line":196,"column":68}},"79":{"start":{"line":198,"column":6},"end":{"line":198,"column":62}},"80":{"start":{"line":198,"column":32},"end":{"line":198,"column":62}},"81":{"start":{"line":199,"column":6},"end":{"line":199,"column":74}},"82":{"start":{"line":199,"column":36},"end":{"line":199,"column":74}},"83":{"start":{"line":201,"column":6},"end":{"line":201,"column":20}},"84":{"start":{"line":214,"column":6},"end":{"line":216,"column":7}},"85":{"start":{"line":215,"column":8},"end":{"line":215,"column":49}},"86":{"start":{"line":217,"column":6},"end":{"line":217,"column":18}},"87":{"start":{"line":221,"column":2},"end":{"line":221,"column":33}},"88":{"start":{"line":224,"column":0},"end":{"line":224,"column":45}},"89":{"start":{"line":225,"column":0},"end":{"line":246,"column":1}},"90":{"start":{"line":226,"column":2},"end":{"line":243,"column":3}},"91":{"start":{"line":227,"column":4},"end":{"line":227,"column":53}},"92":{"start":{"line":228,"column":4},"end":{"line":228,"column":64}},"93":{"start":{"line":229,"column":4},"end":{"line":233,"column":7}},"94":{"start":{"line":236,"column":4},"end":{"line":240,"column":5}},"95":{"start":{"line":237,"column":6},"end":{"line":239,"column":7}},"96":{"start":{"line":238,"column":8},"end":{"line":238,"column":80}},"97":{"start":{"line":242,"column":4},"end":{"line":242,"column":17}},"98":{"start":{"line":245,"column":2},"end":{"line":245,"column":19}},"99":{"start":{"line":248,"column":0},"end":{"line":250,"column":1}},"100":{"start":{"line":249,"column":2},"end":{"line":249,"column":85}},"101":{"start":{"line":251,"column":0},"end":{"line":251,"column":36}}},"branchMap":{"1":{"line":65,"type":"cond-expr","locations":[{"start":{"line":65,"column":82},"end":{"line":65,"column":86}},{"start":{"line":65,"column":89},"end":{"line":65,"column":101}}]},"2":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":28},"end":{"line":65,"column":49}},{"start":{"line":65,"column":53},"end":{"line":65,"column":79}}]},"3":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":20},"end":{"line":72,"column":32}},{"start":{"line":72,"column":36},"end":{"line":72,"column":89}}]},"4":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":122,"column":6}},{"start":{"line":122,"column":6},"end":{"line":122,"column":6}}]},"5":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":23},"end":{"line":158,"column":27}},{"start":{"line":158,"column":31},"end":{"line":158,"column":42}},{"start":{"line":158,"column":46},"end":{"line":158,"column":69}},{"start":{"line":158,"column":73},"end":{"line":158,"column":75}}]},"6":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":10},"end":{"line":169,"column":10}},{"start":{"line":169,"column":10},"end":{"line":169,"column":10}}]},"7":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":14},"end":{"line":169,"column":48}},{"start":{"line":169,"column":52},"end":{"line":169,"column":67}}]},"8":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":15},"end":{"line":178,"column":15}},{"start":{"line":178,"column":15},"end":{"line":178,"column":15}}]},"9":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":19},"end":{"line":178,"column":49}},{"start":{"line":178,"column":53},"end":{"line":178,"column":79}}]},"10":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":6},"end":{"line":196,"column":6}},{"start":{"line":196,"column":6},"end":{"line":196,"column":6}}]},"11":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":6}},{"start":{"line":198,"column":6},"end":{"line":198,"column":6}}]},"12":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":10},"end":{"line":198,"column":14}},{"start":{"line":198,"column":18},"end":{"line":198,"column":30}}]},"13":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":6},"end":{"line":199,"column":6}},{"start":{"line":199,"column":6},"end":{"line":199,"column":6}}]},"14":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":10},"end":{"line":199,"column":14}},{"start":{"line":199,"column":18},"end":{"line":199,"column":34}}]},"15":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":6}},{"start":{"line":214,"column":6},"end":{"line":214,"column":6}}]},"16":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":10},"end":{"line":214,"column":32}},{"start":{"line":214,"column":36},"end":{"line":214,"column":87}}]},"17":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"18":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":6}},{"start":{"line":237,"column":6},"end":{"line":237,"column":6}}]},"19":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":9},"end":{"line":249,"column":10}},{"start":{"line":249,"column":14},"end":{"line":249,"column":35}},{"start":{"line":249,"column":39},"end":{"line":249,"column":63}},{"start":{"line":249,"column":67},"end":{"line":249,"column":84}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _Object$setPrototypeOf = require(\"babel-runtime/core-js/object/set-prototype-of\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _lodash = require(\"lodash\");","","var _lodash2 = _interopRequireDefault(_lodash);","","var _path = require(\"path\");","","var _path2 = _interopRequireDefault(_path);","","var _jade = require(\"jade\");","","var _jade2 = _interopRequireDefault(_jade);","","var _negotiator = require(\"negotiator\");","","var _negotiator2 = _interopRequireDefault(_negotiator);","","var _dasherize = require(\"dasherize\");","","var _dasherize2 = _interopRequireDefault(_dasherize);","","var _lodashObjectMapValues = require(\"lodash/object/mapValues\");","","var _lodashObjectMapValues2 = _interopRequireDefault(_lodashObjectMapValues);","","var _typesHTTPResponse = require(\"../types/HTTP/Response\");","","var _typesHTTPResponse2 = _interopRequireDefault(_typesHTTPResponse);","","var _typesDocument = require(\"../types/Document\");","","var _typesDocument2 = _interopRequireDefault(_typesDocument);","","var _typesCollection = require(\"../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","var _typesResource = require(\"../types/Resource\");","","var _typesResource2 = _interopRequireDefault(_typesResource);","","var DocumentationController = (function () {","  function DocumentationController(registry, apiInfo, templatePath) {","    var _this = this;","","    var dasherizeJSONKeys = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];","","    _classCallCheck(this, DocumentationController);","","    this.registry = registry;","","    var defaultTempPath = \"../../../templates/documentation.jade\";","    this.template = templatePath || _path2[\"default\"].resolve(__dirname, defaultTempPath);","","    this.dasherizeJSONKeys = dasherizeJSONKeys;","","    // compute template data on construction","    // (it never changes, so this makes more sense than doing it per request)","    var data = _Object$assign({}, apiInfo);","    data.resourcesMap = {};","","    // Store in the resourcesMap the info object about each type,","    // as returned by @getTypeInfo.","    this.registry.typeNames().forEach(function (typeName) {","      data.resourcesMap[typeName] = _this.getTypeInfo(typeName);","    });","","    this.templateData = data;","  }","","  /**","   * A function to pass to _.cloneDeep to customize the result.","   * Basically, it \"pseudo-constructs\" new instances of any objects","   * that were instantiated with custom classes/constructor functions","   * before. It does this by making a plain object version of the","   * instance (i.e. it's local state as captured by it's enumerable","   * own properties) and setting the `.constructor` and [[Prototype]]","   * on that plain object. This isn't identical to constructing a new","   * instance of course, which could have other side-effects (and also","   * effects super() binding on real ES6 classes), but it's better than","   * just using a plain object.","   */","","  _createClass(DocumentationController, [{","    key: \"handle\",","    value: function handle(request, frameworkReq, frameworkRes) {","      var _this2 = this;","","      var response = new _typesHTTPResponse2[\"default\"]();","      var negotiator = new _negotiator2[\"default\"]({ headers: { accept: request.accepts } });","      var contentType = negotiator.mediaType([\"text/html\", \"application/vnd.api+json\"]);","","      // set content type as negotiated & vary on accept.","      response.contentType = contentType;","      response.headers.vary = \"Accept\";","","      // process templateData (just the type infos for now) for this particular request.","      var templateData = _lodash2[\"default\"].cloneDeep(this.templateData, cloneCustomizer);","      templateData.resourcesMap = (0, _lodashObjectMapValues2[\"default\"])(templateData.resourcesMap, function (typeInfo, typeName) {","        return _this2.transformTypeInfo(typeName, typeInfo, request, response, frameworkReq, frameworkRes);","      });","","      if (contentType.toLowerCase() === \"text/html\") {","        response.body = _jade2[\"default\"].renderFile(this.template, templateData);","      } else {","        // Create a collection of \"jsonapi-descriptions\" from the templateData","        var descriptionResources = new _typesCollection2[\"default\"]();","","        // Add a description resource for each resource type to the collection.","        for (var type in templateData.resourcesMap) {","          descriptionResources.add(new _typesResource2[\"default\"](\"jsonapi-descriptions\", type, templateData.resourcesMap[type]));","        }","","        response.body = new _typesDocument2[\"default\"](descriptionResources).get(true);","      }","","      return (0, _q2[\"default\"])(response);","    }","","    // Clients can extend this if, say, the adapter can't infer","    // as much info about the models' structure as they would like.","  }, {","    key: \"getTypeInfo\",","    value: function getTypeInfo(type) {","      var adapter = this.registry.dbAdapter(type);","      var modelName = adapter.constructor.getModelName(type);","      var model = adapter.getModel(modelName);","","      // Combine the docs in the Resource description with the standardized schema","      // from the adapter in order to build the final schema for the template.","      var info = this.registry.info(type);","      var schema = adapter.constructor.getStandardizedSchema(model);","      var ucFirst = function ucFirst(v) {","        return v.charAt(0).toUpperCase() + v.slice(1);","      };","","      schema.forEach(function (field) {","        // look up user defined field info on info.fields.","        var pathInfo = info && info.fields && info.fields[field.name] || {};","","        // Keys that have a meaning in the default template.","        var overrideableKeys = [\"friendlyName\", \"kind\", \"description\"];","","        for (var key in pathInfo) {","          // allow the user to override auto-generated friendlyName and the","          // auto-generated type info, which is undefined for virtuals. Also,","          // allow them to set the description, which is always user-provided.","          // And, finally, copy in any other info properties that don't","          // conflict with ones defined by this library.","          if (overrideableKeys.indexOf(key) > -1 || !(key in field)) {","            field[key] = pathInfo[key];","          }","","          // If the current info key does conflict (i.e. `key in field`), but","          // the user-provided value is an object, try to merge in the object's","          // properties. If the key conflicts and doesn't hold an object into","          // which we can merge, we just give up (i.e. we don't try anything","          // else after the below).","          else if (typeof field[key] === \"object\" && !Array.isArray(field[key])) {","              _Object$assign(field[key], pathInfo[key]);","            }","        }","      });","      // Other info","      var result = {","        name: {","          \"model\": modelName,","          \"singular\": adapter.constructor.toFriendlyName(modelName),","          \"plural\": type.split(\"-\").map(ucFirst).join(\" \")","        },","        fields: schema,","        parentType: this.registry.parentType(type),","        childTypes: adapter.constructor.getChildTypes(model)","      };","","      var defaultIncludes = this.registry.defaultIncludes(type);","      if (defaultIncludes) result.defaultIncludes = defaultIncludes;","","      if (info && info.example) result.example = info.example;","      if (info && info.description) result.description = info.description;","","      return result;","    }","","    /**","     * By extending this function, users have an opportunity to transform","     * the documentation info for each type based on the particulars of the","     * current request. This is useful, among other things, for showing","     * users documentation only for models they have access to, and it lays","     * the groundwork for true HATEOS intro pages in the future.","     */","  }, {","    key: \"transformTypeInfo\",","    value: function transformTypeInfo(typeName, info, request, response, frameworkReq, frameworkRes) {","      if (this.dasherizeJSONKeys && response.contentType === \"application/vnd.api+json\") {","        return (0, _dasherize2[\"default\"])(info);","      }","      return info;","    }","  }]);","","  return DocumentationController;","})();","","exports[\"default\"] = DocumentationController;","function cloneCustomizer(value) {","  if (isCustomObject(value)) {","    var state = _lodash2[\"default\"].cloneDeep(value);","    _Object$setPrototypeOf(state, Object.getPrototypeOf(value));","    Object.defineProperty(state, \"constructor\", {","      \"writable\": true,","      \"enumerable\": false,","      \"value\": value.constructor","    });","","    // handle the possibiliy that a key in state was itself a non-plain object","    for (var key in state) {","      if (isCustomObject(value[key])) {","        state[key] = _lodash2[\"default\"].cloneDeep(value[key], cloneCustomizer);","      }","    }","","    return state;","  }","","  return undefined;","}","","function isCustomObject(v) {","  return v && typeof v === \"object\" && v.constructor !== Object && !Array.isArray(v);","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":1,"53":1,"55":1,"57":1,"59":1,"61":1,"62":1,"63":0,"65":0,"67":0,"69":0,"71":0,"72":0,"74":0,"78":0,"79":0,"83":0,"84":0,"87":0,"103":1,"106":0,"108":0,"109":0,"110":0,"113":0,"114":0,"117":0,"118":0,"119":0,"122":0,"123":0,"126":0,"129":0,"130":0,"133":0,"136":0,"144":0,"145":0,"146":0,"150":0,"151":0,"152":0,"153":0,"156":0,"158":0,"161":0,"163":0,"169":0,"170":0,"178":0,"179":0,"184":0,"195":0,"196":0,"198":0,"199":0,"201":0,"214":0,"215":0,"217":0,"221":1,"224":1,"225":1,"226":0,"227":0,"228":0,"229":0,"236":0,"237":0,"238":0,"242":0,"245":0,"248":1,"249":0,"251":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/ResourceTypeRegistry.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/ResourceTypeRegistry.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":1,"51":1,"52":8,"53":1,"54":8,"55":0,"56":0,"57":0,"58":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":8,"13":8,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":57,"loc":{"start":{"line":57,"column":28},"end":{"line":57,"column":40}}},"2":{"name":"ResourceTypeRegistry","line":58,"loc":{"start":{"line":58,"column":2},"end":{"line":58,"column":34}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":34},"end":{"line":96,"column":54}}},"4":{"name":"type","line":120,"loc":{"start":{"line":120,"column":11},"end":{"line":120,"column":35}}},"5":{"name":"(anonymous_5)","line":121,"loc":{"start":{"line":121,"column":73},"end":{"line":121,"column":87}}},"6":{"name":"hasType","line":127,"loc":{"start":{"line":127,"column":11},"end":{"line":127,"column":38}}},"7":{"name":"typeNames","line":132,"loc":{"start":{"line":132,"column":11},"end":{"line":132,"column":32}}},"8":{"name":"urlTemplates","line":137,"loc":{"start":{"line":137,"column":11},"end":{"line":137,"column":39}}},"9":{"name":"(anonymous_9)","line":141,"loc":{"start":{"line":141,"column":71},"end":{"line":141,"column":85}}},"10":{"name":"(anonymous_10)","line":143,"loc":{"start":{"line":143,"column":16},"end":{"line":143,"column":30}}},"11":{"name":"(anonymous_11)","line":148,"loc":{"start":{"line":148,"column":49},"end":{"line":148,"column":75}}},"12":{"name":"(anonymous_12)","line":160,"loc":{"start":{"line":160,"column":24},"end":{"line":160,"column":44}}},"13":{"name":"makeGetter","line":164,"loc":{"start":{"line":164,"column":0},"end":{"line":164,"column":30}}},"14":{"name":"(anonymous_14)","line":165,"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":25}}},"15":{"name":"(anonymous_15)","line":166,"loc":{"start":{"line":166,"column":67},"end":{"line":166,"column":81}}},"16":{"name":"(anonymous_16)","line":168,"loc":{"start":{"line":168,"column":12},"end":{"line":168,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":65}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":75}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":97}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":38}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":39}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":56}},"11":{"start":{"line":31,"column":0},"end":{"line":31,"column":136}},"12":{"start":{"line":38,"column":0},"end":{"line":42,"column":3}},"13":{"start":{"line":44,"column":0},"end":{"line":44,"column":25}},"14":{"start":{"line":57,"column":0},"end":{"line":156,"column":5}},"15":{"start":{"line":58,"column":2},"end":{"line":116,"column":3}},"16":{"start":{"line":59,"column":4},"end":{"line":59,"column":21}},"17":{"start":{"line":61,"column":4},"end":{"line":61,"column":99}},"18":{"start":{"line":62,"column":4},"end":{"line":62,"column":102}},"19":{"start":{"line":64,"column":4},"end":{"line":64,"column":48}},"20":{"start":{"line":66,"column":4},"end":{"line":66,"column":24}},"21":{"start":{"line":67,"column":4},"end":{"line":67,"column":80}},"22":{"start":{"line":77,"column":4},"end":{"line":79,"column":19}},"23":{"start":{"line":81,"column":4},"end":{"line":91,"column":5}},"24":{"start":{"line":82,"column":6},"end":{"line":82,"column":65}},"25":{"start":{"line":83,"column":6},"end":{"line":83,"column":27}},"26":{"start":{"line":85,"column":6},"end":{"line":90,"column":7}},"27":{"start":{"line":86,"column":8},"end":{"line":86,"column":60}},"28":{"start":{"line":87,"column":8},"end":{"line":87,"column":47}},"29":{"start":{"line":89,"column":8},"end":{"line":89,"column":29}},"30":{"start":{"line":93,"column":4},"end":{"line":93,"column":82}},"31":{"start":{"line":96,"column":4},"end":{"line":115,"column":7}},"32":{"start":{"line":97,"column":6},"end":{"line":97,"column":61}},"33":{"start":{"line":101,"column":6},"end":{"line":101,"column":89}},"34":{"start":{"line":102,"column":6},"end":{"line":102,"column":84}},"35":{"start":{"line":104,"column":6},"end":{"line":114,"column":28}},"36":{"start":{"line":118,"column":2},"end":{"line":153,"column":6}},"37":{"start":{"line":121,"column":6},"end":{"line":123,"column":18}},"38":{"start":{"line":122,"column":8},"end":{"line":122,"column":25}},"39":{"start":{"line":128,"column":6},"end":{"line":128,"column":40}},"40":{"start":{"line":133,"column":6},"end":{"line":133,"column":42}},"41":{"start":{"line":138,"column":6},"end":{"line":138,"column":24}},"42":{"start":{"line":140,"column":6},"end":{"line":146,"column":7}},"43":{"start":{"line":141,"column":8},"end":{"line":145,"column":20}},"44":{"start":{"line":142,"column":10},"end":{"line":142,"column":40}},"45":{"start":{"line":144,"column":10},"end":{"line":144,"column":27}},"46":{"start":{"line":148,"column":6},"end":{"line":151,"column":13}},"47":{"start":{"line":149,"column":8},"end":{"line":149,"column":55}},"48":{"start":{"line":150,"column":8},"end":{"line":150,"column":20}},"49":{"start":{"line":155,"column":2},"end":{"line":155,"column":30}},"50":{"start":{"line":158,"column":0},"end":{"line":158,"column":42}},"51":{"start":{"line":160,"column":0},"end":{"line":162,"column":3}},"52":{"start":{"line":161,"column":2},"end":{"line":161,"column":66}},"53":{"start":{"line":164,"column":0},"end":{"line":172,"column":1}},"54":{"start":{"line":165,"column":2},"end":{"line":171,"column":4}},"55":{"start":{"line":166,"column":4},"end":{"line":170,"column":16}},"56":{"start":{"line":167,"column":6},"end":{"line":167,"column":30}},"57":{"start":{"line":169,"column":6},"end":{"line":169,"column":116}},"58":{"start":{"line":173,"column":0},"end":{"line":173,"column":36}}},"branchMap":{"1":{"line":61,"type":"cond-expr","locations":[{"start":{"line":61,"column":81},"end":{"line":61,"column":83}},{"start":{"line":61,"column":86},"end":{"line":61,"column":98}}]},"2":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":27},"end":{"line":61,"column":48}},{"start":{"line":61,"column":52},"end":{"line":61,"column":78}}]},"3":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":84},"end":{"line":62,"column":86}},{"start":{"line":62,"column":89},"end":{"line":62,"column":101}}]},"4":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":30},"end":{"line":62,"column":51}},{"start":{"line":62,"column":55},"end":{"line":62,"column":81}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"6":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":32},"end":{"line":86,"column":53}},{"start":{"line":86,"column":57},"end":{"line":86,"column":59}}]},"7":{"line":104,"type":"cond-expr","locations":[{"start":{"line":110,"column":6},"end":{"line":110,"column":123}},{"start":{"line":114,"column":6},"end":{"line":114,"column":27}}]},"8":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":6},"end":{"line":140,"column":6}},{"start":{"line":140,"column":6},"end":{"line":140,"column":6}}]},"9":{"line":169,"type":"cond-expr","locations":[{"start":{"line":169,"column":101},"end":{"line":169,"column":110}},{"start":{"line":169,"column":113},"end":{"line":169,"column":115}}]},"10":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":13},"end":{"line":169,"column":53}},{"start":{"line":169,"column":57},"end":{"line":169,"column":98}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _Symbol = require(\"babel-runtime/core-js/symbol\")[\"default\"];","","var _Object$keys = require(\"babel-runtime/core-js/object/keys\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _immutable = require(\"immutable\");","","var _immutable2 = _interopRequireDefault(_immutable);","","var _utilMisc = require(\"./util/misc\");","","var _utilTypeHandling = require(\"./util/type-handling\");","","/**"," * A private array of properties that will be used by the class below to"," * automatically generate simple getters for each property, all following the"," * same format. Those getters will take the name of the resource type whose"," * property is being retrieved."," */","var autoGetterProps = [\"dbAdapter\", \"beforeSave\", \"beforeRender\", \"behaviors\", \"labelMappers\", \"defaultIncludes\", \"info\", \"parentType\"];","","/**"," * Global defaults for all resource descriptions, to be merged into the"," * defaults provided to the ResourceTypeRegistry, which are in turn merged"," * into the values provided in each resource type description."," */","var globalResourceDefaults = _immutable2[\"default\"].fromJS({","  behaviors: {","    dasherizeOutput: { enabled: true }","  }","});","","var typesKey = _Symbol();","","/**"," * To fulfill a JSON API request, you often need to know about all the resources"," * types in the system--not just the type that is the primary target of the"," * request. For example, if the request is for a User (or Users), you might need"," * to include related Projects, so the code handling the users request needs"," * access to the Project resource's beforeSave and beforeRender methods; its"," * url templates; etc. So we handle this by introducing a ResourceTypeRegistry"," * that the Controller can have access to. Each resource type is registered by"," * its JSON API type and has a number of properties defining it."," */","","var ResourceTypeRegistry = (function () {","  function ResourceTypeRegistry() {","    var _this = this;","","    var typeDescriptions = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];","    var descriptionDefaults = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];","","    _classCallCheck(this, ResourceTypeRegistry);","","    this[typesKey] = {};","    descriptionDefaults = globalResourceDefaults.mergeDeep(descriptionDefaults);","","    // Sort the types so we can register them in an order that respects their","    // parentType. First, we pre-process the typeDescriptions to create edges","    // pointing to each node's children (rather than the links we have by","    // default, which point to the parent). Then we do an abridged topological","    // sort that works in this case. Below, nodes is a list of type names.","    // Roots are nodes with no parents. Edges is a map, with each key being the","    // name of a starting node A, and the value being a set of node names for","    // which there is an edge from A to that node.","    var nodes = [],","        roots = [],","        edges = {};","","    for (var typeName in typeDescriptions) {","      var nodeParentType = typeDescriptions[typeName].parentType;","      nodes.push(typeName);","","      if (nodeParentType) {","        edges[nodeParentType] = edges[nodeParentType] || {};","        edges[nodeParentType][typeName] = true;","      } else {","        roots.push(typeName);","      }","    }","","    var typeRegistrationOrder = (0, _utilMisc.pseudoTopSort)(nodes, edges, roots);","","    // register the types, in order","    typeRegistrationOrder.forEach(function (typeName) {","      var parentType = typeDescriptions[typeName].parentType;","","      // defaultIncludes need to be made into an object if they came as an array.","      // TODO: Remove support for array format before v3. It's inconsistent.","      var thisDescriptionRaw = _immutable2[\"default\"].fromJS(typeDescriptions[typeName]);","      var thisDescriptionMerged = descriptionDefaults.mergeDeep(thisDescriptionRaw);","","      _this[typesKey][typeName] = parentType ?","      // If we have a parentType, we merge in all the parent's fields,","      // BUT we then overwrite labelMappers with just the ones directly","      // from this description. We don't inherit labelMappers because a","      // labelMapper is a kind of filter, and the results of a filter","      // on the parent type may not be instances of the subtype.","      _this[typesKey][parentType].mergeDeep(thisDescriptionRaw).set(\"labelMappers\", thisDescriptionRaw.get(\"labelMappers\")) :","","      // If we don't have a parentType, just register","      // the description merged with the universal defaults","      thisDescriptionMerged;","    });","  }","","  _createClass(ResourceTypeRegistry, [{","    key: \"type\",","    value: function type(typeName) {","      return (0, _utilTypeHandling.Maybe)(this[typesKey][typeName]).bind(function (it) {","        return it.toJS();","      }).unwrap();","    }","  }, {","    key: \"hasType\",","    value: function hasType(typeName) {","      return typeName in this[typesKey];","    }","  }, {","    key: \"typeNames\",","    value: function typeNames() {","      return _Object$keys(this[typesKey]);","    }","  }, {","    key: \"urlTemplates\",","    value: function urlTemplates(type) {","      var _this2 = this;","","      if (type) {","        return (0, _utilTypeHandling.Maybe)(this[typesKey][type]).bind(function (it) {","          return it.get(\"urlTemplates\");","        }).bind(function (it) {","          return it.toJS();","        }).unwrap();","      }","","      return _Object$keys(this[typesKey]).reduce(function (prev, typeName) {","        prev[typeName] = _this2.urlTemplates(typeName);","        return prev;","      }, {});","    }","  }]);","","  return ResourceTypeRegistry;","})();","","exports[\"default\"] = ResourceTypeRegistry;","","autoGetterProps.forEach(function (propName) {","  ResourceTypeRegistry.prototype[propName] = makeGetter(propName);","});","","function makeGetter(attrName) {","  return function (type) {","    return (0, _utilTypeHandling.Maybe)(this[typesKey][type]).bind(function (it) {","      return it.get(attrName);","    }).bind(function (it) {","      return it instanceof _immutable2[\"default\"].Map || it instanceof _immutable2[\"default\"].List ? it.toJS() : it;","    }).unwrap();","  };","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"17":1,"19":1,"21":1,"23":1,"31":1,"38":1,"44":1,"57":1,"58":1,"59":0,"61":0,"62":0,"64":0,"66":0,"67":0,"77":0,"81":0,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"93":0,"96":0,"97":0,"101":0,"102":0,"104":0,"118":1,"121":0,"122":0,"128":0,"133":0,"138":0,"140":0,"141":0,"142":0,"144":0,"148":0,"149":0,"150":0,"155":1,"158":1,"160":1,"161":8,"164":1,"165":8,"166":0,"167":0,"169":0,"173":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/db-adapters/Mongoose/MongooseAdapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/db-adapters/Mongoose/MongooseAdapter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":1,"305":1,"306":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0,0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0},"fnMap":{"1":{"name":"(anonymous_1)","line":77,"loc":{"start":{"line":77,"column":23},"end":{"line":77,"column":35}}},"2":{"name":"MongooseAdapter","line":78,"loc":{"start":{"line":78,"column":2},"end":{"line":78,"column":59}}},"3":{"name":"find","line":97,"loc":{"start":{"line":97,"column":11},"end":{"line":97,"column":78}}},"4":{"name":"(anonymous_4)","line":152,"loc":{"start":{"line":152,"column":9},"end":{"line":152,"column":21}}},"5":{"name":"(anonymous_5)","line":156,"loc":{"start":{"line":156,"column":42},"end":{"line":156,"column":56}}},"6":{"name":"(anonymous_6)","line":159,"loc":{"start":{"line":159,"column":31},"end":{"line":159,"column":52}}},"7":{"name":"(anonymous_7)","line":177,"loc":{"start":{"line":177,"column":82},"end":{"line":177,"column":98}}},"8":{"name":"(anonymous_8)","line":178,"loc":{"start":{"line":178,"column":59},"end":{"line":178,"column":74}}},"9":{"name":"(anonymous_9)","line":183,"loc":{"start":{"line":183,"column":37},"end":{"line":183,"column":53}}},"10":{"name":"(anonymous_10)","line":187,"loc":{"start":{"line":187,"column":32},"end":{"line":187,"column":46}}},"11":{"name":"(anonymous_11)","line":199,"loc":{"start":{"line":199,"column":66},"end":{"line":199,"column":78}}},"12":{"name":"(anonymous_12)","line":207,"loc":{"start":{"line":207,"column":62},"end":{"line":207,"column":76}}},"13":{"name":"create","line":224,"loc":{"start":{"line":224,"column":11},"end":{"line":224,"column":61}}},"14":{"name":"setIdWithGenerator","line":234,"loc":{"start":{"line":234,"column":31},"end":{"line":234,"column":64}}},"15":{"name":"(anonymous_15)","line":249,"loc":{"start":{"line":249,"column":55},"end":{"line":249,"column":76}}},"16":{"name":"(anonymous_16)","line":251,"loc":{"start":{"line":251,"column":41},"end":{"line":251,"column":57}}},"17":{"name":"update","line":266,"loc":{"start":{"line":266,"column":11},"end":{"line":266,"column":61}}},"18":{"name":"(anonymous_18)","line":283,"loc":{"start":{"line":283,"column":78},"end":{"line":283,"column":92}}},"19":{"name":"(anonymous_19)","line":296,"loc":{"start":{"line":296,"column":67},"end":{"line":296,"column":83}}},"20":{"name":"(anonymous_20)","line":308,"loc":{"start":{"line":308,"column":65},"end":{"line":308,"column":79}}},"21":{"name":"(anonymous_21)","line":318,"loc":{"start":{"line":318,"column":55},"end":{"line":318,"column":74}}},"22":{"name":"(anonymous_22)","line":345,"loc":{"start":{"line":345,"column":62},"end":{"line":345,"column":89}}},"23":{"name":"(anonymous_23)","line":346,"loc":{"start":{"line":346,"column":25},"end":{"line":346,"column":45}}},"24":{"name":"(anonymous_24)","line":354,"loc":{"start":{"line":354,"column":14},"end":{"line":354,"column":30}}},"25":{"name":"_delete","line":361,"loc":{"start":{"line":361,"column":11},"end":{"line":361,"column":49}}},"26":{"name":"(anonymous_26)","line":372,"loc":{"start":{"line":372,"column":38},"end":{"line":372,"column":65}}},"27":{"name":"(anonymous_27)","line":377,"loc":{"start":{"line":377,"column":67},"end":{"line":377,"column":83}}},"28":{"name":"(anonymous_28)","line":379,"loc":{"start":{"line":379,"column":55},"end":{"line":379,"column":69}}},"29":{"name":"addToRelationship","line":395,"loc":{"start":{"line":395,"column":11},"end":{"line":395,"column":78}}},"30":{"name":"(anonymous_30)","line":398,"loc":{"start":{"line":398,"column":87},"end":{"line":398,"column":101}}},"31":{"name":"removeFromRelationship","line":408,"loc":{"start":{"line":408,"column":11},"end":{"line":408,"column":88}}},"32":{"name":"(anonymous_32)","line":411,"loc":{"start":{"line":411,"column":82},"end":{"line":411,"column":96}}},"33":{"name":"getModel","line":421,"loc":{"start":{"line":421,"column":11},"end":{"line":421,"column":40}}},"34":{"name":"getTypesAllowedInCollection","line":433,"loc":{"start":{"line":433,"column":11},"end":{"line":433,"column":60}}},"35":{"name":"getRelationshipNames","line":445,"loc":{"start":{"line":445,"column":11},"end":{"line":445,"column":47}}},"36":{"name":"docsToResourceOrCollection","line":467,"loc":{"start":{"line":467,"column":11},"end":{"line":467,"column":89}}},"37":{"name":"(anonymous_37)","line":477,"loc":{"start":{"line":477,"column":22},"end":{"line":477,"column":36}}},"38":{"name":"docToResource","line":486,"loc":{"start":{"line":486,"column":11},"end":{"line":486,"column":59}}},"39":{"name":"(anonymous_39)","line":515,"loc":{"start":{"line":515,"column":9},"end":{"line":515,"column":21}}},"40":{"name":"(anonymous_40)","line":517,"loc":{"start":{"line":517,"column":31},"end":{"line":517,"column":48}}},"41":{"name":"getProp","line":528,"loc":{"start":{"line":528,"column":20},"end":{"line":528,"column":48}}},"42":{"name":"(anonymous_42)","line":532,"loc":{"start":{"line":532,"column":23},"end":{"line":532,"column":39}}},"43":{"name":"(anonymous_43)","line":560,"loc":{"start":{"line":560,"column":30},"end":{"line":560,"column":55}}},"44":{"name":"getModelName","line":584,"loc":{"start":{"line":584,"column":11},"end":{"line":584,"column":39}}},"45":{"name":"(anonymous_45)","line":589,"loc":{"start":{"line":589,"column":23},"end":{"line":589,"column":37}}},"46":{"name":"getType","line":597,"loc":{"start":{"line":597,"column":11},"end":{"line":597,"column":39}}},"47":{"name":"getReferencedType","line":604,"loc":{"start":{"line":604,"column":11},"end":{"line":604,"column":51}}},"48":{"name":"getChildTypes","line":611,"loc":{"start":{"line":611,"column":11},"end":{"line":611,"column":41}}},"49":{"name":"(anonymous_49)","line":618,"loc":{"start":{"line":618,"column":52},"end":{"line":618,"column":66}}},"50":{"name":"getStandardizedSchema","line":624,"loc":{"start":{"line":624,"column":11},"end":{"line":624,"column":49}}},"51":{"name":"getFieldType","line":635,"loc":{"start":{"line":635,"column":25},"end":{"line":635,"column":65}}},"52":{"name":"(anonymous_52)","line":648,"loc":{"start":{"line":648,"column":28},"end":{"line":648,"column":50}}},"53":{"name":"(anonymous_53)","line":675,"loc":{"start":{"line":675,"column":32},"end":{"line":675,"column":56}}},"54":{"name":"toFriendlyName","line":697,"loc":{"start":{"line":697,"column":11},"end":{"line":697,"column":52}}},"55":{"name":"ucFirst","line":698,"loc":{"start":{"line":698,"column":20},"end":{"line":698,"column":40}}},"56":{"name":"getIdQueryType","line":723,"loc":{"start":{"line":723,"column":11},"end":{"line":723,"column":44}}},"57":{"name":"idIsValid","line":745,"loc":{"start":{"line":745,"column":11},"end":{"line":745,"column":34}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":82}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":81}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":75}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":79}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":97}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":99}},"9":{"start":{"line":19,"column":0},"end":{"line":21,"column":3}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":37}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":36}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":51}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":47}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":43}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":60}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":28}},"18":{"start":{"line":39,"column":0},"end":{"line":39,"column":41}},"19":{"start":{"line":41,"column":0},"end":{"line":41,"column":38}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":53}},"21":{"start":{"line":45,"column":0},"end":{"line":45,"column":53}},"22":{"start":{"line":47,"column":0},"end":{"line":47,"column":61}},"23":{"start":{"line":49,"column":0},"end":{"line":49,"column":57}},"24":{"start":{"line":51,"column":0},"end":{"line":51,"column":65}},"25":{"start":{"line":53,"column":0},"end":{"line":53,"column":51}},"26":{"start":{"line":55,"column":0},"end":{"line":55,"column":59}},"27":{"start":{"line":57,"column":0},"end":{"line":57,"column":61}},"28":{"start":{"line":59,"column":0},"end":{"line":59,"column":69}},"29":{"start":{"line":61,"column":0},"end":{"line":61,"column":53}},"30":{"start":{"line":63,"column":0},"end":{"line":63,"column":61}},"31":{"start":{"line":65,"column":0},"end":{"line":65,"column":74}},"32":{"start":{"line":67,"column":0},"end":{"line":67,"column":81}},"33":{"start":{"line":69,"column":0},"end":{"line":69,"column":82}},"34":{"start":{"line":71,"column":0},"end":{"line":71,"column":89}},"35":{"start":{"line":73,"column":0},"end":{"line":73,"column":96}},"36":{"start":{"line":75,"column":0},"end":{"line":75,"column":103}},"37":{"start":{"line":77,"column":0},"end":{"line":751,"column":5}},"38":{"start":{"line":78,"column":2},"end":{"line":84,"column":3}},"39":{"start":{"line":79,"column":4},"end":{"line":79,"column":43}},"40":{"start":{"line":81,"column":4},"end":{"line":81,"column":57}},"41":{"start":{"line":82,"column":4},"end":{"line":82,"column":57}},"42":{"start":{"line":83,"column":4},"end":{"line":83,"column":35}},"43":{"start":{"line":95,"column":2},"end":{"line":748,"column":6}},"44":{"start":{"line":98,"column":6},"end":{"line":98,"column":23}},"45":{"start":{"line":100,"column":6},"end":{"line":100,"column":69}},"46":{"start":{"line":101,"column":6},"end":{"line":101,"column":94}},"47":{"start":{"line":103,"column":6},"end":{"line":103,"column":81}},"48":{"start":{"line":105,"column":6},"end":{"line":105,"column":88}},"49":{"start":{"line":107,"column":6},"end":{"line":107,"column":49}},"50":{"start":{"line":108,"column":6},"end":{"line":108,"column":52}},"51":{"start":{"line":110,"column":6},"end":{"line":110,"column":45}},"52":{"start":{"line":111,"column":6},"end":{"line":112,"column":63}},"53":{"start":{"line":114,"column":6},"end":{"line":114,"column":34}},"54":{"start":{"line":117,"column":6},"end":{"line":119,"column":7}},"55":{"start":{"line":118,"column":8},"end":{"line":118,"column":43}},"56":{"start":{"line":125,"column":6},"end":{"line":127,"column":7}},"57":{"start":{"line":126,"column":8},"end":{"line":126,"column":36}},"58":{"start":{"line":151,"column":6},"end":{"line":205,"column":7}},"59":{"start":{"line":152,"column":8},"end":{"line":202,"column":13}},"60":{"start":{"line":153,"column":10},"end":{"line":153,"column":34}},"61":{"start":{"line":154,"column":10},"end":{"line":154,"column":55}},"62":{"start":{"line":156,"column":10},"end":{"line":158,"column":13}},"63":{"start":{"line":157,"column":12},"end":{"line":157,"column":33}},"64":{"start":{"line":159,"column":10},"end":{"line":174,"column":13}},"65":{"start":{"line":161,"column":12},"end":{"line":165,"column":13}},"66":{"start":{"line":162,"column":14},"end":{"line":162,"column":50}},"67":{"start":{"line":163,"column":14},"end":{"line":163,"column":119}},"68":{"start":{"line":164,"column":14},"end":{"line":164,"column":82}},"69":{"start":{"line":167,"column":12},"end":{"line":169,"column":13}},"70":{"start":{"line":168,"column":14},"end":{"line":168,"column":118}},"71":{"start":{"line":172,"column":12},"end":{"line":172,"column":46}},"72":{"start":{"line":173,"column":12},"end":{"line":173,"column":48}},"73":{"start":{"line":176,"column":10},"end":{"line":176,"column":37}},"74":{"start":{"line":177,"column":10},"end":{"line":197,"column":13}},"75":{"start":{"line":178,"column":12},"end":{"line":194,"column":15}},"76":{"start":{"line":181,"column":14},"end":{"line":181,"column":31}},"77":{"start":{"line":181,"column":24},"end":{"line":181,"column":31}},"78":{"start":{"line":183,"column":14},"end":{"line":193,"column":17}},"79":{"start":{"line":186,"column":16},"end":{"line":186,"column":81}},"80":{"start":{"line":187,"column":16},"end":{"line":192,"column":19}},"81":{"start":{"line":189,"column":18},"end":{"line":191,"column":19}},"82":{"start":{"line":190,"column":20},"end":{"line":190,"column":100}},"83":{"start":{"line":196,"column":12},"end":{"line":196,"column":24}},"84":{"start":{"line":199,"column":10},"end":{"line":201,"column":13}},"85":{"start":{"line":200,"column":12},"end":{"line":200,"column":71}},"86":{"start":{"line":204,"column":8},"end":{"line":204,"column":75}},"87":{"start":{"line":207,"column":6},"end":{"line":210,"column":65}},"88":{"start":{"line":208,"column":8},"end":{"line":208,"column":79}},"89":{"start":{"line":209,"column":8},"end":{"line":209,"column":100}},"90":{"start":{"line":225,"column":6},"end":{"line":225,"column":24}},"91":{"start":{"line":227,"column":6},"end":{"line":227,"column":94}},"92":{"start":{"line":233,"column":6},"end":{"line":233,"column":32}},"93":{"start":{"line":234,"column":6},"end":{"line":236,"column":8}},"94":{"start":{"line":235,"column":8},"end":{"line":235,"column":42}},"95":{"start":{"line":237,"column":6},"end":{"line":247,"column":7}},"96":{"start":{"line":238,"column":8},"end":{"line":238,"column":71}},"97":{"start":{"line":239,"column":8},"end":{"line":239,"column":46}},"98":{"start":{"line":240,"column":8},"end":{"line":240,"column":65}},"99":{"start":{"line":242,"column":8},"end":{"line":244,"column":9}},"100":{"start":{"line":243,"column":10},"end":{"line":243,"column":83}},"101":{"start":{"line":246,"column":8},"end":{"line":246,"column":83}},"102":{"start":{"line":249,"column":6},"end":{"line":255,"column":37}},"103":{"start":{"line":250,"column":8},"end":{"line":250,"column":90}},"104":{"start":{"line":251,"column":8},"end":{"line":253,"column":15}},"105":{"start":{"line":252,"column":10},"end":{"line":252,"column":29}},"106":{"start":{"line":254,"column":8},"end":{"line":254,"column":113}},"107":{"start":{"line":267,"column":6},"end":{"line":267,"column":24}},"108":{"start":{"line":275,"column":6},"end":{"line":275,"column":75}},"109":{"start":{"line":276,"column":6},"end":{"line":276,"column":45}},"110":{"start":{"line":277,"column":6},"end":{"line":277,"column":41}},"111":{"start":{"line":280,"column":6},"end":{"line":280,"column":29}},"112":{"start":{"line":281,"column":6},"end":{"line":281,"column":26}},"113":{"start":{"line":283,"column":6},"end":{"line":287,"column":9}},"114":{"start":{"line":284,"column":8},"end":{"line":284,"column":31}},"115":{"start":{"line":285,"column":8},"end":{"line":285,"column":36}},"116":{"start":{"line":286,"column":8},"end":{"line":286,"column":21}},"117":{"start":{"line":289,"column":6},"end":{"line":289,"column":82}},"118":{"start":{"line":291,"column":6},"end":{"line":291,"column":90}},"119":{"start":{"line":293,"column":6},"end":{"line":293,"column":50}},"120":{"start":{"line":294,"column":6},"end":{"line":294,"column":53}},"121":{"start":{"line":296,"column":6},"end":{"line":357,"column":37}},"122":{"start":{"line":297,"column":8},"end":{"line":297,"column":41}},"123":{"start":{"line":304,"column":8},"end":{"line":316,"column":9}},"124":{"start":{"line":305,"column":10},"end":{"line":305,"column":94}},"125":{"start":{"line":307,"column":10},"end":{"line":307,"column":76}},"126":{"start":{"line":308,"column":10},"end":{"line":310,"column":25}},"127":{"start":{"line":309,"column":12},"end":{"line":309,"column":25}},"128":{"start":{"line":312,"column":10},"end":{"line":315,"column":11}},"129":{"start":{"line":313,"column":12},"end":{"line":313,"column":92}},"130":{"start":{"line":314,"column":12},"end":{"line":314,"column":72}},"131":{"start":{"line":318,"column":8},"end":{"line":351,"column":11}},"132":{"start":{"line":319,"column":10},"end":{"line":319,"column":51}},"133":{"start":{"line":330,"column":10},"end":{"line":330,"column":63}},"134":{"start":{"line":331,"column":10},"end":{"line":331,"column":89}},"135":{"start":{"line":332,"column":10},"end":{"line":340,"column":11}},"136":{"start":{"line":333,"column":12},"end":{"line":333,"column":77}},"137":{"start":{"line":334,"column":12},"end":{"line":334,"column":68}},"138":{"start":{"line":335,"column":12},"end":{"line":335,"column":87}},"139":{"start":{"line":338,"column":12},"end":{"line":338,"column":54}},"140":{"start":{"line":339,"column":12},"end":{"line":339,"column":34}},"141":{"start":{"line":343,"column":10},"end":{"line":343,"column":61}},"142":{"start":{"line":345,"column":10},"end":{"line":350,"column":14}},"143":{"start":{"line":346,"column":12},"end":{"line":349,"column":15}},"144":{"start":{"line":347,"column":14},"end":{"line":347,"column":35}},"145":{"start":{"line":347,"column":23},"end":{"line":347,"column":35}},"146":{"start":{"line":348,"column":14},"end":{"line":348,"column":27}},"147":{"start":{"line":353,"column":8},"end":{"line":353,"column":59}},"148":{"start":{"line":355,"column":8},"end":{"line":355,"column":90}},"149":{"start":{"line":356,"column":8},"end":{"line":356,"column":91}},"150":{"start":{"line":362,"column":6},"end":{"line":362,"column":75}},"151":{"start":{"line":364,"column":6},"end":{"line":364,"column":82}},"152":{"start":{"line":366,"column":6},"end":{"line":366,"column":90}},"153":{"start":{"line":368,"column":6},"end":{"line":368,"column":50}},"154":{"start":{"line":369,"column":6},"end":{"line":369,"column":53}},"155":{"start":{"line":371,"column":6},"end":{"line":375,"column":7}},"156":{"start":{"line":372,"column":8},"end":{"line":374,"column":11}},"157":{"start":{"line":373,"column":10},"end":{"line":373,"column":110}},"158":{"start":{"line":377,"column":6},"end":{"line":383,"column":37}},"159":{"start":{"line":378,"column":8},"end":{"line":378,"column":103}},"160":{"start":{"line":378,"column":19},"end":{"line":378,"column":103}},"161":{"start":{"line":379,"column":8},"end":{"line":381,"column":11}},"162":{"start":{"line":380,"column":10},"end":{"line":380,"column":22}},"163":{"start":{"line":382,"column":8},"end":{"line":382,"column":20}},"164":{"start":{"line":396,"column":6},"end":{"line":396,"column":69}},"165":{"start":{"line":397,"column":6},"end":{"line":401,"column":8}},"166":{"start":{"line":399,"column":12},"end":{"line":399,"column":25}},"167":{"start":{"line":402,"column":6},"end":{"line":402,"column":44}},"168":{"start":{"line":404,"column":6},"end":{"line":404,"column":123}},"169":{"start":{"line":409,"column":6},"end":{"line":409,"column":69}},"170":{"start":{"line":410,"column":6},"end":{"line":414,"column":8}},"171":{"start":{"line":412,"column":10},"end":{"line":412,"column":23}},"172":{"start":{"line":415,"column":6},"end":{"line":415,"column":44}},"173":{"start":{"line":417,"column":6},"end":{"line":417,"column":123}},"174":{"start":{"line":422,"column":6},"end":{"line":428,"column":7}},"175":{"start":{"line":425,"column":8},"end":{"line":425,"column":113}},"176":{"start":{"line":426,"column":8},"end":{"line":426,"column":25}},"177":{"start":{"line":427,"column":8},"end":{"line":427,"column":18}},"178":{"start":{"line":429,"column":6},"end":{"line":429,"column":36}},"179":{"start":{"line":434,"column":6},"end":{"line":434,"column":106}},"180":{"start":{"line":435,"column":6},"end":{"line":435,"column":101}},"181":{"start":{"line":446,"column":6},"end":{"line":446,"column":94}},"182":{"start":{"line":447,"column":6},"end":{"line":447,"column":43}},"183":{"start":{"line":468,"column":6},"end":{"line":468,"column":24}},"184":{"start":{"line":472,"column":6},"end":{"line":474,"column":7}},"185":{"start":{"line":473,"column":8},"end":{"line":473,"column":92}},"186":{"start":{"line":476,"column":6},"end":{"line":476,"column":50}},"187":{"start":{"line":477,"column":6},"end":{"line":479,"column":9}},"188":{"start":{"line":478,"column":8},"end":{"line":478,"column":60}},"189":{"start":{"line":480,"column":6},"end":{"line":480,"column":79}},"190":{"start":{"line":487,"column":6},"end":{"line":487,"column":24}},"191":{"start":{"line":489,"column":6},"end":{"line":489,"column":79}},"192":{"start":{"line":489,"column":36},"end":{"line":489,"column":79}},"193":{"start":{"line":491,"column":6},"end":{"line":491,"column":69}},"194":{"start":{"line":492,"column":6},"end":{"line":492,"column":61}},"195":{"start":{"line":493,"column":6},"end":{"line":493,"column":57}},"196":{"start":{"line":502,"column":6},"end":{"line":502,"column":64}},"197":{"start":{"line":503,"column":6},"end":{"line":503,"column":22}},"198":{"start":{"line":504,"column":6},"end":{"line":504,"column":23}},"199":{"start":{"line":505,"column":6},"end":{"line":505,"column":45}},"200":{"start":{"line":506,"column":6},"end":{"line":506,"column":51}},"201":{"start":{"line":514,"column":6},"end":{"line":524,"column":7}},"202":{"start":{"line":515,"column":8},"end":{"line":523,"column":13}},"203":{"start":{"line":516,"column":10},"end":{"line":516,"column":28}},"204":{"start":{"line":517,"column":10},"end":{"line":521,"column":13}},"205":{"start":{"line":518,"column":12},"end":{"line":520,"column":13}},"206":{"start":{"line":519,"column":14},"end":{"line":519,"column":45}},"207":{"start":{"line":522,"column":10},"end":{"line":522,"column":27}},"208":{"start":{"line":527,"column":6},"end":{"line":527,"column":29}},"209":{"start":{"line":528,"column":6},"end":{"line":530,"column":8}},"210":{"start":{"line":529,"column":8},"end":{"line":529,"column":25}},"211":{"start":{"line":532,"column":6},"end":{"line":577,"column":9}},"212":{"start":{"line":534,"column":8},"end":{"line":536,"column":9}},"213":{"start":{"line":535,"column":10},"end":{"line":535,"column":17}},"214":{"start":{"line":539,"column":8},"end":{"line":539,"column":40}},"215":{"start":{"line":540,"column":8},"end":{"line":540,"column":61}},"216":{"start":{"line":541,"column":8},"end":{"line":541,"column":77}},"217":{"start":{"line":544,"column":8},"end":{"line":544,"column":49}},"218":{"start":{"line":552,"column":8},"end":{"line":552,"column":40}},"219":{"start":{"line":554,"column":8},"end":{"line":557,"column":9}},"220":{"start":{"line":555,"column":10},"end":{"line":555,"column":42}},"221":{"start":{"line":556,"column":10},"end":{"line":556,"column":37}},"222":{"start":{"line":559,"column":8},"end":{"line":559,"column":25}},"223":{"start":{"line":560,"column":8},"end":{"line":572,"column":11}},"224":{"start":{"line":561,"column":10},"end":{"line":561,"column":35}},"225":{"start":{"line":564,"column":10},"end":{"line":569,"column":11}},"226":{"start":{"line":565,"column":12},"end":{"line":565,"column":49}},"227":{"start":{"line":568,"column":12},"end":{"line":568,"column":68}},"228":{"start":{"line":571,"column":10},"end":{"line":571,"column":81}},"229":{"start":{"line":575,"column":8},"end":{"line":575,"column":92}},"230":{"start":{"line":576,"column":8},"end":{"line":576,"column":74}},"231":{"start":{"line":580,"column":6},"end":{"line":580,"column":80}},"232":{"start":{"line":585,"column":6},"end":{"line":585,"column":126}},"233":{"start":{"line":587,"column":6},"end":{"line":587,"column":34}},"234":{"start":{"line":588,"column":6},"end":{"line":588,"column":70}},"235":{"start":{"line":589,"column":6},"end":{"line":591,"column":18}},"236":{"start":{"line":590,"column":8},"end":{"line":590,"column":56}},"237":{"start":{"line":598,"column":6},"end":{"line":598,"column":122}},"238":{"start":{"line":600,"column":6},"end":{"line":600,"column":86}},"239":{"start":{"line":605,"column":6},"end":{"line":605,"column":122}},"240":{"start":{"line":607,"column":6},"end":{"line":607,"column":80}},"241":{"start":{"line":612,"column":6},"end":{"line":612,"column":24}},"242":{"start":{"line":614,"column":6},"end":{"line":614,"column":122}},"243":{"start":{"line":616,"column":6},"end":{"line":616,"column":43}},"244":{"start":{"line":616,"column":33},"end":{"line":616,"column":43}},"245":{"start":{"line":618,"column":6},"end":{"line":620,"column":9}},"246":{"start":{"line":619,"column":8},"end":{"line":619,"column":46}},"247":{"start":{"line":625,"column":6},"end":{"line":625,"column":24}},"248":{"start":{"line":627,"column":6},"end":{"line":627,"column":122}},"249":{"start":{"line":629,"column":6},"end":{"line":629,"column":47}},"250":{"start":{"line":630,"column":6},"end":{"line":630,"column":48}},"251":{"start":{"line":631,"column":6},"end":{"line":631,"column":60}},"252":{"start":{"line":632,"column":6},"end":{"line":632,"column":43}},"253":{"start":{"line":633,"column":6},"end":{"line":633,"column":28}},"254":{"start":{"line":635,"column":6},"end":{"line":646,"column":8}},"255":{"start":{"line":636,"column":8},"end":{"line":638,"column":9}},"256":{"start":{"line":637,"column":10},"end":{"line":637,"column":75}},"257":{"start":{"line":640,"column":8},"end":{"line":640,"column":50}},"258":{"start":{"line":641,"column":8},"end":{"line":641,"column":52}},"259":{"start":{"line":642,"column":8},"end":{"line":642,"column":80}},"260":{"start":{"line":643,"column":8},"end":{"line":643,"column":68}},"261":{"start":{"line":645,"column":8},"end":{"line":645,"column":220}},"262":{"start":{"line":648,"column":6},"end":{"line":680,"column":9}},"263":{"start":{"line":649,"column":8},"end":{"line":651,"column":9}},"264":{"start":{"line":650,"column":10},"end":{"line":650,"column":17}},"265":{"start":{"line":653,"column":8},"end":{"line":653,"column":49}},"266":{"start":{"line":654,"column":8},"end":{"line":654,"column":44}},"267":{"start":{"line":655,"column":8},"end":{"line":655,"column":171}},"268":{"start":{"line":657,"column":8},"end":{"line":657,"column":35}},"269":{"start":{"line":658,"column":8},"end":{"line":662,"column":9}},"270":{"start":{"line":659,"column":10},"end":{"line":659,"column":34}},"271":{"start":{"line":660,"column":15},"end":{"line":662,"column":9}},"272":{"start":{"line":661,"column":10},"end":{"line":661,"column":47}},"273":{"start":{"line":666,"column":8},"end":{"line":666,"column":101}},"274":{"start":{"line":669,"column":8},"end":{"line":673,"column":10}},"275":{"start":{"line":675,"column":8},"end":{"line":677,"column":11}},"276":{"start":{"line":676,"column":10},"end":{"line":676,"column":87}},"277":{"start":{"line":679,"column":8},"end":{"line":679,"column":143}},"278":{"start":{"line":682,"column":6},"end":{"line":692,"column":7}},"279":{"start":{"line":684,"column":8},"end":{"line":686,"column":9}},"280":{"start":{"line":685,"column":10},"end":{"line":685,"column":19}},"281":{"start":{"line":691,"column":8},"end":{"line":691,"column":129}},"282":{"start":{"line":693,"column":6},"end":{"line":693,"column":26}},"283":{"start":{"line":698,"column":6},"end":{"line":700,"column":8}},"284":{"start":{"line":699,"column":8},"end":{"line":699,"column":54}},"285":{"start":{"line":706,"column":6},"end":{"line":706,"column":79}},"286":{"start":{"line":711,"column":6},"end":{"line":711,"column":30}},"287":{"start":{"line":712,"column":6},"end":{"line":712,"column":21}},"288":{"start":{"line":713,"column":6},"end":{"line":713,"column":55}},"289":{"start":{"line":715,"column":6},"end":{"line":717,"column":7}},"290":{"start":{"line":716,"column":8},"end":{"line":716,"column":31}},"291":{"start":{"line":719,"column":6},"end":{"line":719,"column":29}},"292":{"start":{"line":724,"column":6},"end":{"line":724,"column":66}},"293":{"start":{"line":725,"column":6},"end":{"line":725,"column":30}},"294":{"start":{"line":727,"column":6},"end":{"line":739,"column":7}},"295":{"start":{"line":728,"column":8},"end":{"line":730,"column":9}},"296":{"start":{"line":729,"column":10},"end":{"line":729,"column":109}},"297":{"start":{"line":732,"column":8},"end":{"line":732,"column":35}},"298":{"start":{"line":733,"column":13},"end":{"line":739,"column":7}},"299":{"start":{"line":734,"column":8},"end":{"line":736,"column":9}},"300":{"start":{"line":735,"column":10},"end":{"line":735,"column":78}},"301":{"start":{"line":738,"column":8},"end":{"line":738,"column":46}},"302":{"start":{"line":741,"column":6},"end":{"line":741,"column":29}},"303":{"start":{"line":746,"column":6},"end":{"line":746,"column":68}},"304":{"start":{"line":750,"column":2},"end":{"line":750,"column":25}},"305":{"start":{"line":753,"column":0},"end":{"line":753,"column":37}},"306":{"start":{"line":754,"column":0},"end":{"line":754,"column":36}}},"branchMap":{"1":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":18},"end":{"line":81,"column":24}},{"start":{"line":81,"column":28},"end":{"line":81,"column":56}}]},"2":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":21},"end":{"line":82,"column":30}},{"start":{"line":82,"column":34},"end":{"line":82,"column":56}}]},"3":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"4":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"5":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":10},"end":{"line":125,"column":37}},{"start":{"line":125,"column":41},"end":{"line":125,"column":64}}]},"6":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"7":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"8":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":12},"end":{"line":167,"column":12}},{"start":{"line":167,"column":12},"end":{"line":167,"column":12}}]},"9":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":14},"end":{"line":181,"column":14}},{"start":{"line":181,"column":14},"end":{"line":181,"column":14}}]},"10":{"line":186,"type":"cond-expr","locations":[{"start":{"line":186,"column":57},"end":{"line":186,"column":66}},{"start":{"line":186,"column":69},"end":{"line":186,"column":80}}]},"11":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":18},"end":{"line":189,"column":18}},{"start":{"line":189,"column":18},"end":{"line":189,"column":18}}]},"12":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":66},"end":{"line":208,"column":70}},{"start":{"line":208,"column":73},"end":{"line":208,"column":78}}]},"13":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":29},"end":{"line":208,"column":37}},{"start":{"line":208,"column":41},"end":{"line":208,"column":63}}]},"14":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":242,"column":8}},{"start":{"line":242,"column":8},"end":{"line":242,"column":8}}]},"15":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":8},"end":{"line":304,"column":8}},{"start":{"line":304,"column":8},"end":{"line":304,"column":8}}]},"16":{"line":307,"type":"cond-expr","locations":[{"start":{"line":307,"column":56},"end":{"line":307,"column":63}},{"start":{"line":307,"column":66},"end":{"line":307,"column":75}}]},"17":{"line":308,"type":"cond-expr","locations":[{"start":{"line":308,"column":56},"end":{"line":310,"column":12}},{"start":{"line":310,"column":15},"end":{"line":310,"column":24}}]},"18":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":10},"end":{"line":312,"column":10}},{"start":{"line":312,"column":10},"end":{"line":312,"column":10}}]},"19":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":10},"end":{"line":332,"column":10}},{"start":{"line":332,"column":10},"end":{"line":332,"column":10}}]},"20":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":14},"end":{"line":347,"column":14}},{"start":{"line":347,"column":14},"end":{"line":347,"column":14}}]},"21":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":6},"end":{"line":371,"column":6}},{"start":{"line":371,"column":6},"end":{"line":371,"column":6}}]},"22":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":8},"end":{"line":378,"column":8}},{"start":{"line":378,"column":8},"end":{"line":378,"column":8}}]},"23":{"line":422,"type":"if","locations":[{"start":{"line":422,"column":6},"end":{"line":422,"column":6}},{"start":{"line":422,"column":6},"end":{"line":422,"column":6}}]},"24":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":6},"end":{"line":472,"column":6}},{"start":{"line":472,"column":6},"end":{"line":472,"column":6}}]},"25":{"line":472,"type":"binary-expr","locations":[{"start":{"line":472,"column":10},"end":{"line":472,"column":15}},{"start":{"line":472,"column":19},"end":{"line":472,"column":34}},{"start":{"line":472,"column":38},"end":{"line":472,"column":57}},{"start":{"line":472,"column":61},"end":{"line":472,"column":78}}]},"26":{"line":476,"type":"cond-expr","locations":[{"start":{"line":476,"column":36},"end":{"line":476,"column":42}},{"start":{"line":476,"column":45},"end":{"line":476,"column":49}}]},"27":{"line":480,"type":"cond-expr","locations":[{"start":{"line":480,"column":30},"end":{"line":480,"column":68}},{"start":{"line":480,"column":71},"end":{"line":480,"column":78}}]},"28":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":6},"end":{"line":489,"column":6}},{"start":{"line":489,"column":6},"end":{"line":489,"column":6}}]},"29":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":6},"end":{"line":514,"column":6}},{"start":{"line":514,"column":6},"end":{"line":514,"column":6}}]},"30":{"line":514,"type":"binary-expr","locations":[{"start":{"line":514,"column":10},"end":{"line":514,"column":16}},{"start":{"line":514,"column":20},"end":{"line":514,"column":32}}]},"31":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":12},"end":{"line":518,"column":12}},{"start":{"line":518,"column":12},"end":{"line":518,"column":12}}]},"32":{"line":534,"type":"if","locations":[{"start":{"line":534,"column":8},"end":{"line":534,"column":8}},{"start":{"line":534,"column":8},"end":{"line":534,"column":8}}]},"33":{"line":534,"type":"binary-expr","locations":[{"start":{"line":534,"column":12},"end":{"line":534,"column":18}},{"start":{"line":534,"column":22},"end":{"line":534,"column":34}},{"start":{"line":534,"column":38},"end":{"line":534,"column":89}}]},"34":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":8},"end":{"line":554,"column":8}},{"start":{"line":554,"column":8},"end":{"line":554,"column":8}}]},"35":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":10},"end":{"line":564,"column":10}},{"start":{"line":564,"column":10},"end":{"line":564,"column":10}}]},"36":{"line":564,"type":"binary-expr","locations":[{"start":{"line":564,"column":14},"end":{"line":564,"column":27}},{"start":{"line":564,"column":31},"end":{"line":564,"column":48}}]},"37":{"line":568,"type":"cond-expr","locations":[{"start":{"line":568,"column":39},"end":{"line":568,"column":60}},{"start":{"line":568,"column":63},"end":{"line":568,"column":67}}]},"38":{"line":571,"type":"cond-expr","locations":[{"start":{"line":571,"column":34},"end":{"line":571,"column":72}},{"start":{"line":571,"column":75},"end":{"line":571,"column":79}}]},"39":{"line":575,"type":"cond-expr","locations":[{"start":{"line":575,"column":70},"end":{"line":575,"column":80}},{"start":{"line":575,"column":83},"end":{"line":575,"column":90}}]},"40":{"line":585,"type":"cond-expr","locations":[{"start":{"line":585,"column":79},"end":{"line":585,"column":110}},{"start":{"line":585,"column":113},"end":{"line":585,"column":125}}]},"41":{"line":585,"type":"binary-expr","locations":[{"start":{"line":585,"column":25},"end":{"line":585,"column":46}},{"start":{"line":585,"column":50},"end":{"line":585,"column":76}}]},"42":{"line":598,"type":"cond-expr","locations":[{"start":{"line":598,"column":77},"end":{"line":598,"column":106}},{"start":{"line":598,"column":109},"end":{"line":598,"column":121}}]},"43":{"line":598,"type":"binary-expr","locations":[{"start":{"line":598,"column":23},"end":{"line":598,"column":44}},{"start":{"line":598,"column":48},"end":{"line":598,"column":74}}]},"44":{"line":605,"type":"cond-expr","locations":[{"start":{"line":605,"column":77},"end":{"line":605,"column":106}},{"start":{"line":605,"column":109},"end":{"line":605,"column":121}}]},"45":{"line":605,"type":"binary-expr","locations":[{"start":{"line":605,"column":23},"end":{"line":605,"column":44}},{"start":{"line":605,"column":48},"end":{"line":605,"column":74}}]},"46":{"line":614,"type":"cond-expr","locations":[{"start":{"line":614,"column":77},"end":{"line":614,"column":106}},{"start":{"line":614,"column":109},"end":{"line":614,"column":121}}]},"47":{"line":614,"type":"binary-expr","locations":[{"start":{"line":614,"column":23},"end":{"line":614,"column":44}},{"start":{"line":614,"column":48},"end":{"line":614,"column":74}}]},"48":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":6},"end":{"line":616,"column":6}},{"start":{"line":616,"column":6},"end":{"line":616,"column":6}}]},"49":{"line":627,"type":"cond-expr","locations":[{"start":{"line":627,"column":77},"end":{"line":627,"column":106}},{"start":{"line":627,"column":109},"end":{"line":627,"column":121}}]},"50":{"line":627,"type":"binary-expr","locations":[{"start":{"line":627,"column":23},"end":{"line":627,"column":44}},{"start":{"line":627,"column":48},"end":{"line":627,"column":74}}]},"51":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":8},"end":{"line":636,"column":8}},{"start":{"line":636,"column":8},"end":{"line":636,"column":8}}]},"52":{"line":642,"type":"cond-expr","locations":[{"start":{"line":642,"column":36},"end":{"line":642,"column":60}},{"start":{"line":642,"column":63},"end":{"line":642,"column":79}}]},"53":{"line":645,"type":"cond-expr","locations":[{"start":{"line":645,"column":31},"end":{"line":645,"column":97}},{"start":{"line":645,"column":100},"end":{"line":645,"column":219}}]},"54":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":8},"end":{"line":649,"column":8}},{"start":{"line":649,"column":8},"end":{"line":649,"column":8}}]},"55":{"line":654,"type":"cond-expr","locations":[{"start":{"line":654,"column":32},"end":{"line":654,"column":36}},{"start":{"line":654,"column":39},"end":{"line":654,"column":43}}]},"56":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":34},"end":{"line":655,"column":47}},{"start":{"line":655,"column":51},"end":{"line":655,"column":80}},{"start":{"line":655,"column":84},"end":{"line":655,"column":121}},{"start":{"line":655,"column":125},"end":{"line":655,"column":170}}]},"57":{"line":658,"type":"if","locations":[{"start":{"line":658,"column":8},"end":{"line":658,"column":8}},{"start":{"line":658,"column":8},"end":{"line":658,"column":8}}]},"58":{"line":660,"type":"if","locations":[{"start":{"line":660,"column":15},"end":{"line":660,"column":15}},{"start":{"line":660,"column":15},"end":{"line":660,"column":15}}]},"59":{"line":660,"type":"binary-expr","locations":[{"start":{"line":660,"column":19},"end":{"line":660,"column":42}},{"start":{"line":660,"column":46},"end":{"line":660,"column":91}}]},"60":{"line":666,"type":"cond-expr","locations":[{"start":{"line":666,"column":65},"end":{"line":666,"column":85}},{"start":{"line":666,"column":88},"end":{"line":666,"column":100}}]},"61":{"line":671,"type":"cond-expr","locations":[{"start":{"line":671,"column":43},"end":{"line":671,"column":99}},{"start":{"line":671,"column":102},"end":{"line":671,"column":111}}]},"62":{"line":671,"type":"binary-expr","locations":[{"start":{"line":671,"column":43},"end":{"line":671,"column":58}},{"start":{"line":671,"column":62},"end":{"line":671,"column":73}},{"start":{"line":671,"column":77},"end":{"line":671,"column":99}}]},"63":{"line":672,"type":"binary-expr","locations":[{"start":{"line":672,"column":15},"end":{"line":672,"column":31}},{"start":{"line":672,"column":35},"end":{"line":672,"column":44}}]},"64":{"line":684,"type":"if","locations":[{"start":{"line":684,"column":8},"end":{"line":684,"column":8}},{"start":{"line":684,"column":8},"end":{"line":684,"column":8}}]},"65":{"line":724,"type":"cond-expr","locations":[{"start":{"line":724,"column":47},"end":{"line":724,"column":56}},{"start":{"line":724,"column":59},"end":{"line":724,"column":65}}]},"66":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":6},"end":{"line":727,"column":6}},{"start":{"line":727,"column":6},"end":{"line":727,"column":6}}]},"67":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":8},"end":{"line":728,"column":8}},{"start":{"line":728,"column":8},"end":{"line":728,"column":8}}]},"68":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":13},"end":{"line":733,"column":13}},{"start":{"line":733,"column":13},"end":{"line":733,"column":13}}]},"69":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":8},"end":{"line":734,"column":8}},{"start":{"line":734,"column":8},"end":{"line":734,"column":8}}]},"70":{"line":746,"type":"binary-expr","locations":[{"start":{"line":746,"column":13},"end":{"line":746,"column":35}},{"start":{"line":746,"column":39},"end":{"line":746,"column":67}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _defineProperty = require(\"babel-runtime/helpers/define-property\")[\"default\"];","","var _slicedToArray = require(\"babel-runtime/helpers/sliced-to-array\")[\"default\"];","","var _Object$keys = require(\"babel-runtime/core-js/object/keys\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","var _interopRequireWildcard = require(\"babel-runtime/helpers/interop-require-wildcard\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _mongoose = require(\"mongoose\");","","var _mongoose2 = _interopRequireDefault(_mongoose);","","var _utilArrays = require(\"../../util/arrays\");","","var _utilMisc = require(\"../../util/misc\");","","var _utilTypeHandling = require(\"../../util/type-handling\");","","var _lib = require(\"./lib\");","","var util = _interopRequireWildcard(_lib);","","var _pluralize = require(\"pluralize\");","","var _pluralize2 = _interopRequireDefault(_pluralize);","","var _typesResource = require(\"../../types/Resource\");","","var _typesResource2 = _interopRequireDefault(_typesResource);","","var _typesCollection = require(\"../../types/Collection\");","","var _typesCollection2 = _interopRequireDefault(_typesCollection);","","var _typesLinkage = require(\"../../types/Linkage\");","","var _typesLinkage2 = _interopRequireDefault(_typesLinkage);","","var _typesRelationship = require(\"../../types/Relationship\");","","var _typesRelationship2 = _interopRequireDefault(_typesRelationship);","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _typesDocumentationField = require(\"../../types/Documentation/Field\");","","var _typesDocumentationField2 = _interopRequireDefault(_typesDocumentationField);","","var _typesDocumentationFieldType = require(\"../../types/Documentation/FieldType\");","","var _typesDocumentationFieldType2 = _interopRequireDefault(_typesDocumentationFieldType);","","var _typesDocumentationRelationshipType = require(\"../../types/Documentation/RelationshipType\");","","var _typesDocumentationRelationshipType2 = _interopRequireDefault(_typesDocumentationRelationshipType);","","var MongooseAdapter = (function () {","  function MongooseAdapter(models, inflector, idGenerator) {","    _classCallCheck(this, MongooseAdapter);","","    this.models = models || _mongoose2[\"default\"].models;","    this.inflector = inflector || _pluralize2[\"default\"];","    this.idGenerator = idGenerator;","  }","","  /**","   * Returns a Promise for an array of two items: the primary resources (either","   * a single Resource or a Collection) and the included resources, as an array.","   *","   * Note: The correct behavior if idOrIds is an empty array is to return no","   * documents, as happens below. If it's undefined, though, we're not filtering","   * by id and should return all documents.","   */","","  _createClass(MongooseAdapter, [{","    key: \"find\",","    value: function find(type, idOrIds, fields, sorts, filters, includePaths) {","      var _this = this;","","      var model = this.getModel(this.constructor.getModelName(type));","      var queryBuilder = new _mongoose2[\"default\"].Query(null, null, model, model.collection);","","      var _constructor$getIdQueryType = this.constructor.getIdQueryType(idOrIds);","","      var _constructor$getIdQueryType2 = _slicedToArray(_constructor$getIdQueryType, 2);","","      var mode = _constructor$getIdQueryType2[0];","      var idQuery = _constructor$getIdQueryType2[1];","","      var pluralizer = this.inflector.plural;","      var primaryDocumentsPromise = undefined,","          includedResourcesPromise = (0, _q2[\"default\"])(null);","","      queryBuilder[mode](idQuery);","","      // do sorting","      if (Array.isArray(sorts)) {","        queryBuilder.sort(sorts.join(\" \"));","      }","","      // filter out invalid records with simple fields equality.","      // note that there's a non-trivial risk of sql-like injection here.","      // we're mostly protected by the fact that we're treating the filter's","      // value as a single string, though, and not parsing as JSON.","      if (typeof filters === \"object\" && !Array.isArray(filters)) {","        queryBuilder.where(filters);","      }","","      // in an ideal world, we'd use mongoose here to filter the fields before","      // querying. But, because the fields to filter can be scoped by type and","      // we don't always know about a document's type until after query (becuase","      // of discriminator keys), and because filtering out fields can really","      // complicate population for includes, we don't yet filter at query time but","      // instead just hide filtered fields in @docToResource. There is a more-","      // efficient way to do this down the road, though--something like taking the","      // provided fields and expanding them just enough (by looking at the type","      // heirarachy and the relationship paths) to make sure that we're not going","      // to run into any of the problems outlined above, while still querying for","      // less data than we would without any fields restriction. For reference, the","      // code for safely using the user's `fields` input, by putting them into a","      // mongoose `.select()` object so that the user can't prefix a field with a","      // minus on input to affect the query, is below.","      // Reference: http://mongoosejs.com/docs/api.html#query_Query-select.","      // let arrToSelectObject = (prev, curr) => { prev[curr] = 1; return prev; };","      // for(let type in fields) {","      //   fields[type] = fields[type].reduce(arrToSelectObject, {});","      // }","","      // support includes, but only a level deep for now (recursive includes,","      // especially if done in an efficient way query wise, are a pain in the ass).","      if (includePaths) {","        (function () {","          var populatedPaths = [];","          var refPaths = util.getReferencePaths(model);","","          includePaths = includePaths.map(function (it) {","            return it.split(\".\");","          });","          includePaths.forEach(function (pathParts) {","            // first, check that the include path is valid.","            if (!(0, _utilArrays.arrayContains)(refPaths, pathParts[0])) {","              var title = \"Invalid include path.\";","              var detail = \"Resources of type \\\"\" + type + \"\\\" don't have a(n) \\\"\" + pathParts[0] + \"\\\" relationship.\";","              throw new _typesAPIError2[\"default\"](400, undefined, title, detail);","            }","","            if (pathParts.length > 1) {","              throw new _typesAPIError2[\"default\"](501, undefined, \"Multi-level include paths aren't yet supported.\");","            }","","            // Finally, do the population","            populatedPaths.push(pathParts[0]);","            queryBuilder.populate(pathParts[0]);","          });","","          var includedResources = [];","          primaryDocumentsPromise = (0, _q2[\"default\"])(queryBuilder.exec()).then(function (docs) {","            (0, _utilTypeHandling.forEachArrayOrVal)(docs, function (doc) {","              // There's no gaurantee that the doc (or every doc) was found","              // and we can't populate paths on a non-existent doc.","              if (!doc) return;","","              populatedPaths.forEach(function (path) {","                // if it's a toOne relationship, doc[path] will be a doc or undefined;","                // if it's a toMany relationship, we have an array (or undefined).","                var refDocs = Array.isArray(doc[path]) ? doc[path] : [doc[path]];","                refDocs.forEach(function (it) {","                  // only include if it's not undefined.","                  if (it) {","                    includedResources.push(_this.constructor.docToResource(it, pluralizer, fields));","                  }","                });","              });","            });","","            return docs;","          });","","          includedResourcesPromise = primaryDocumentsPromise.then(function () {","            return new _typesCollection2[\"default\"](includedResources);","          });","        })();","      } else {","        primaryDocumentsPromise = (0, _q2[\"default\"])(queryBuilder.exec());","      }","","      return _q2[\"default\"].all([primaryDocumentsPromise.then(function (it) {","        var makeCollection = !idOrIds || Array.isArray(idOrIds) ? true : false;","        return _this.constructor.docsToResourceOrCollection(it, makeCollection, pluralizer, fields);","      }), includedResourcesPromise])[\"catch\"](util.errorHandler);","    }","","    /**","     * Returns a Promise that fulfills with the created Resource. The Promise","     * may also reject with an error if creation failed or was unsupported.","     *","     * @param {string} parentType - All the resources to be created must be this","     *   type or be sub-types of it.","     * @param {(Resource|Collection)} resourceOrCollection - The resource or","     *   collection of resources to create.","     */","  }, {","    key: \"create\",","    value: function create(parentType, resourceOrCollection) {","      var _this2 = this;","","      var resourcesByType = (0, _utilTypeHandling.groupResourcesByType)(resourceOrCollection);","","      // Note: creating the resources as we do below means that we do one","      // query for each type, as opposed to only one query for all of the","      // documents. That's unfortunately much slower, but it ensures that","      // mongoose runs all the user's hooks.","      var creationPromises = [];","      var setIdWithGenerator = function setIdWithGenerator(doc) {","        doc._id = _this2.idGenerator(doc);","      };","      for (var type in resourcesByType) {","        var model = this.getModel(this.constructor.getModelName(type));","        var resources = resourcesByType[type];","        var docObjects = resources.map(util.resourceToDocObject);","","        if (typeof this.idGenerator === \"function\") {","          (0, _utilTypeHandling.forEachArrayOrVal)(docObjects, setIdWithGenerator);","        }","","        creationPromises.push(_q2[\"default\"].ninvoke(model, \"create\", docObjects));","      }","","      return _q2[\"default\"].all(creationPromises).then(function (docArrays) {","        var makeCollection = resourceOrCollection instanceof _typesCollection2[\"default\"];","        var finalDocs = docArrays.reduce(function (a, b) {","          return a.concat(b);","        }, []);","        return _this2.constructor.docsToResourceOrCollection(finalDocs, makeCollection, _this2.inflector.plural);","      })[\"catch\"](util.errorHandler);","    }","","    /**","     * @param {string} parentType - All the resources to be created must be this","     *   type or be sub-types of it.","     * @param {Object} resourceOrCollection - The changed Resource or Collection","     *   of resources. Should only have the fields that are changed.","     */","  }, {","    key: \"update\",","    value: function update(parentType, resourceOrCollection) {","      var _this3 = this;","","      // It'd be faster to bypass Mongoose Document creation & just have mongoose","      // send a findAndUpdate command directly to mongo, but we want Mongoose's","      // standard validation and lifecycle hooks, and so we have to find first.","      // Note that, starting in Mongoose 4, we'll be able to run the validations","      // on update, which should be enough, so we won't need to find first.","      // https://github.com/Automattic/mongoose/issues/860","      var model = this.getModel(this.constructor.getModelName(parentType));","      var singular = this.inflector.singular;","      var plural = this.inflector.plural;","","      // Set up some data structures based on resourcesOrCollection","      var resourceTypes = [];","      var changeSets = {};","","      var idOrIds = (0, _utilTypeHandling.mapResources)(resourceOrCollection, function (it) {","        changeSets[it.id] = it;","        resourceTypes.push(it.type);","        return it.id;","      });","","      var _constructor$getIdQueryType3 = this.constructor.getIdQueryType(idOrIds);","","      var _constructor$getIdQueryType32 = _slicedToArray(_constructor$getIdQueryType3, 2);","","      var mode = _constructor$getIdQueryType32[0];","      var idQuery = _constructor$getIdQueryType32[1];","","      return (0, _q2[\"default\"])(model[mode](idQuery).exec()).then(function (docs) {","        var successfulSavesPromises = [];","","        // if some ids were invalid/deleted/not found, we can't let *any* update","        // succeed. this is the beginning of our simulation of transactions.","        // There are two types of invalid cases here: we looked up one or more","        // docs and got none back (i.e. docs === null) or we looked up an array of","        // docs and got back docs that were missing some requested ids.","        if (docs === null) {","          throw new _typesAPIError2[\"default\"](404, undefined, \"No matching resource found.\");","        } else {","          var idOrIdsAsArray = Array.isArray(idOrIds) ? idOrIds : [idOrIds];","          var docIdOrIdsAsArray = Array.isArray(docs) ? docs.map(function (it) {","            return it.id;","          }) : [docs.id];","","          if (!(0, _utilArrays.arrayValuesMatch)(idOrIdsAsArray, docIdOrIdsAsArray)) {","            var title = \"Some of the resources you're trying to update could not be found.\";","            throw new _typesAPIError2[\"default\"](404, undefined, title);","          }","        }","","        (0, _utilTypeHandling.forEachArrayOrVal)(docs, function (currDoc) {","          var newResource = changeSets[currDoc.id];","","          // Allowing the type to change is a bit of a pain. If the type's","          // changed, it means the mongoose Model representing the doc must be","          // different too. So we have to get the data from the old doc with","          // .toObject(), change its discriminator, and then create an instance","          // of the new model with that data. We also have to mark that new","          // instance as not representing a new document, so that mongoose will","          // do an update query rather than a save. Finally, we have to do all","          // this before updating other attributes, so that they're correctly","          // marked as modified when changed.","          var currentModelName = currDoc.constructor.modelName;","          var newModelName = _this3.constructor.getModelName(newResource.type, singular);","          if (currentModelName !== newModelName) {","            var newDoc = currDoc.toObject({ virtuals: true, getters: true });","            var NewModelConstructor = _this3.getModel(newModelName);","            newDoc[currDoc.constructor.schema.options.discriminatorKey] = newModelName;","","            // replace the currDoc with our new creation.","            currDoc = new NewModelConstructor(newDoc);","            currDoc.isNew = false;","          }","","          // update all attributes and links provided, ignoring type/meta/id.","          currDoc.set(util.resourceToDocObject(newResource));","","          successfulSavesPromises.push(_q2[\"default\"].Promise(function (resolve, reject) {","            currDoc.save(function (err, doc) {","              if (err) reject(err);","              resolve(doc);","            });","          }));","        });","","        return _q2[\"default\"].all(successfulSavesPromises);","      }).then(function (docs) {","        var makeCollection = resourceOrCollection instanceof _typesCollection2[\"default\"];","        return _this3.constructor.docsToResourceOrCollection(docs, makeCollection, plural);","      })[\"catch\"](util.errorHandler);","    }","  }, {","    key: \"delete\",","    value: function _delete(parentType, idOrIds) {","      var model = this.getModel(this.constructor.getModelName(parentType));","","      var _constructor$getIdQueryType4 = this.constructor.getIdQueryType(idOrIds);","","      var _constructor$getIdQueryType42 = _slicedToArray(_constructor$getIdQueryType4, 2);","","      var mode = _constructor$getIdQueryType42[0];","      var idQuery = _constructor$getIdQueryType42[1];","","      if (!idOrIds) {","        return _q2[\"default\"].Promise(function (resolve, reject) {","          reject(new _typesAPIError2[\"default\"](400, undefined, \"You must specify some resources to delete\"));","        });","      }","","      return (0, _q2[\"default\"])(model[mode](idQuery).exec()).then(function (docs) {","        if (!docs) throw new _typesAPIError2[\"default\"](404, undefined, \"No matching resource found.\");","        (0, _utilTypeHandling.forEachArrayOrVal)(docs, function (it) {","          it.remove();","        });","        return docs;","      })[\"catch\"](util.errorHandler);","    }","","    /**","     * Unlike update(), which would do full replacement of a to-many relationship","     * if new linkage was provided, this method adds the new linkage to the existing","     * relationship. It doesn't do a find-then-save, so some mongoose hooks may not","     * run. But validation and the update query hooks will work if you're using","     * Mongoose 4.0.","     */","  }, {","    key: \"addToRelationship\",","    value: function addToRelationship(type, id, relationshipPath, newLinkage) {","      var model = this.getModel(this.constructor.getModelName(type));","      var update = {","        $addToSet: _defineProperty({}, relationshipPath, { $each: newLinkage.value.map(function (it) {","            return it.id;","          }) })","      };","      var options = { runValidators: true };","","      return _q2[\"default\"].ninvoke(model, \"findOneAndUpdate\", { \"_id\": id }, update, options)[\"catch\"](util.errorHandler);","    }","  }, {","    key: \"removeFromRelationship\",","    value: function removeFromRelationship(type, id, relationshipPath, linkageToRemove) {","      var model = this.getModel(this.constructor.getModelName(type));","      var update = {","        $pullAll: _defineProperty({}, relationshipPath, linkageToRemove.value.map(function (it) {","          return it.id;","        }))","      };","      var options = { runValidators: true };","","      return _q2[\"default\"].ninvoke(model, \"findOneAndUpdate\", { \"_id\": id }, update, options)[\"catch\"](util.errorHandler);","    }","  }, {","    key: \"getModel\",","    value: function getModel(modelName) {","      if (!this.models[modelName]) {","        // don't use an APIError here, since we don't want to","        // show this internals-specific method to the user.","        var err = new Error(\"The model \\\"\" + modelName + \"\\\" has not been registered with the MongooseAdapter.\");","        err.status = 404;","        throw err;","      }","      return this.models[modelName];","    }","  }, {","    key: \"getTypesAllowedInCollection\",","    value: function getTypesAllowedInCollection(parentType) {","      var parentModel = this.getModel(this.constructor.getModelName(parentType, this.inflector.singular));","      return [parentType].concat(this.constructor.getChildTypes(parentModel, this.inflector.plural));","    }","","    /**","     * Return the paths that, for the provided type, must always must be filled","     * with relationship info, if they're present. Occassionally, a path might be","     * optionally fillable w/ relationship info; this shouldn't return those paths.","     */","  }, {","    key: \"getRelationshipNames\",","    value: function getRelationshipNames(type) {","      var model = this.getModel(this.constructor.getModelName(type, this.inflector.singular));","      return util.getReferencePaths(model);","    }","","    /**","     * We want to always return a collection when the user is asking for something","     * that's logically a Collection (even if it only has 1 item), and a Resource","     * otherwise. But, because mongoose returns a single doc if you query for a","     * one-item array of ids, and because we sometimes generate arrays (e.g. of","     * promises for documents' successful creation) even when only creating/updating","     * one document, just looking at whether docs is an array isn't enough to tell","     * us whether to return a collection or not. And, in all these cases, we want","     * to handle the possibility that the query returned no documents when we needed","     * one, such that we must 404. This function centralizes all that logic.","     *","     * @param docs The docs to turn into a resource or collection","     * @param makeCollection Whether we're making a collection.","     * @param pluralizer An inflector function for setting the Resource's type","     */","  }], [{","    key: \"docsToResourceOrCollection\",","    value: function docsToResourceOrCollection(docs, makeCollection, pluralizer, fields) {","      var _this4 = this;","","      // if docs is an empty array and we're making a collection, that's ok.","      // but, if we're looking for a single doc, we must 404 if we didn't find any.","      if (!docs || !makeCollection && Array.isArray(docs) && docs.length === 0) {","        throw new _typesAPIError2[\"default\"](404, undefined, \"No matching resource found.\");","      }","","      docs = !Array.isArray(docs) ? [docs] : docs;","      docs = docs.map(function (it) {","        return _this4.docToResource(it, pluralizer, fields);","      });","      return makeCollection ? new _typesCollection2[\"default\"](docs) : docs[0];","    }","","    // Useful to have this as static for calling as a utility outside this class.","  }, {","    key: \"docToResource\",","    value: function docToResource(doc, pluralizer, fields) {","      var _this5 = this;","","      if (pluralizer === undefined) pluralizer = _pluralize2[\"default\"].plural;","","      var type = this.getType(doc.constructor.modelName, pluralizer);","      var refPaths = util.getReferencePaths(doc.constructor);","      var schemaOptions = doc.constructor.schema.options;","","      // Get and clean up attributes","      // Note: we can't use the depopulate attribute because it doesn't just","      // depopulate fields _inside_ the passed in doc, but can actually turn the","      // doc itself into a string if the doc was originally gotten by population.","      // That's stupid, and it breaks our include handling.","      // Also, starting in 4.0, we won't need the delete versionKey line:","      // https://github.com/Automattic/mongoose/issues/2675","      var attrs = doc.toJSON({ virtuals: true, getters: true });","      delete attrs.id; // from the id virtual.","      delete attrs._id;","      delete attrs[schemaOptions.versionKey];","      delete attrs[schemaOptions.discriminatorKey];","","      // Delete attributes that aren't in the included fields.","      // TODO: Some virtuals could be expensive to compute, so, if field","      // restrictions are in use, we shouldn't set {virtuals: true} above and,","      // instead, we should read only the virtuals that are needed (by searching","      // the schema to identify the virtual paths and then checking those against","      // fields) and add them to newAttrs.","      if (fields && fields[type]) {","        (function () {","          var newAttrs = {};","          fields[type].forEach(function (field) {","            if (attrs[field]) {","              newAttrs[field] = attrs[field];","            }","          });","          attrs = newAttrs;","        })();","      }","","      // Build relationships","      var relationships = {};","      var getProp = function getProp(obj, part) {","        return obj[part];","      };","","      refPaths.forEach(function (path) {","        // skip if applicable","        if (fields && fields[type] && !(0, _utilArrays.arrayContains)(fields[type], path)) {","          return;","        }","","        // get value at the path w/ the reference, in both the json'd + full docs.","        var pathParts = path.split(\".\");","        var jsonValAtPath = pathParts.reduce(getProp, attrs);","        var referencedType = _this5.getReferencedType(doc.constructor, path);","","        // delete the attribute, since we're moving it to relationships","        (0, _utilMisc.deleteNested)(path, attrs);","","        // Now, since the value wasn't excluded, we need to build its","        // Relationship. Note: the value could still be null or an empty array.","        // And, because of population, it could be a single document or array of","        // documents, in addition to a single/array of ids. So, as is customary,","        // we'll start by coercing it to an array no matter what, tracking","        // whether to make it a non-array at the end, to simplify our code.","        var isToOneRelationship = false;","","        if (!Array.isArray(jsonValAtPath)) {","          jsonValAtPath = [jsonValAtPath];","          isToOneRelationship = true;","        }","","        var linkage = [];","        jsonValAtPath.forEach(function (docOrIdOrNull) {","          var idOrNull = undefined;","","          // if it has an ._id key, it's a document.","          if (docOrIdOrNull && docOrIdOrNull._id) {","            idOrNull = String(docOrIdOrNull._id);","          } else {","            // Even though we did toJSON(), id may be an ObjectId. (lame.)","            idOrNull = docOrIdOrNull ? String(docOrIdOrNull) : null;","          }","","          linkage.push(idOrNull ? { type: referencedType, id: idOrNull } : null);","        });","","        // go back from an array if neccessary and save.","        linkage = new _typesLinkage2[\"default\"](isToOneRelationship ? linkage[0] : linkage);","        relationships[path] = new _typesRelationship2[\"default\"](linkage);","      });","","      // finally, create the resource.","      return new _typesResource2[\"default\"](type, doc.id, attrs, relationships);","    }","  }, {","    key: \"getModelName\",","    value: function getModelName(type) {","      var singularizer = arguments.length <= 1 || arguments[1] === undefined ? _pluralize2[\"default\"].singular : arguments[1];","","      var words = type.split(\"-\");","      words[words.length - 1] = singularizer(words[words.length - 1]);","      return words.map(function (it) {","        return it.charAt(0).toUpperCase() + it.slice(1);","      }).join(\"\");","    }","","    // Get the json api type name for a model.","  }, {","    key: \"getType\",","    value: function getType(modelName) {","      var pluralizer = arguments.length <= 1 || arguments[1] === undefined ? _pluralize2[\"default\"].plural : arguments[1];","","      return pluralizer(modelName.replace(/([A-Z])/g, \"\\-$1\").slice(1).toLowerCase());","    }","  }, {","    key: \"getReferencedType\",","    value: function getReferencedType(model, path) {","      var pluralizer = arguments.length <= 2 || arguments[2] === undefined ? _pluralize2[\"default\"].plural : arguments[2];","","      return this.getType(util.getReferencedModelName(model, path), pluralizer);","    }","  }, {","    key: \"getChildTypes\",","    value: function getChildTypes(model) {","      var _this6 = this;","","      var pluralizer = arguments.length <= 1 || arguments[1] === undefined ? _pluralize2[\"default\"].plural : arguments[1];","","      if (!model.discriminators) return [];","","      return _Object$keys(model.discriminators).map(function (it) {","        return _this6.getType(it, pluralizer);","      });","    }","  }, {","    key: \"getStandardizedSchema\",","    value: function getStandardizedSchema(model) {","      var _this7 = this;","","      var pluralizer = arguments.length <= 1 || arguments[1] === undefined ? _pluralize2[\"default\"].plural : arguments[1];","","      var schemaOptions = model.schema.options;","      var versionKey = schemaOptions.versionKey;","      var discriminatorKey = schemaOptions.discriminatorKey;","      var virtuals = model.schema.virtuals;","      var schemaFields = [];","","      var getFieldType = function getFieldType(path, schemaType) {","        if (path === \"_id\") {","          return new _typesDocumentationFieldType2[\"default\"](\"Id\", false);","        }","","        var typeOptions = schemaType.options.type;","        var holdsArray = Array.isArray(typeOptions);","        var baseType = holdsArray ? typeOptions[0].type.name : typeOptions.name;","        var refModelName = util.getReferencedModelName(model, path);","","        return !refModelName ? new _typesDocumentationFieldType2[\"default\"](baseType, holdsArray) : new _typesDocumentationRelationshipType2[\"default\"](holdsArray, refModelName, _this7.getType(refModelName, pluralizer));","      };","","      model.schema.eachPath(function (name, type) {","        if ((0, _utilArrays.arrayContains)([versionKey, discriminatorKey], name)) {","          return;","        }","","        var fieldType = getFieldType(name, type);","        name = name === \"_id\" ? \"id\" : name;","        var likelyAutoGenerated = name === \"id\" || fieldType.baseType === \"Date\" && /created|updated|modified/.test(name) && typeof type.options[\"default\"] === \"function\";","","        var defaultVal = undefined;","        if (likelyAutoGenerated) {","          defaultVal = \"__AUTO__\";","        } else if (type.options[\"default\"] && typeof type.options[\"default\"] !== \"function\") {","          defaultVal = type.options[\"default\"];","        }","","        // find the \"base type's\" options (used below), in case","        // we have an array of values of the same type at this path.","        var baseTypeOptions = Array.isArray(type.options.type) ? type.options.type[0] : type.options;","","        // Add validation info","        var validationRules = {","          required: !!type.options.required,","          oneOf: baseTypeOptions[\"enum\"] ? type.enumValues || type.caster && type.caster.enumValues : undefined,","          max: type.options.max || undefined","        };","","        type.validators.forEach(function (validatorObj) {","          _Object$assign(validationRules, validatorObj.validator.JSONAPIDocumentation);","        });","","        schemaFields.push(new _typesDocumentationField2[\"default\"](name, fieldType, validationRules, _this7.toFriendlyName(name), defaultVal));","      });","","      for (var virtual in virtuals) {","        // skip the id virtual, since we properly handled _id above.","        if (virtual === \"id\") {","          continue;","        }","","        // for virtual properties, we can't infer type or validation rules at all,","        // so we add them with just a friendly name and leave the rest undefined.","        // The user is expected to override/set this in a resource type description.","        schemaFields.push(new _typesDocumentationField2[\"default\"](virtual, undefined, undefined, this.toFriendlyName(virtual)));","      }","      return schemaFields;","    }","  }, {","    key: \"toFriendlyName\",","    value: function toFriendlyName(pathOrModelName) {","      var ucFirst = function ucFirst(v) {","        return v.charAt(0).toUpperCase() + v.slice(1);","      };","","      // pascal case is \"upper camel case\", i.e. \"MyName\" as opposed to \"myName\".","      // this variable holds a normalized, pascal cased version of pathOrModelName,","      // such that `ModelFormat`, `pathFormat` `nested.path.format` all become","      // ModelFormat, PathFormat, and NestedPathFormat.","      var pascalCasedString = pathOrModelName.split(\".\").map(ucFirst).join(\"\");","","      // Now, to handle acronyms like InMLBTeam, we need to define a word as a","      // capital letter, plus (0 or more capital letters where the capital letter","      // is not followed by a non-capital letter or 0 or more non capital letters).","      var matches = undefined;","      var words = [];","      var wordsRe = /[A-Z]([A-Z]*(?![^A-Z])|[^A-Z]*)/g;","","      while ((matches = wordsRe.exec(pascalCasedString)) !== null) {","        words.push(matches[0]);","      }","","      return words.join(\" \");","    }","  }, {","    key: \"getIdQueryType\",","    value: function getIdQueryType(idOrIds) {","      var mode = typeof idOrIds === \"string\" ? \"findOne\" : \"find\";","      var idQuery = undefined;","","      if (typeof idOrIds === \"string\") {","        if (!this.idIsValid(idOrIds)) {","          throw new _typesAPIError2[\"default\"](404, undefined, \"No matching resource found.\", \"Invalid ID.\");","        }","","        idQuery = { _id: idOrIds };","      } else if (Array.isArray(idOrIds)) {","        if (!idOrIds.every(this.idIsValid)) {","          throw new _typesAPIError2[\"default\"](400, undefined, \"Invalid ID.\");","        }","","        idQuery = { _id: { \"$in\": idOrIds } };","      }","","      return [mode, idQuery];","    }","  }, {","    key: \"idIsValid\",","    value: function idIsValid(id) {","      return typeof id === \"string\" && /^[0-9a-fA-F]{24}$/.test(id);","    }","  }]);","","  return MongooseAdapter;","})();","","exports[\"default\"] = MongooseAdapter;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"17":1,"19":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"39":1,"41":1,"43":1,"45":1,"47":1,"49":1,"51":1,"53":1,"55":1,"57":1,"59":1,"61":1,"63":1,"65":1,"67":1,"69":1,"71":1,"73":1,"75":1,"77":1,"78":1,"79":0,"81":0,"82":0,"83":0,"95":1,"98":0,"100":0,"101":0,"103":0,"105":0,"107":0,"108":0,"110":0,"111":0,"114":0,"117":0,"118":0,"125":0,"126":0,"151":0,"152":0,"153":0,"154":0,"156":0,"157":0,"159":0,"161":0,"162":0,"163":0,"164":0,"167":0,"168":0,"172":0,"173":0,"176":0,"177":0,"178":0,"181":0,"183":0,"186":0,"187":0,"189":0,"190":0,"196":0,"199":0,"200":0,"204":0,"207":0,"208":0,"209":0,"225":0,"227":0,"233":0,"234":0,"235":0,"237":0,"238":0,"239":0,"240":0,"242":0,"243":0,"246":0,"249":0,"250":0,"251":0,"252":0,"254":0,"267":0,"275":0,"276":0,"277":0,"280":0,"281":0,"283":0,"284":0,"285":0,"286":0,"289":0,"291":0,"293":0,"294":0,"296":0,"297":0,"304":0,"305":0,"307":0,"308":0,"309":0,"312":0,"313":0,"314":0,"318":0,"319":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"338":0,"339":0,"343":0,"345":0,"346":0,"347":0,"348":0,"353":0,"355":0,"356":0,"362":0,"364":0,"366":0,"368":0,"369":0,"371":0,"372":0,"373":0,"377":0,"378":0,"379":0,"380":0,"382":0,"396":0,"397":0,"399":0,"402":0,"404":0,"409":0,"410":0,"412":0,"415":0,"417":0,"422":0,"425":0,"426":0,"427":0,"429":0,"434":0,"435":0,"446":0,"447":0,"468":0,"472":0,"473":0,"476":0,"477":0,"478":0,"480":0,"487":0,"489":0,"491":0,"492":0,"493":0,"502":0,"503":0,"504":0,"505":0,"506":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"522":0,"527":0,"528":0,"529":0,"532":0,"534":0,"535":0,"539":0,"540":0,"541":0,"544":0,"552":0,"554":0,"555":0,"556":0,"559":0,"560":0,"561":0,"564":0,"565":0,"568":0,"571":0,"575":0,"576":0,"580":0,"585":0,"587":0,"588":0,"589":0,"590":0,"598":0,"600":0,"605":0,"607":0,"612":0,"614":0,"616":0,"618":0,"619":0,"625":0,"627":0,"629":0,"630":0,"631":0,"632":0,"633":0,"635":0,"636":0,"637":0,"640":0,"641":0,"642":0,"643":0,"645":0,"648":0,"649":0,"650":0,"653":0,"654":0,"655":0,"657":0,"658":0,"659":0,"660":0,"661":0,"666":0,"669":0,"675":0,"676":0,"679":0,"682":0,"684":0,"685":0,"691":0,"693":0,"698":0,"699":0,"706":0,"711":0,"712":0,"713":0,"715":0,"716":0,"719":0,"724":0,"725":0,"727":0,"728":0,"729":0,"732":0,"733":0,"734":0,"735":0,"738":0,"741":0,"746":0,"750":1,"753":1,"754":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/db-adapters/Mongoose/lib.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/db-adapters/Mongoose/lib.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"errorHandler","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}}},"2":{"name":"getReferencePaths","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":34}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":24},"end":{"line":50,"column":46}}},"4":{"name":"isReferencePath","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":37}}},"5":{"name":"getReferencedModelName","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":45}}},"6":{"name":"resourceToDocObject","line":76,"loc":{"start":{"line":76,"column":0},"end":{"line":76,"column":39}}},"7":{"name":"getId","line":78,"loc":{"start":{"line":78,"column":14},"end":{"line":78,"column":33}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":79}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":97}},"3":{"start":{"line":10,"column":0},"end":{"line":12,"column":3}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":46}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":42}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":56}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":61}},"11":{"start":{"line":28,"column":0},"end":{"line":46,"column":1}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"13":{"start":{"line":31,"column":2},"end":{"line":43,"column":5}},"14":{"start":{"line":32,"column":4},"end":{"line":35,"column":5}},"15":{"start":{"line":33,"column":6},"end":{"line":33,"column":41}},"16":{"start":{"line":34,"column":6},"end":{"line":34,"column":213}},"17":{"start":{"line":42,"column":6},"end":{"line":42,"column":23}},"18":{"start":{"line":45,"column":2},"end":{"line":45,"column":15}},"19":{"start":{"line":48,"column":0},"end":{"line":54,"column":1}},"20":{"start":{"line":49,"column":2},"end":{"line":49,"column":17}},"21":{"start":{"line":50,"column":2},"end":{"line":52,"column":5}},"22":{"start":{"line":51,"column":4},"end":{"line":51,"column":48}},"23":{"start":{"line":51,"column":31},"end":{"line":51,"column":48}},"24":{"start":{"line":53,"column":2},"end":{"line":53,"column":15}},"25":{"start":{"line":56,"column":0},"end":{"line":59,"column":1}},"26":{"start":{"line":57,"column":2},"end":{"line":57,"column":58}},"27":{"start":{"line":58,"column":2},"end":{"line":58,"column":46}},"28":{"start":{"line":61,"column":0},"end":{"line":65,"column":1}},"29":{"start":{"line":62,"column":2},"end":{"line":62,"column":43}},"30":{"start":{"line":63,"column":2},"end":{"line":63,"column":64}},"31":{"start":{"line":64,"column":2},"end":{"line":64,"column":44}},"32":{"start":{"line":76,"column":0},"end":{"line":92,"column":1}},"33":{"start":{"line":77,"column":2},"end":{"line":77,"column":47}},"34":{"start":{"line":78,"column":2},"end":{"line":80,"column":4}},"35":{"start":{"line":79,"column":4},"end":{"line":79,"column":17}},"36":{"start":{"line":81,"column":2},"end":{"line":90,"column":3}},"37":{"start":{"line":82,"column":4},"end":{"line":82,"column":60}},"38":{"start":{"line":85,"column":4},"end":{"line":89,"column":5}},"39":{"start":{"line":86,"column":6},"end":{"line":86,"column":25}},"40":{"start":{"line":88,"column":6},"end":{"line":88,"column":74}},"41":{"start":{"line":91,"column":2},"end":{"line":91,"column":13}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":82},"end":{"line":34,"column":85}},{"start":{"line":34,"column":88},"end":{"line":34,"column":111}}]},"3":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":88},"end":{"line":34,"column":104}},{"start":{"line":34,"column":108},"end":{"line":34,"column":111}}]},"4":{"line":34,"type":"cond-expr","locations":[{"start":{"line":34,"column":182},"end":{"line":34,"column":198}},{"start":{"line":34,"column":201},"end":{"line":34,"column":210}}]},"5":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"6":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":17},"end":{"line":57,"column":34}},{"start":{"line":57,"column":38},"end":{"line":57,"column":48}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":16}},{"start":{"line":58,"column":20},"end":{"line":58,"column":45}}]},"8":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":23},"end":{"line":63,"column":40}},{"start":{"line":63,"column":44},"end":{"line":63,"column":54}}]},"9":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":9},"end":{"line":64,"column":22}},{"start":{"line":64,"column":26},"end":{"line":64,"column":43}}]},"10":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"11":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},{"start":{"line":85,"column":28},"end":{"line":85,"column":50}},{"start":{"line":85,"column":54},"end":{"line":85,"column":74}}]},"12":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":42},"end":{"line":88,"column":60}},{"start":{"line":88,"column":63},"end":{"line":88,"column":73}}]}},"code":["// This file contains utility functions used by the Mongoose adapter that","// aren't part of the class's public interface. Don't use them in your own","// code, as their APIs are subject to change.","\"use strict\";","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","exports.errorHandler = errorHandler;","exports.getReferencePaths = getReferencePaths;","exports.isReferencePath = isReferencePath;","exports.getReferencedModelName = getReferencedModelName;","exports.resourceToDocObject = resourceToDocObject;","","var _typesAPIError = require(\"../../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","/**"," * Takes any error that resulted from the above operations throws an array of"," * errors that can be sent back to the caller as the Promise's rejection value."," */","","function errorHandler(err) {","  var errors = [];","  //Convert validation errors collection to something reasonable","  if (err.errors) {","    for (var errKey in err.errors) {","      var thisError = err.errors[errKey];","      errors.push(new _typesAPIError2[\"default\"](err.name === \"ValidationError\" ? 400 : thisError.status || 500, undefined, thisError.message, undefined, undefined, thisError.path ? [thisError.path] : undefined));","    }","  }","","  // Send the raw error.","  // Don't worry about revealing internal concerns, as the pipeline maps","  // all unhandled errors to generic json-api APIError objects pre responding.","  else {","      errors.push(err);","    }","","  throw errors;","}","","function getReferencePaths(model) {","  var paths = [];","  model.schema.eachPath(function (name, type) {","    if (isReferencePath(type)) paths.push(name);","  });","  return paths;","}","","function isReferencePath(schemaType) {","  var options = (schemaType.caster || schemaType).options;","  return options && options.ref !== undefined;","}","","function getReferencedModelName(model, path) {","  var schemaType = model.schema.path(path);","  var schemaOptions = (schemaType.caster || schemaType).options;","  return schemaOptions && schemaOptions.ref;","}","","/**"," * Takes a Resource object and returns JSON that could be passed to Mongoose"," * to create a document for that resource. The returned JSON doesn't include"," * the id (as the input resources are coming from a client, and we're"," * ignoring client-provided ids) or the type (as that is set by mongoose"," * outside of the document) or the meta (as storing that like a field may not"," * be what we want to do)."," */","","function resourceToDocObject(resource) {","  var res = _Object$assign({}, resource.attrs);","  var getId = function getId(it) {","    return it.id;","  };","  for (var key in resource.relationships) {","    var linkage = resource.relationships[key].linkage.value;","","    // handle linkage when set explicitly for empty relationships","    if (linkage === null || Array.isArray(linkage) && linkage.length === 0) {","      res[key] = linkage;","    } else {","      res[key] = Array.isArray(linkage) ? linkage.map(getId) : linkage.id;","    }","  }","  return res;","}"],"l":{"6":1,"8":1,"10":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"21":1,"28":1,"29":0,"31":0,"32":0,"33":0,"34":0,"42":0,"45":0,"48":1,"49":0,"50":0,"51":0,"53":0,"56":1,"57":0,"58":0,"61":1,"62":0,"63":0,"64":0,"76":1,"77":0,"78":0,"79":0,"81":0,"82":0,"85":0,"86":0,"88":0,"91":0}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Documentation/RelationshipType.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/Documentation/RelationshipType.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":1,"21":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":24},"end":{"line":21,"column":46}}},"2":{"name":"RelationshipType","line":24,"loc":{"start":{"line":24,"column":2},"end":{"line":24,"column":61}}},"3":{"name":"toString","line":35,"loc":{"start":{"line":35,"column":11},"end":{"line":35,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":69}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":83}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":97}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":54}},"9":{"start":{"line":21,"column":0},"end":{"line":41,"column":27}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":42}},"11":{"start":{"line":24,"column":2},"end":{"line":31,"column":3}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":44}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":116}},"14":{"start":{"line":28,"column":4},"end":{"line":28,"column":41}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":31}},"16":{"start":{"line":30,"column":4},"end":{"line":30,"column":30}},"17":{"start":{"line":33,"column":2},"end":{"line":38,"column":6}},"18":{"start":{"line":36,"column":6},"end":{"line":36,"column":98}},"19":{"start":{"line":40,"column":2},"end":{"line":40,"column":26}},"20":{"start":{"line":43,"column":0},"end":{"line":43,"column":38}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":36}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":29},"end":{"line":36,"column":37}},{"start":{"line":36,"column":40},"end":{"line":36,"column":42}}]},"2":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":88},"end":{"line":36,"column":91}},{"start":{"line":36,"column":94},"end":{"line":36,"column":96}}]}},"code":["\"use strict\";","","var _get = require(\"babel-runtime/helpers/get\")[\"default\"];","","var _inherits = require(\"babel-runtime/helpers/inherits\")[\"default\"];","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _FieldType2 = require(\"./FieldType\");","","var _FieldType3 = _interopRequireDefault(_FieldType2);","","var RelationshipType = (function (_FieldType) {","  _inherits(RelationshipType, _FieldType);","","  function RelationshipType(toMany, targetModel, targetType) {","    _classCallCheck(this, RelationshipType);","","    _get(Object.getPrototypeOf(RelationshipType.prototype), \"constructor\", this).call(this, \"Relationship\", toMany);","    var _ref = [targetModel, targetType];","    this.targetModel = _ref[0];","    this.targetType = _ref[1];","  }","","  _createClass(RelationshipType, [{","    key: \"toString\",","    value: function toString() {","      return (this.isArray ? \"Array[\" : \"\") + this.targetModel + \"Id\" + (this.isArray ? \"]\" : \"\");","    }","  }]);","","  return RelationshipType;","})(_FieldType3[\"default\"]);","","exports[\"default\"] = RelationshipType;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"17":1,"19":1,"21":1,"22":1,"24":1,"25":0,"27":0,"28":0,"29":0,"30":0,"33":1,"36":0,"40":1,"43":1,"44":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/http-strategies/Express.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/http-strategies/Express.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"(anonymous_1)","line":50,"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":40}}},"2":{"name":"ExpressStrategy","line":53,"loc":{"start":{"line":53,"column":2},"end":{"line":53,"column":67}}},"3":{"name":"apiRequest","line":67,"loc":{"start":{"line":67,"column":11},"end":{"line":67,"column":47}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":94},"end":{"line":70,"column":119}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":62},"end":{"line":71,"column":88}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":18},"end":{"line":74,"column":33}}},"7":{"name":"docsRequest","line":82,"loc":{"start":{"line":82,"column":11},"end":{"line":82,"column":48}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":94},"end":{"line":85,"column":119}}},"9":{"name":"(anonymous_9)","line":86,"loc":{"start":{"line":86,"column":64},"end":{"line":86,"column":90}}},"10":{"name":"(anonymous_10)","line":89,"loc":{"start":{"line":89,"column":18},"end":{"line":89,"column":33}}},"11":{"name":"sendResources","line":95,"loc":{"start":{"line":95,"column":11},"end":{"line":95,"column":61}}},"12":{"name":"sendError","line":134,"loc":{"start":{"line":134,"column":11},"end":{"line":134,"column":48}}},"13":{"name":"(anonymous_13)","line":137,"loc":{"start":{"line":137,"column":93},"end":{"line":137,"column":119}}},"14":{"name":"(anonymous_14)","line":138,"loc":{"start":{"line":138,"column":57},"end":{"line":138,"column":69}}},"15":{"name":"(anonymous_15)","line":139,"loc":{"start":{"line":139,"column":18},"end":{"line":139,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":69}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":83}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":97}},"6":{"start":{"line":13,"column":0},"end":{"line":15,"column":3}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":28}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":43}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":52}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":63}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":31}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":44}},"13":{"start":{"line":50,"column":0},"end":{"line":154,"column":22}},"14":{"start":{"line":51,"column":2},"end":{"line":51,"column":36}},"15":{"start":{"line":53,"column":2},"end":{"line":57,"column":3}},"16":{"start":{"line":54,"column":4},"end":{"line":54,"column":43}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":131}},"18":{"start":{"line":65,"column":2},"end":{"line":151,"column":6}},"19":{"start":{"line":68,"column":6},"end":{"line":68,"column":23}},"20":{"start":{"line":70,"column":6},"end":{"line":76,"column":9}},"21":{"start":{"line":71,"column":8},"end":{"line":73,"column":11}},"22":{"start":{"line":72,"column":10},"end":{"line":72,"column":57}},"23":{"start":{"line":75,"column":8},"end":{"line":75,"column":39}},"24":{"start":{"line":83,"column":6},"end":{"line":83,"column":24}},"25":{"start":{"line":85,"column":6},"end":{"line":91,"column":9}},"26":{"start":{"line":86,"column":8},"end":{"line":88,"column":11}},"27":{"start":{"line":87,"column":10},"end":{"line":87,"column":58}},"28":{"start":{"line":90,"column":8},"end":{"line":90,"column":40}},"29":{"start":{"line":96,"column":6},"end":{"line":98,"column":7}},"30":{"start":{"line":97,"column":8},"end":{"line":97,"column":65}},"31":{"start":{"line":100,"column":6},"end":{"line":119,"column":7}},"32":{"start":{"line":101,"column":8},"end":{"line":105,"column":9}},"33":{"start":{"line":102,"column":10},"end":{"line":102,"column":33}},"34":{"start":{"line":104,"column":10},"end":{"line":104,"column":17}},"35":{"start":{"line":107,"column":8},"end":{"line":107,"column":60}},"36":{"start":{"line":108,"column":8},"end":{"line":108,"column":49}},"37":{"start":{"line":110,"column":8},"end":{"line":112,"column":9}},"38":{"start":{"line":111,"column":10},"end":{"line":111,"column":63}},"39":{"start":{"line":114,"column":8},"end":{"line":118,"column":9}},"40":{"start":{"line":115,"column":10},"end":{"line":115,"column":58}},"41":{"start":{"line":117,"column":10},"end":{"line":117,"column":20}},"42":{"start":{"line":135,"column":6},"end":{"line":135,"column":24}},"43":{"start":{"line":137,"column":6},"end":{"line":142,"column":9}},"44":{"start":{"line":138,"column":8},"end":{"line":138,"column":73}},"45":{"start":{"line":141,"column":8},"end":{"line":141,"column":49}},"46":{"start":{"line":153,"column":2},"end":{"line":153,"column":25}},"47":{"start":{"line":156,"column":0},"end":{"line":156,"column":37}},"48":{"start":{"line":157,"column":0},"end":{"line":157,"column":36}}},"branchMap":{"1":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"2":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":6},"end":{"line":100,"column":6}},{"start":{"line":100,"column":6},"end":{"line":100,"column":6}}]},"3":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":8},"end":{"line":101,"column":8}},{"start":{"line":101,"column":8},"end":{"line":101,"column":8}}]},"4":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":19},"end":{"line":108,"column":40}},{"start":{"line":108,"column":44},"end":{"line":108,"column":47}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":8},"end":{"line":110,"column":8}},{"start":{"line":110,"column":8},"end":{"line":110,"column":8}}]},"6":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]}},"code":["\"use strict\";","","var _get = require(\"babel-runtime/helpers/get\")[\"default\"];","","var _inherits = require(\"babel-runtime/helpers/inherits\")[\"default\"];","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _vary = require(\"vary\");","","var _vary2 = _interopRequireDefault(_vary);","","var _controllersAPI = require(\"../controllers/API\");","","var _controllersAPI2 = _interopRequireDefault(_controllersAPI);","","var _Base2 = require(\"./Base\");","","var _Base3 = _interopRequireDefault(_Base2);","","/**"," * This controller receives requests directly from express and sends responses"," * directly through it, but it converts incoming requests to, and generates"," * responses, from Request and Response objects that are defined by this"," * framework in a way that's not particular to express. This controller thereby"," * acts as a translation-layer between express and the rest of this json-api"," * framework."," *"," * @param {Object} options A set of configuration options."," *"," * @param {boolean} options.tunnel Whether to turn on PATCH tunneling. See:"," *    http://jsonapi.org/recommendations/#patchless-clients"," *"," * @param {boolean} options.handleContentNegotiation If the JSON API library"," *    can't produce a representation for the response that the client can"," *    `Accept`, should it return 406 or should it hand the request back to"," *    Express (i.e. call next()) so that subsequent handlers can attempt to"," *    find an alternate representation? By default, it does the former. But you"," *    can set this option to false to have this code just pass on to Express."," */","","var ExpressStrategy = (function (_Base) {","  _inherits(ExpressStrategy, _Base);","","  function ExpressStrategy(apiController, docsController, options) {","    _classCallCheck(this, ExpressStrategy);","","    _get(Object.getPrototypeOf(ExpressStrategy.prototype), \"constructor\", this).call(this, apiController, docsController, options);","  }","","  // For requests like GET /:type, GET /:type/:id/:relationship,","  // POST /:type PATCH /:type/:id, PATCH /:type, DELETE /:type/:idOrLabel,","  // DELETE /:type, GET /:type/:id/links/:relationship,","  // PATCH /:type/:id/links/:relationship, POST /:type/:id/links/:relationship,","  // and DELETE /:type/:id/links/:relationship.","","  _createClass(ExpressStrategy, [{","    key: \"apiRequest\",","    value: function apiRequest(req, res, next) {","      var _this = this;","","      this.buildRequestObject(req, req.protocol, req.get(\"Host\"), req.params, req.query).then(function (requestObject) {","        return _this.api.handle(requestObject, req, res).then(function (responseObject) {","          _this.sendResources(responseObject, res, next);","        });","      })[\"catch\"](function (err) {","        _this.sendError(err, req, res);","      });","    }","","    // For requests for the documentation.","  }, {","    key: \"docsRequest\",","    value: function docsRequest(req, res, next) {","      var _this2 = this;","","      this.buildRequestObject(req, req.protocol, req.get(\"Host\"), req.params, req.query).then(function (requestObject) {","        return _this2.docs.handle(requestObject, req, res).then(function (responseObject) {","          _this2.sendResources(responseObject, res, next);","        });","      })[\"catch\"](function (err) {","        _this2.sendError(err, req, res);","      });","    }","  }, {","    key: \"sendResources\",","    value: function sendResources(responseObject, res, next) {","      if (responseObject.headers.vary) {","        (0, _vary2[\"default\"])(res, responseObject.headers.vary);","      }","","      if (!responseObject.contentType) {","        if (this.config.handleContentNegotiation) {","          res.status(406).send();","        } else {","          next();","        }","      } else {","        res.set(\"Content-Type\", responseObject.contentType);","        res.status(responseObject.status || 200);","","        if (responseObject.headers.location) {","          res.set(\"Location\", responseObject.headers.location);","        }","","        if (responseObject.body !== null) {","          res.send(new Buffer(responseObject.body)).end();","        } else {","          res.end();","        }","      }","    }","","    /**","     * A user of this library may wish to send an error response for an exception","     * that originated outside of the JSON API Pipeline and that's outside the","     * main spec's scope (e.g. an authentication error). So, the controller","     * exposes this method which allows them to do that.","     *","     * @param {Error|APIError|Error[]|APIError[]} errors Error or array of errors","     * @param {Object} req Express's request object","     * @param {Object} res Express's response object","     */","  }, {","    key: \"sendError\",","    value: function sendError(errors, req, res) {","      var _this3 = this;","","      _controllersAPI2[\"default\"].responseFromExternalError(errors, req.headers.accept).then(function (responseObject) {","        return _this3.sendResources(responseObject, res, function () {});","      })[\"catch\"](function (err) {","        // if we hit an error generating our error...","        res.status(err.status).send(err.message);","      });","    }","","    /**","     * @TODO Uses this ExpressStrategy to create an express app with","     * preconfigured routes that can be mounted as a subapp.","    toApp(typesToExcludedMethods) {","    }","    */","  }]);","","  return ExpressStrategy;","})(_Base3[\"default\"]);","","exports[\"default\"] = ExpressStrategy;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"50":1,"51":1,"53":1,"54":0,"56":0,"65":1,"68":0,"70":0,"71":0,"72":0,"75":0,"83":0,"85":0,"86":0,"87":0,"90":0,"96":0,"97":0,"100":0,"101":0,"102":0,"104":0,"107":0,"108":0,"110":0,"111":0,"114":0,"115":0,"117":0,"135":0,"137":0,"138":0,"141":0,"153":1,"156":1,"157":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/http-strategies/Base.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/http-strategies/Base.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":1,"75":1,"76":0,"77":1,"78":0,"79":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":58,"loc":{"start":{"line":58,"column":20},"end":{"line":58,"column":32}}},"2":{"name":"BaseStrategy","line":59,"loc":{"start":{"line":59,"column":2},"end":{"line":59,"column":64}}},"3":{"name":"buildRequestObject","line":88,"loc":{"start":{"line":88,"column":11},"end":{"line":88,"column":75}}},"4":{"name":"(anonymous_4)","line":91,"loc":{"start":{"line":91,"column":36},"end":{"line":91,"column":63}}},"5":{"name":"(anonymous_5)","line":140,"loc":{"start":{"line":140,"column":60},"end":{"line":140,"column":83}}},"6":{"name":"hasBody","line":178,"loc":{"start":{"line":178,"column":0},"end":{"line":178,"column":22}}},"7":{"name":"isReadableStream","line":182,"loc":{"start":{"line":182,"column":0},"end":{"line":182,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":76}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":83}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":79}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":97}},"5":{"start":{"line":11,"column":0},"end":{"line":13,"column":3}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":22}},"7":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":39}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":43}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":57}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":35}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":49}},"14":{"start":{"line":31,"column":0},"end":{"line":31,"column":50}},"15":{"start":{"line":33,"column":0},"end":{"line":33,"column":61}},"16":{"start":{"line":35,"column":0},"end":{"line":35,"column":57}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":67}},"18":{"start":{"line":58,"column":0},"end":{"line":174,"column":5}},"19":{"start":{"line":59,"column":2},"end":{"line":70,"column":3}},"20":{"start":{"line":60,"column":4},"end":{"line":60,"column":40}},"21":{"start":{"line":62,"column":4},"end":{"line":65,"column":6}},"22":{"start":{"line":67,"column":4},"end":{"line":67,"column":29}},"23":{"start":{"line":68,"column":4},"end":{"line":68,"column":31}},"24":{"start":{"line":69,"column":4},"end":{"line":69,"column":62}},"25":{"start":{"line":86,"column":2},"end":{"line":171,"column":6}},"26":{"start":{"line":89,"column":6},"end":{"line":89,"column":31}},"27":{"start":{"line":91,"column":6},"end":{"line":169,"column":9}},"28":{"start":{"line":92,"column":8},"end":{"line":92,"column":53}},"29":{"start":{"line":95,"column":8},"end":{"line":99,"column":9}},"30":{"start":{"line":96,"column":10},"end":{"line":96,"column":33}},"31":{"start":{"line":97,"column":15},"end":{"line":99,"column":9}},"32":{"start":{"line":98,"column":10},"end":{"line":98,"column":72}},"33":{"start":{"line":101,"column":8},"end":{"line":101,"column":59}},"34":{"start":{"line":102,"column":8},"end":{"line":102,"column":51}},"35":{"start":{"line":103,"column":8},"end":{"line":103,"column":30}},"36":{"start":{"line":104,"column":8},"end":{"line":104,"column":53}},"37":{"start":{"line":105,"column":8},"end":{"line":105,"column":64}},"38":{"start":{"line":108,"column":8},"end":{"line":108,"column":77}},"39":{"start":{"line":109,"column":8},"end":{"line":109,"column":40}},"40":{"start":{"line":111,"column":8},"end":{"line":111,"column":51}},"41":{"start":{"line":112,"column":8},"end":{"line":112,"column":45}},"42":{"start":{"line":113,"column":8},"end":{"line":113,"column":40}},"43":{"start":{"line":117,"column":8},"end":{"line":117,"column":90}},"44":{"start":{"line":118,"column":8},"end":{"line":122,"column":9}},"45":{"start":{"line":119,"column":10},"end":{"line":119,"column":30}},"46":{"start":{"line":120,"column":15},"end":{"line":122,"column":9}},"47":{"start":{"line":121,"column":10},"end":{"line":121,"column":139}},"48":{"start":{"line":124,"column":8},"end":{"line":168,"column":9}},"49":{"start":{"line":125,"column":10},"end":{"line":127,"column":11}},"50":{"start":{"line":126,"column":12},"end":{"line":126,"column":184}},"51":{"start":{"line":129,"column":10},"end":{"line":129,"column":55}},"52":{"start":{"line":130,"column":10},"end":{"line":130,"column":63}},"53":{"start":{"line":132,"column":10},"end":{"line":132,"column":37}},"54":{"start":{"line":133,"column":10},"end":{"line":133,"column":79}},"55":{"start":{"line":134,"column":10},"end":{"line":134,"column":42}},"56":{"start":{"line":135,"column":10},"end":{"line":137,"column":11}},"57":{"start":{"line":136,"column":12},"end":{"line":136,"column":69}},"58":{"start":{"line":140,"column":10},"end":{"line":163,"column":13}},"59":{"start":{"line":141,"column":12},"end":{"line":162,"column":15}},"60":{"start":{"line":142,"column":14},"end":{"line":142,"column":26}},"61":{"start":{"line":150,"column":17},"end":{"line":162,"column":15}},"62":{"start":{"line":151,"column":16},"end":{"line":151,"column":35}},"63":{"start":{"line":152,"column":16},"end":{"line":152,"column":29}},"64":{"start":{"line":153,"column":16},"end":{"line":153,"column":28}},"65":{"start":{"line":155,"column":16},"end":{"line":161,"column":17}},"66":{"start":{"line":156,"column":18},"end":{"line":156,"column":36}},"67":{"start":{"line":157,"column":18},"end":{"line":157,"column":47}},"68":{"start":{"line":158,"column":18},"end":{"line":158,"column":30}},"69":{"start":{"line":160,"column":18},"end":{"line":160,"column":107}},"70":{"start":{"line":165,"column":10},"end":{"line":165,"column":29}},"71":{"start":{"line":166,"column":10},"end":{"line":166,"column":30}},"72":{"start":{"line":167,"column":10},"end":{"line":167,"column":22}},"73":{"start":{"line":173,"column":2},"end":{"line":173,"column":22}},"74":{"start":{"line":176,"column":0},"end":{"line":176,"column":34}},"75":{"start":{"line":178,"column":0},"end":{"line":180,"column":1}},"76":{"start":{"line":179,"column":2},"end":{"line":179,"column":97}},"77":{"start":{"line":182,"column":0},"end":{"line":184,"column":1}},"78":{"start":{"line":183,"column":2},"end":{"line":183,"column":91}},"79":{"start":{"line":185,"column":0},"end":{"line":185,"column":36}}},"branchMap":{"1":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":8}},{"start":{"line":95,"column":8},"end":{"line":95,"column":8}}]},"2":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":15},"end":{"line":97,"column":15}},{"start":{"line":97,"column":15},"end":{"line":97,"column":15}}]},"3":{"line":101,"type":"binary-expr","locations":[{"start":{"line":101,"column":27},"end":{"line":101,"column":43}},{"start":{"line":101,"column":47},"end":{"line":101,"column":57}}]},"4":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":21},"end":{"line":102,"column":30}},{"start":{"line":102,"column":34},"end":{"line":102,"column":50}}]},"5":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":26},"end":{"line":105,"column":40}},{"start":{"line":105,"column":44},"end":{"line":105,"column":63}}]},"6":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":19},"end":{"line":108,"column":27}},{"start":{"line":108,"column":32},"end":{"line":108,"column":75}}]},"7":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":59},"end":{"line":108,"column":66}},{"start":{"line":108,"column":69},"end":{"line":108,"column":75}}]},"8":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":15},"end":{"line":109,"column":19}},{"start":{"line":109,"column":23},"end":{"line":109,"column":39}}]},"9":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":31},"end":{"line":117,"column":68}},{"start":{"line":117,"column":72},"end":{"line":117,"column":74}}]},"10":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":8}},{"start":{"line":118,"column":8},"end":{"line":118,"column":8}}]},"11":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":12},"end":{"line":118,"column":25}},{"start":{"line":118,"column":29},"end":{"line":118,"column":49}},{"start":{"line":118,"column":53},"end":{"line":118,"column":80}}]},"12":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":15},"end":{"line":120,"column":15}},{"start":{"line":120,"column":15},"end":{"line":120,"column":15}}]},"13":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"14":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":10},"end":{"line":125,"column":10}},{"start":{"line":125,"column":10},"end":{"line":125,"column":10}}]},"15":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":39},"end":{"line":133,"column":68}},{"start":{"line":133,"column":72},"end":{"line":133,"column":78}}]},"16":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":10},"end":{"line":135,"column":10}},{"start":{"line":135,"column":10},"end":{"line":135,"column":10}}]},"17":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":14},"end":{"line":135,"column":43}},{"start":{"line":135,"column":47},"end":{"line":135,"column":84}}]},"18":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":12},"end":{"line":141,"column":12}},{"start":{"line":141,"column":12},"end":{"line":141,"column":12}}]},"19":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":17},"end":{"line":150,"column":17}},{"start":{"line":150,"column":17},"end":{"line":150,"column":17}}]},"20":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":9},"end":{"line":179,"column":55}},{"start":{"line":179,"column":59},"end":{"line":179,"column":96}}]},"21":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":9},"end":{"line":183,"column":47}},{"start":{"line":183,"column":51},"end":{"line":183,"column":90}}]}},"code":["\"use strict\";","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _Object$assign = require(\"babel-runtime/core-js/object/assign\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _q = require(\"q\");","","var _q2 = _interopRequireDefault(_q);","","var _qs = require(\"qs\");","","var _qs2 = _interopRequireDefault(_qs);","","var _contentType = require(\"content-type\");","","var _contentType2 = _interopRequireDefault(_contentType);","","var _rawBody = require(\"raw-body\");","","var _rawBody2 = _interopRequireDefault(_rawBody);","","var _typesAPIError = require(\"../types/APIError\");","","var _typesAPIError2 = _interopRequireDefault(_typesAPIError);","","var _typesHTTPRequest = require(\"../types/HTTP/Request\");","","var _typesHTTPRequest2 = _interopRequireDefault(_typesHTTPRequest);","","/**"," * This controller is the base for http strategy classes. It's built around"," * the premise that most if not all http frameworks are built on top of the"," * core http module and as such should provide the original IncomingMessage"," * object. This allows the buildRequestObject method to be framework agnostic"," * in it's translation to the json-api Request object."," *"," * @param {Object} options A set of configuration options."," *"," * @param {boolean} options.tunnel Whether to turn on PATCH tunneling. See:"," *    http://jsonapi.org/recommendations/#patchless-clients"," *"," * @param {boolean} options.handleContentNegotiation If the JSON API library"," *    can't produce a representation for the response that the client can"," *    `Accept`, should it return 406 or should it hand the request back to"," *    to the framwork so that subsequent handlers can attempt to find an"," *    alternate representation? By default, it does the former."," */","","var BaseStrategy = (function () {","  function BaseStrategy(apiController, docsController, options) {","    _classCallCheck(this, BaseStrategy);","","    var defaultOptions = {","      tunnel: false,","      handleContentNegotiation: true","    };","","    this.api = apiController;","    this.docs = docsController;","    this.config = _Object$assign({}, defaultOptions, options); // apply options","  }","","  /**","   * Builds a Request object from an IncomingMessage object. It is not","   * possible to infer the protocol or the url params from the IncomingMessage","   * object alone so they must be passed as arguments. Optionally a query object","   * can be passed, otherwise the query parameters will be inferred from the","   * IncomingMessage url property and parsed using the qs node module.","   *","   * @param {http.IncomingMessage} req original request object from core node module http","   * @param {string} protocol","   * @param {string} host","   * @param {Object} params object containing url parameters","   * @param {Object} [query] object containing query parameters","   */","","  _createClass(BaseStrategy, [{","    key: \"buildRequestObject\",","    value: function buildRequestObject(req, protocol, host, params, query) {","      var config = this.config;","","      return _q2[\"default\"].Promise(function (resolve, reject) {","        var it = new _typesHTTPRequest2[\"default\"]();","","        // Handle route & query params","        if (query) {","          it.queryParams = query;","        } else if (req.url.indexOf(\"?\") !== -1) {","          it.queryParams = _qs2[\"default\"].parse(req.url.split(\"?\")[1]);","        }","","        it.allowLabel = !!(params.idOrLabel && !params.id);","        it.idOrIds = params.id || params.idOrLabel;","        it.type = params.type;","        it.aboutRelationship = !!params.relationship;","        it.relationship = params.related || params.relationship;","","        // Handle HTTP/Conneg.","        protocol = protocol || (req.connection.encrypted ? \"https\" : \"http\");","        host = host || req.headers.host;","","        it.uri = protocol + \"://\" + host + req.url;","        it.method = req.method.toLowerCase();","        it.accepts = req.headers.accept;","","        // Support Verb tunneling, but only for PATCH and only if user turns it on.","        // Turning on any tunneling automatically could be a security issue.","        var requestedMethod = (req.headers[\"x-http-method-override\"] || \"\").toLowerCase();","        if (config.tunnel && it.method === \"post\" && requestedMethod === \"patch\") {","          it.method = \"patch\";","        } else if (requestedMethod) {","          reject(new _typesAPIError2[\"default\"](400, undefined, \"Cannot tunnel to the method \\\"\" + requestedMethod.toUpperCase() + \"\\\".\"));","        }","","        if (hasBody(req)) {","          if (!isReadableStream(req)) {","            return reject(new _typesAPIError2[\"default\"](500, undefined, \"Request body could not be parsed. Make sure other no other middleware has already parsed the request body.\"));","          }","","          it.contentType = req.headers[\"content-type\"];","          var typeParsed = _contentType2[\"default\"].parse(req);","","          var bodyParserOptions = {};","          bodyParserOptions.encoding = typeParsed.parameters.charset || \"utf8\";","          bodyParserOptions.limit = \"1mb\";","          if (req.headers[\"content-length\"] && !isNaN(req.headers[\"content-length\"])) {","            bodyParserOptions.length = req.headers[\"content-length\"];","          }","","          // The req has not yet been read, so let's read it","          (0, _rawBody2[\"default\"])(req, bodyParserOptions, function (err, string) {","            if (err) {","              reject(err);","            }","","            // Even though we passed the hasBody check, the body could still be","            // empty, so we check the length. (We can't check this before doing","            // getRawBody because, while Content-Length: 0 signals an empty body,","            // there's no similar in-advance clue for detecting empty bodies when","            // Transfer-Encoding: chunked is being used.)","            else if (string.length === 0) {","                it.hasBody = false;","                it.body = \"\";","                resolve(it);","              } else {","                try {","                  it.hasBody = true;","                  it.body = JSON.parse(string);","                  resolve(it);","                } catch (error) {","                  reject(new _typesAPIError2[\"default\"](400, undefined, \"Request contains invalid JSON.\"));","                }","              }","          });","        } else {","          it.hasBody = false;","          it.body = undefined;","          resolve(it);","        }","      });","    }","  }]);","","  return BaseStrategy;","})();","","exports[\"default\"] = BaseStrategy;","","function hasBody(req) {","  return req.headers[\"transfer-encoding\"] !== undefined || !isNaN(req.headers[\"content-length\"]);","}","","function isReadableStream(req) {","  return typeof req._readableState === \"object\" && req._readableState.endEmitted === false;","}","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"15":1,"17":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"31":1,"33":1,"35":1,"37":1,"58":1,"59":1,"60":0,"62":0,"67":0,"68":0,"69":0,"86":1,"89":0,"91":0,"92":0,"95":0,"96":0,"97":0,"98":0,"101":0,"102":0,"103":0,"104":0,"105":0,"108":0,"109":0,"111":0,"112":0,"113":0,"117":0,"118":0,"119":0,"120":0,"121":0,"124":0,"125":0,"126":0,"129":0,"130":0,"132":0,"133":0,"134":0,"135":0,"136":0,"140":0,"141":0,"142":0,"150":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"158":0,"160":0,"165":0,"166":0,"167":0,"173":1,"176":1,"178":1,"179":0,"182":1,"183":0,"185":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/HTTP/Request.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/types/HTTP/Request.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"Request","line":11,"loc":{"start":{"line":11,"column":14},"end":{"line":11,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":83}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":60}},"4":{"start":{"line":11,"column":0},"end":{"line":73,"column":2}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":33}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":22}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":24}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":76}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"10":{"start":{"line":30,"column":2},"end":{"line":30,"column":18}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":26}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":22}},"13":{"start":{"line":40,"column":2},"end":{"line":40,"column":16}},"14":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"15":{"start":{"line":49,"column":2},"end":{"line":49,"column":22}},"16":{"start":{"line":54,"column":2},"end":{"line":54,"column":19}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":27}},"18":{"start":{"line":65,"column":2},"end":{"line":65,"column":33}},"19":{"start":{"line":69,"column":2},"end":{"line":69,"column":22}},"20":{"start":{"line":72,"column":2},"end":{"line":72,"column":24}},"21":{"start":{"line":75,"column":0},"end":{"line":75,"column":65}},"22":{"start":{"line":76,"column":0},"end":{"line":76,"column":36}}},"branchMap":{},"code":["\"use strict\";","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _utilTypeHandling = require(\"../../util/type-handling\");","","var Request = function Request() {","  _classCallCheck(this, Request);","","  // Whether the request has a (non-empty) body,","  // in which case we'll need to validate the Content-Type.","  this.hasBody = null;","","  // Whether the request is supposed to have a body.","  // If it needsBody but doesn't have one, it's invalid.","  this.needsBody = null;","","  // The json of the body. Have to use Object.defineProperty to default","  // it to undefined while still allowing us to change it post seal().","  Object.defineProperty(this, \"body\", { writable: true, enumerable: true });","","  // The HTTP method for the request.","  this.method = null;","","  // The URI (or IRI) being requested.","  this.uri = null;","","  // The request's Content-Type.","  this.contentType = null;","","  // The request's Accept header.","  this.accepts = null;","","  // The JSON-API extensions used to formulate the request,","  // read from the Content-Type header's `ext` param.","  this.ext = [];","","  // Whether we can process the id in the url as a label for this request.","  this.allowLabel = false;","","  // The id provided in the request's url, optionally after treating that","  // id as a label and mapping it to one or more entity ids. Note also:","  // the request could be something like /people/1/author, so the id(s)","  // stored here may not be the id(s) of the requested resource.","  this.idOrIds = null;","","  // The type provided in the request's url. As above, requests like","  // /people/1/author imply that the type stored here may not be that","  // of the returned resourses.","  this.type = null;","","  // The relationship name provided in the request's url. This is the","  // \"author\" part in the example /people/1/author request noted above.","  this.relationship = null;","","  // Whether the target of the request is a relationship (object), as opposed","  // to a resource object or collection. This effects how incoming data is","  // parsed. Note: the body of the request will be Linkage rather than","  // Relationships, in the same way that POSTs targeting a collection","  // include a single resource.","  this.aboutRelationship = false;","","  // Any primary data included in the request's body.","  // Necessary for creating and updating our resources.","  this.primary = null;","","  // Query parameters that might influence the request.","  this.queryParams = {};","};","","exports[\"default\"] = (0, _utilTypeHandling.ValueObject)(Request);","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"9":1,"11":1,"12":0,"16":0,"20":0,"24":0,"27":0,"30":0,"33":0,"36":0,"40":0,"43":0,"49":0,"54":0,"58":0,"65":0,"69":0,"72":0,"75":1,"76":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/http-strategies/Koa.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/build/src/http-strategies/Koa.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":1,"90":1},"b":{"1":[0,0,0,0,0,0,0],"2":[0,0],"3":[0,0,0,0,0,0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":52,"loc":{"start":{"line":52,"column":19},"end":{"line":52,"column":36}}},"2":{"name":"KoaStrategy","line":55,"loc":{"start":{"line":55,"column":2},"end":{"line":55,"column":63}}},"3":{"name":"apiRequest","line":69,"loc":{"start":{"line":69,"column":11},"end":{"line":69,"column":33}}},"4":{"name":"callee$2$0","line":71,"loc":{"start":{"line":71,"column":38},"end":{"line":71,"column":64}}},"5":{"name":"callee$2$0$","line":73,"loc":{"start":{"line":73,"column":40},"end":{"line":73,"column":74}}},"6":{"name":"docsRequest","line":119,"loc":{"start":{"line":119,"column":11},"end":{"line":119,"column":34}}},"7":{"name":"callee$2$0","line":121,"loc":{"start":{"line":121,"column":38},"end":{"line":121,"column":64}}},"8":{"name":"callee$2$0$","line":123,"loc":{"start":{"line":123,"column":40},"end":{"line":123,"column":74}}},"9":{"name":"sendResources","line":167,"loc":{"start":{"line":167,"column":11},"end":{"line":167,"column":55}}},"10":{"name":"sendError","line":203,"loc":{"start":{"line":203,"column":11},"end":{"line":203,"column":43}}},"11":{"name":"(anonymous_11)","line":206,"loc":{"start":{"line":206,"column":93},"end":{"line":206,"column":119}}},"12":{"name":"(anonymous_12)","line":208,"loc":{"start":{"line":208,"column":18},"end":{"line":208,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":59}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":69}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":83}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":74}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":97}},"7":{"start":{"line":15,"column":0},"end":{"line":17,"column":3}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}},"9":{"start":{"line":21,"column":0},"end":{"line":21,"column":43}},"10":{"start":{"line":23,"column":0},"end":{"line":23,"column":52}},"11":{"start":{"line":25,"column":0},"end":{"line":25,"column":63}},"12":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":44}},"14":{"start":{"line":52,"column":0},"end":{"line":216,"column":22}},"15":{"start":{"line":53,"column":2},"end":{"line":53,"column":32}},"16":{"start":{"line":55,"column":2},"end":{"line":59,"column":3}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":39}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":127}},"19":{"start":{"line":67,"column":2},"end":{"line":213,"column":6}},"20":{"start":{"line":70,"column":6},"end":{"line":70,"column":26}},"21":{"start":{"line":71,"column":6},"end":{"line":113,"column":9}},"22":{"start":{"line":72,"column":8},"end":{"line":72,"column":53}},"23":{"start":{"line":73,"column":8},"end":{"line":112,"column":40}},"24":{"start":{"line":74,"column":10},"end":{"line":111,"column":11}},"25":{"start":{"line":74,"column":20},"end":{"line":111,"column":11}},"26":{"start":{"line":76,"column":14},"end":{"line":76,"column":25}},"27":{"start":{"line":77,"column":14},"end":{"line":77,"column":35}},"28":{"start":{"line":78,"column":14},"end":{"line":78,"column":35}},"29":{"start":{"line":79,"column":14},"end":{"line":79,"column":94}},"30":{"start":{"line":82,"column":14},"end":{"line":82,"column":40}},"31":{"start":{"line":83,"column":14},"end":{"line":83,"column":35}},"32":{"start":{"line":84,"column":14},"end":{"line":84,"column":54}},"33":{"start":{"line":87,"column":14},"end":{"line":87,"column":40}},"34":{"start":{"line":88,"column":14},"end":{"line":88,"column":72}},"35":{"start":{"line":90,"column":14},"end":{"line":93,"column":15}},"36":{"start":{"line":91,"column":16},"end":{"line":91,"column":38}},"37":{"start":{"line":92,"column":16},"end":{"line":92,"column":22}},"38":{"start":{"line":95,"column":14},"end":{"line":95,"column":36}},"39":{"start":{"line":96,"column":14},"end":{"line":96,"column":26}},"40":{"start":{"line":99,"column":14},"end":{"line":99,"column":36}},"41":{"start":{"line":100,"column":14},"end":{"line":100,"column":20}},"42":{"start":{"line":103,"column":14},"end":{"line":103,"column":36}},"43":{"start":{"line":104,"column":14},"end":{"line":104,"column":55}},"44":{"start":{"line":106,"column":14},"end":{"line":106,"column":55}},"45":{"start":{"line":110,"column":14},"end":{"line":110,"column":40}},"46":{"start":{"line":120,"column":6},"end":{"line":120,"column":26}},"47":{"start":{"line":121,"column":6},"end":{"line":163,"column":9}},"48":{"start":{"line":122,"column":8},"end":{"line":122,"column":53}},"49":{"start":{"line":123,"column":8},"end":{"line":162,"column":40}},"50":{"start":{"line":124,"column":10},"end":{"line":161,"column":11}},"51":{"start":{"line":124,"column":20},"end":{"line":161,"column":11}},"52":{"start":{"line":126,"column":14},"end":{"line":126,"column":25}},"53":{"start":{"line":127,"column":14},"end":{"line":127,"column":35}},"54":{"start":{"line":128,"column":14},"end":{"line":128,"column":35}},"55":{"start":{"line":129,"column":14},"end":{"line":129,"column":94}},"56":{"start":{"line":132,"column":14},"end":{"line":132,"column":40}},"57":{"start":{"line":133,"column":14},"end":{"line":133,"column":35}},"58":{"start":{"line":134,"column":14},"end":{"line":134,"column":55}},"59":{"start":{"line":137,"column":14},"end":{"line":137,"column":40}},"60":{"start":{"line":138,"column":14},"end":{"line":138,"column":72}},"61":{"start":{"line":140,"column":14},"end":{"line":143,"column":15}},"62":{"start":{"line":141,"column":16},"end":{"line":141,"column":38}},"63":{"start":{"line":142,"column":16},"end":{"line":142,"column":22}},"64":{"start":{"line":145,"column":14},"end":{"line":145,"column":36}},"65":{"start":{"line":146,"column":14},"end":{"line":146,"column":26}},"66":{"start":{"line":149,"column":14},"end":{"line":149,"column":36}},"67":{"start":{"line":150,"column":14},"end":{"line":150,"column":20}},"68":{"start":{"line":153,"column":14},"end":{"line":153,"column":36}},"69":{"start":{"line":154,"column":14},"end":{"line":154,"column":55}},"70":{"start":{"line":156,"column":14},"end":{"line":156,"column":55}},"71":{"start":{"line":160,"column":14},"end":{"line":160,"column":40}},"72":{"start":{"line":168,"column":6},"end":{"line":170,"column":7}},"73":{"start":{"line":169,"column":8},"end":{"line":169,"column":69}},"74":{"start":{"line":172,"column":6},"end":{"line":189,"column":7}},"75":{"start":{"line":173,"column":8},"end":{"line":177,"column":9}},"76":{"start":{"line":174,"column":10},"end":{"line":174,"column":27}},"77":{"start":{"line":176,"column":10},"end":{"line":176,"column":22}},"78":{"start":{"line":179,"column":8},"end":{"line":179,"column":60}},"79":{"start":{"line":180,"column":8},"end":{"line":180,"column":50}},"80":{"start":{"line":182,"column":8},"end":{"line":184,"column":9}},"81":{"start":{"line":183,"column":10},"end":{"line":183,"column":63}},"82":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"83":{"start":{"line":187,"column":10},"end":{"line":187,"column":53}},"84":{"start":{"line":204,"column":6},"end":{"line":204,"column":23}},"85":{"start":{"line":206,"column":6},"end":{"line":211,"column":9}},"86":{"start":{"line":207,"column":8},"end":{"line":207,"column":56}},"87":{"start":{"line":210,"column":8},"end":{"line":210,"column":46}},"88":{"start":{"line":215,"column":2},"end":{"line":215,"column":21}},"89":{"start":{"line":218,"column":0},"end":{"line":218,"column":33}},"90":{"start":{"line":219,"column":0},"end":{"line":219,"column":36}}},"branchMap":{"1":{"line":74,"type":"switch","locations":[{"start":{"line":75,"column":12},"end":{"line":79,"column":94}},{"start":{"line":81,"column":12},"end":{"line":84,"column":54}},{"start":{"line":86,"column":12},"end":{"line":96,"column":26}},{"start":{"line":98,"column":12},"end":{"line":100,"column":20}},{"start":{"line":102,"column":12},"end":{"line":106,"column":55}},{"start":{"line":108,"column":12},"end":{"line":108,"column":20}},{"start":{"line":109,"column":12},"end":{"line":110,"column":40}}]},"2":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":14},"end":{"line":90,"column":14}},{"start":{"line":90,"column":14},"end":{"line":90,"column":14}}]},"3":{"line":124,"type":"switch","locations":[{"start":{"line":125,"column":12},"end":{"line":129,"column":94}},{"start":{"line":131,"column":12},"end":{"line":134,"column":55}},{"start":{"line":136,"column":12},"end":{"line":146,"column":26}},{"start":{"line":148,"column":12},"end":{"line":150,"column":20}},{"start":{"line":152,"column":12},"end":{"line":156,"column":55}},{"start":{"line":158,"column":12},"end":{"line":158,"column":20}},{"start":{"line":159,"column":12},"end":{"line":160,"column":40}}]},"4":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":14},"end":{"line":140,"column":14}},{"start":{"line":140,"column":14},"end":{"line":140,"column":14}}]},"5":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":6},"end":{"line":168,"column":6}},{"start":{"line":168,"column":6},"end":{"line":168,"column":6}}]},"6":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]},"7":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":8}},{"start":{"line":173,"column":8},"end":{"line":173,"column":8}}]},"8":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":21},"end":{"line":180,"column":42}},{"start":{"line":180,"column":46},"end":{"line":180,"column":49}}]},"9":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":8},"end":{"line":182,"column":8}},{"start":{"line":182,"column":8},"end":{"line":182,"column":8}}]},"10":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":186,"column":8}},{"start":{"line":186,"column":8},"end":{"line":186,"column":8}}]}},"code":["\"use strict\";","","var _get = require(\"babel-runtime/helpers/get\")[\"default\"];","","var _inherits = require(\"babel-runtime/helpers/inherits\")[\"default\"];","","var _createClass = require(\"babel-runtime/helpers/create-class\")[\"default\"];","","var _classCallCheck = require(\"babel-runtime/helpers/class-call-check\")[\"default\"];","","var _regeneratorRuntime = require(\"babel-runtime/regenerator\")[\"default\"];","","var _interopRequireDefault = require(\"babel-runtime/helpers/interop-require-default\")[\"default\"];","","Object.defineProperty(exports, \"__esModule\", {","  value: true","});","","var _vary = require(\"vary\");","","var _vary2 = _interopRequireDefault(_vary);","","var _controllersAPI = require(\"../controllers/API\");","","var _controllersAPI2 = _interopRequireDefault(_controllersAPI);","","var _Base2 = require(\"./Base\");","","var _Base3 = _interopRequireDefault(_Base2);","","/**"," * This controller receives requests directly from Koa and sends responses"," * directly through it, but it converts incoming requests to, and generates"," * responses, from Request and Response objects that are defined by this"," * framework in a way that's not particular to Koa. This controller thereby"," * acts as a translation-layer between Koa and the rest of this json-api"," * framework."," *"," * @param {Object} options A set of configuration options."," *"," * @param {boolean} options.tunnel Whether to turn on PATCH tunneling. See:"," *    http://jsonapi.org/recommendations/#patchless-clients"," *"," * @param {boolean} options.handleContentNegotiation If the JSON API library"," *    can't produce a representation for the response that the client can"," *    `Accept`, should it return 406 or should it hand the request back to"," *    Koa (i.e. yield next) so that subsequent handlers can attempt to"," *    find an alternate representation? By default, it does the former. But you"," *    can set this option to false to have this code just pass on to Koa."," */","","var KoaStrategy = (function (_Base) {","  _inherits(KoaStrategy, _Base);","","  function KoaStrategy(apiController, docsController, options) {","    _classCallCheck(this, KoaStrategy);","","    _get(Object.getPrototypeOf(KoaStrategy.prototype), \"constructor\", this).call(this, apiController, docsController, options);","  }","","  // For requests like GET /:type, GET /:type/:id/:relationship,","  // POST /:type PATCH /:type/:id, PATCH /:type, DELETE /:type/:idOrLabel,","  // DELETE /:type, GET /:type/:id/links/:relationship,","  // PATCH /:type/:id/links/:relationship, POST /:type/:id/links/:relationship,","  // and DELETE /:type/:id/links/:relationship.","","  _createClass(KoaStrategy, [{","    key: \"apiRequest\",","    value: function apiRequest() {","      var strategy = this;","      return _regeneratorRuntime.mark(function callee$2$0(next) {","        var ctx, reqObj, resObj, delegate406Handling;","        return _regeneratorRuntime.wrap(function callee$2$0$(context$3$0) {","          while (1) switch (context$3$0.prev = context$3$0.next) {","            case 0:","              ctx = this;","              context$3$0.prev = 1;","              context$3$0.next = 4;","              return strategy.buildRequestObject(ctx.req, ctx.protocol, ctx.host, ctx.params);","","            case 4:","              reqObj = context$3$0.sent;","              context$3$0.next = 7;","              return strategy.api.handle(reqObj, ctx);","","            case 7:","              resObj = context$3$0.sent;","              delegate406Handling = strategy.sendResources(resObj, ctx);","","              if (!delegate406Handling) {","                context$3$0.next = 12;","                break;","              }","","              context$3$0.next = 12;","              return next;","","            case 12:","              context$3$0.next = 17;","              break;","","            case 14:","              context$3$0.prev = 14;","              context$3$0.t0 = context$3$0[\"catch\"](1);","","              strategy.sendError(context$3$0.t0, this);","","            case 17:","            case \"end\":","              return context$3$0.stop();","          }","        }, callee$2$0, this, [[1, 14]]);","      });","    }","","    // For requests for the documentation.","  }, {","    key: \"docsRequest\",","    value: function docsRequest() {","      var strategy = this;","      return _regeneratorRuntime.mark(function callee$2$0(next) {","        var ctx, reqObj, resObj, delegate406Handling;","        return _regeneratorRuntime.wrap(function callee$2$0$(context$3$0) {","          while (1) switch (context$3$0.prev = context$3$0.next) {","            case 0:","              ctx = this;","              context$3$0.prev = 1;","              context$3$0.next = 4;","              return strategy.buildRequestObject(ctx.req, ctx.protocol, ctx.host, ctx.params);","","            case 4:","              reqObj = context$3$0.sent;","              context$3$0.next = 7;","              return strategy.docs.handle(reqObj, ctx);","","            case 7:","              resObj = context$3$0.sent;","              delegate406Handling = strategy.sendResources(resObj, ctx);","","              if (!delegate406Handling) {","                context$3$0.next = 12;","                break;","              }","","              context$3$0.next = 12;","              return next;","","            case 12:","              context$3$0.next = 17;","              break;","","            case 14:","              context$3$0.prev = 14;","              context$3$0.t0 = context$3$0[\"catch\"](1);","","              strategy.sendError(context$3$0.t0, this);","","            case 17:","            case \"end\":","              return context$3$0.stop();","          }","        }, callee$2$0, this, [[1, 14]]);","      });","    }","  }, {","    key: \"sendResources\",","    value: function sendResources(responseObject, ctx) {","      if (responseObject.headers.vary) {","        (0, _vary2[\"default\"])(ctx.res, responseObject.headers.vary);","      }","","      if (!responseObject.contentType) {","        if (this.config.handleContentNegotiation) {","          ctx.status = 406;","        } else {","          return true;","        }","      } else {","        ctx.set(\"Content-Type\", responseObject.contentType);","        ctx.status = responseObject.status || 200;","","        if (responseObject.headers.location) {","          ctx.set(\"Location\", responseObject.headers.location);","        }","","        if (responseObject.body !== null) {","          ctx.body = new Buffer(responseObject.body);","        }","      }","    }","","    /**","     * A user of this library may wish to send an error response for an exception","     * that originated outside of the JSON API Pipeline and that's outside the","     * main spec's scope (e.g. an authentication error). So, the controller","     * exposes this method which allows them to do that.","     *","     * @param {Error|APIError|Error[]|APIError[]} errors Error or array of errors","     * @param {Object} ctx Koa's context object","     */","  }, {","    key: \"sendError\",","    value: function sendError(errors, ctx) {","      var _this = this;","","      _controllersAPI2[\"default\"].responseFromExternalError(errors, ctx.headers.accept).then(function (responseObject) {","        return _this.sendResources(responseObject, ctx);","      })[\"catch\"](function (err) {","        // if we hit an error generating our error...","        ctx[\"throw\"](err.message, err.status);","      });","    }","  }]);","","  return KoaStrategy;","})(_Base3[\"default\"]);","","exports[\"default\"] = KoaStrategy;","module.exports = exports[\"default\"];"],"l":{"3":1,"5":1,"7":1,"9":1,"11":1,"13":1,"15":1,"19":1,"21":1,"23":1,"25":1,"27":1,"29":1,"52":1,"53":1,"55":1,"56":0,"58":0,"67":1,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"78":0,"79":0,"82":0,"83":0,"84":0,"87":0,"88":0,"90":0,"91":0,"92":0,"95":0,"96":0,"99":0,"100":0,"103":0,"104":0,"106":0,"110":0,"120":0,"121":0,"122":0,"123":0,"124":0,"126":0,"127":0,"128":0,"129":0,"132":0,"133":0,"134":0,"137":0,"138":0,"140":0,"141":0,"142":0,"145":0,"146":0,"149":0,"150":0,"153":0,"154":0,"156":0,"160":0,"168":0,"169":0,"172":0,"173":0,"174":0,"176":0,"179":0,"180":0,"182":0,"183":0,"186":0,"187":0,"204":0,"206":0,"207":0,"210":0,"215":1,"218":1,"219":1}},"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/templates/ConditionalSection.js":{"path":"/home/travis/build/npmtest/node-npmtest-json-api/node_modules/json-api/templates/ConditionalSection.js","s":{"1":2,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":28},"end":{"line":3,"column":38}}},"3":{"name":"a","line":3,"loc":{"start":{"line":3,"column":39},"end":{"line":3,"column":52}}},"4":{"name":"(anonymous_4)","line":3,"loc":{"start":{"line":3,"column":101},"end":{"line":3,"column":112}}},"5":{"name":"(anonymous_5)","line":3,"loc":{"start":{"line":3,"column":513},"end":{"line":3,"column":524}}},"6":{"name":"(anonymous_6)","line":3,"loc":{"start":{"line":3,"column":566},"end":{"line":3,"column":576}}},"7":{"name":"(anonymous_7)","line":3,"loc":{"start":{"line":3,"column":645},"end":{"line":3,"column":655}}},"8":{"name":"(anonymous_8)","line":5,"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":3,"column":2},"end":{"line":3,"column":1007}},"3":{"start":{"line":3,"column":39},"end":{"line":3,"column":489}},"4":{"start":{"line":3,"column":53},"end":{"line":3,"column":68}},"5":{"start":{"line":3,"column":68},"end":{"line":3,"column":85}},"6":{"start":{"line":3,"column":85},"end":{"line":3,"column":99}},"7":{"start":{"line":3,"column":99},"end":{"line":3,"column":138}},"8":{"start":{"line":3,"column":113},"end":{"line":3,"column":136}},"9":{"start":{"line":3,"column":138},"end":{"line":3,"column":189}},"10":{"start":{"line":3,"column":189},"end":{"line":3,"column":248}},"11":{"start":{"line":3,"column":248},"end":{"line":3,"column":299}},"12":{"start":{"line":3,"column":299},"end":{"line":3,"column":409}},"13":{"start":{"line":3,"column":409},"end":{"line":3,"column":488}},"14":{"start":{"line":3,"column":489},"end":{"line":3,"column":547}},"15":{"start":{"line":3,"column":525},"end":{"line":3,"column":545}},"16":{"start":{"line":3,"column":547},"end":{"line":3,"column":626}},"17":{"start":{"line":3,"column":577},"end":{"line":3,"column":604}},"18":{"start":{"line":3,"column":604},"end":{"line":3,"column":624}},"19":{"start":{"line":3,"column":626},"end":{"line":3,"column":830}},"20":{"start":{"line":3,"column":656},"end":{"line":3,"column":817}},"21":{"start":{"line":3,"column":817},"end":{"line":3,"column":828}},"22":{"start":{"line":3,"column":830},"end":{"line":3,"column":995}},"23":{"start":{"line":3,"column":995},"end":{"line":3,"column":1003}},"24":{"start":{"line":5,"column":2},"end":{"line":8,"column":5}},"25":{"start":{"line":6,"column":4},"end":{"line":6,"column":41}},"26":{"start":{"line":7,"column":4},"end":{"line":7,"column":15}}},"branchMap":{"1":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":299},"end":{"line":3,"column":338}},{"start":{"line":3,"column":340},"end":{"line":3,"column":408}}]},"2":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":442},"end":{"line":3,"column":465}},{"start":{"line":3,"column":466},"end":{"line":3,"column":488}}]},"3":{"line":3,"type":"cond-expr","locations":[{"start":{"line":3,"column":763},"end":{"line":3,"column":788}},{"start":{"line":3,"column":789},"end":{"line":3,"column":815}}]}},"code":["$(function() {","  //just the conditional section widget from https://github.com/ethanresnick/ConditionalSection","  var ConditionalSections = function(){function a(a){var b,c,d=this;this.container=a;b={that:this};c=function(a){return d.handleEvent(a)};this.toggle=a.find(\".\"+this.constants.classToggle);this.section=a.find(\".\"+this.constants.classSection).eq(0);this.isShown=0<this.toggle.find(\":checked\").length;0===this.toggle.find(\"input, a\").length&&this.toggle.contents().wrap('<a href=\"\" onclick=\"return false;\" />');this.toggle.find(\"input\").length?this.toggle.change(b,c):this.toggle.click(b,c)}a.prototype.handleEvent=function(a){return this.update()};a.prototype.update=function(){this.isShown=!this.isShown;return this.render()};a.prototype.render=function(){this.container.removeClass(this.constants.classHidden+\" \"+this.constants.classShown).addClass(this.isShown?this.constants.classShown:this.constants.classHidden);return null};a.prototype.constants={classContainer:\"conditional-section\",classHidden:\"condition-not-met\",classShown:\"condition-met\",classSection:\"contents\",classToggle:\"toggle\"};return a}();","","  $('.conditional-section').each(function() {","    x = new ConditionalSections($(this));","    x.render();","  });","})"],"l":{"1":2,"3":1,"5":0,"6":0,"7":0}}}